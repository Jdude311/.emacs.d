"37c91d27c4889b8b325d5630a6db9007c81c7341"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#("
" 0 1 (fontified t)) . -215) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -216) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t)) . -217) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -218) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 219) nil (24918 13723 317060 745000) 0 nil]) (246) nil (24918 13723 317130 957000) 0 nil]) ((247 . 248) (#("0" 0 1 (fontified t)) . -247) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 248 (247 . 248)) nil (24918 13723 317240 612000) 0 nil]) ((#(")" 0 1 (fontified t)) . -247) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#(")" 0 1 (fontified t)) . -248) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 249 (t 24918 13705 915387 386000)) nil (24918 13723 317674 715000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1)) nil (24918 13705 894278 654000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1)) nil (24918 13705 894302 619000) 0 nil]) ((1 . 3) (t 24918 13556 889224 653000)) nil (24918 13705 894318 218000) 0 nil]) ((1878 . 5497) (#("  :hook
  (prog-mode . highlight-indent-guides-mode))

(setq-default indicate-empty-lines t)
(define-fringe-bitmap 'tilde [0 0 0 113 219 142 0 0] nil nil 'center)
(setcdr (assq 'empty-line fringe-indicator-alist) 'tilde)
(set-fringe-bitmap-face 'tilde 'font-lock-function-name-face)

(use-package highlight-numbers
  :hook (prog-mode . highlight-numbers-mode))

(use-package lsp-mode
  :ensure t
  :init
  (setq lsp-keymap-prefix \"C-c l\")
  :commands lsp lsp-deferred
  :hook ((lsp-after-open . lsp-enable-imenu)
         (lsp-after-open . lsp-toggle-symbol-highlight)
         (lsp-mode . lsp-enable-which-key-integration)
         (lsp-after-open . (lambda ()
                             (setq-local company-minimum-prefix-length 1
                                         company-idle-delay 0.0) ;; default is 0.2
                             )))
  :bind (:map lsp-mode-map
              (\"C-c l t\" . lsp-describe-thing-at-point)
              (\"C-c l d\" . lsp-ui-doc-show))
  :config
  (setq lsp-prefer-flymake nil)
  (setq lsp-auto-guess-root t ; Detect project root
        lsp-keep-workspace-alive nil ; Auto-kill LSP server
        lsp-prefer-capf t
        lsp-enable-indentation t
        lsp-enable-symbol-highlighting nil
        lsp-enable-on-type-formatting nil)
  :hook ((c-mode . lsp)
         (python-mode . lsp)))

;; lsp-ui: This contains all the higher level UI modules of lsp-mode, like flycheck support and code lenses.
;; https://github.com/emacs-lsp/lsp-ui
(use-package lsp-ui
  :ensure t
  :config
  (define-key lsp-ui-mode-map [remap xref-find-definitions] #'lsp-ui-peek-find-definitions)
  (define-key lsp-ui-mode-map [remap xref-find-references] #'lsp-ui-peek-find-references)
  (setq lsp-ui-sideline-enable nil
        lsp-ui-sideline-update-mode 'line
        lsp-ui-sideline-show-code-actions t
        lsp-ui-sideline-show-hover t
        lsp-ui-doc-enable t
        lsp-ui-doc-delay 1.0
        lsp-ui-doc-position 'bottom
        lsp-ui-doc-alignment 'frame
        lsp-ui-doc-include-signature t
        lsp-ui-doc-use-childframe t
        lsp-ui-doc-include-signature t
        lsp-eldoc-enable-hover nil ; Disable eldoc displays in minibuffer
        lsp-ui-doc-position 'at-point
        lsp-ui-imenu-enable t
        lsp-ui-sideline-ignore-duplicate t)
  :hook ((python-mode . lsp-ui-mode)
         (c-mode . lsp-ui-mode)))

;; debugger adapter protocol support for emacs
;; https://github.com/emacs-lsp/dap-mode/
(use-package dap-mode
  :ensure t
  :defer 4
  :config
  ;; call dap-hydra when going to the next breakpoint
  (add-hook 'dap-stopped-hook
            (lambda (arg) (call-interactively #'dap-hydra)))
  (add-hook 'dap-mode-hook #'dap-ui-mode) ; use a hook so users can remove it
  (dap-mode 1))

(setq flycheck-color-mode-line-face-to-color 'mode-line-buffer-id)

(use-package company
  :ensure t
  :hook
  (prog-mode . company-mode))

(use-package linum-mode
  :ensure nil
  :hook
  (prog-mode . linum-mode))

(add-hook 'prog-mode-hook 'hl-line-mode)

(setq highlight-indent-guides-method 'column)

(setq
 org-enforce-todo-dependencies t
 org-export-with-broken-links 'mark
 org-file-apps
 '((auto-mode . \"setsid -w xdg-open %s\")
   (default . \"sleep 1\")
   (\"\\\\.mm\\\\'\" . default)
   (\"\\\\.x?html?\\\\'\" . default)
   (\"\\\\.pdf\\\\'\" . \"chromium %s\")
   (\"\\\\.docx\\\\'\" . \"lowriter %s\")
   (\"\\\\.odt\\\\'\" . system))
 org-fontify-emphasized-text t
 org-fontify-quote-and-verse-blocks t
 org-format-latex-options
 '(:foreground default :background default :scale 1.5 :html-foreground \"Black\" :html-background \"Transparent\" :html-scale 1.0 :matchers
" 0 2 (fontified nil) 2 7 (face font-lock-builtin-face fontified nil) 7 56 (fontified nil) 56 68 (face font-lock-keyword-face fontified nil) 68 285 (fontified nil) 285 296 (face font-lock-keyword-face fontified nil) 296 297 (fontified nil) 297 314 (face font-lock-constant-face fontified nil) 314 317 (fontified nil) 317 322 (face font-lock-builtin-face fontified nil) 322 353 (fontified nil) 353 361 (fontified nil) 361 363 (fontified nil) 363 374 (face font-lock-keyword-face fontified nil) 374 375 (fontified nil) 375 383 (face font-lock-constant-face fontified nil) 383 386 (fontified nil) 386 393 (face font-lock-builtin-face fontified nil) 393 398 (fontified nil) 398 403 (face font-lock-builtin-face fontified nil) 403 407 (fontified nil) 407 411 (face font-lock-keyword-face fontified nil) 411 430 (fontified nil) 430 437 (face font-lock-string-face fontified nil) 437 441 (fontified nil) 441 450 (face font-lock-builtin-face fontified nil) 450 470 (fontified nil) 470 475 (face font-lock-builtin-face fontified nil) 475 652 (fontified nil) 652 658 (face font-lock-keyword-face fontified nil) 658 692 (fontified nil) 692 702 (face font-lock-keyword-face fontified nil) 702 800 (fontified nil) 800 803 (face font-lock-comment-delimiter-face fontified nil) 803 818 (face font-lock-comment-face fontified nil) 818 853 (fontified nil) 853 858 (face font-lock-builtin-face fontified nil) 858 860 (fontified nil) 860 861 (face font-lock-builtin-face fontified nil) 861 864 (face font-lock-builtin-face fontified nil) 864 878 (fontified nil) 878 2488 (fontified nil) 2488 2490 (fontified nil) 2490 2496 (fontified nil face font-lock-builtin-face) 2496 2499 (fontified nil) 2499 2501 (fontified nil) 2501 2508 (fontified nil face font-lock-builtin-face) 2508 2509 (fontified nil) 2509 2511 (fontified nil) 2511 2514 (fontified nil face font-lock-comment-delimiter-face) 2514 2563 (fontified nil face font-lock-comment-face) 2563 2593 (fontified nil) 2593 2606 (fontified nil) 2606 2612 (fontified nil face font-lock-keyword-face) 2612 2654 (fontified nil) 2654 2696 (fontified nil) 2696 2698 (fontified nil face font-lock-comment-delimiter-face) 2698 2732 (fontified nil face font-lock-comment-face) 2732 2748 (fontified nil) 2748 2750 (fontified nil) 2750 2754 (fontified nil face font-lock-keyword-face) 2754 2818 (fontified nil) 2818 2829 (fontified nil face font-lock-keyword-face) 2829 2830 (fontified nil) 2830 2837 (fontified nil face font-lock-constant-face) 2837 2840 (fontified nil) 2840 2847 (fontified nil face font-lock-builtin-face) 2847 2852 (fontified nil) 2852 2857 (fontified nil face font-lock-builtin-face) 2857 2890 (fontified nil) 2890 2901 (fontified nil face font-lock-keyword-face) 2901 2902 (fontified nil) 2902 2912 (fontified nil face font-lock-constant-face) 2912 2913 (fontified nil) 2913 2915 (fontified nil) 2915 2922 (fontified nil face font-lock-builtin-face) 2922 2929 (fontified nil) 2929 2934 (fontified nil face font-lock-builtin-face) 2934 2937 (fontified nil) 2937 2963 (fontified nil) 2963 2980 (fontified nil) 2980 2988 (fontified nil) 2988 2993 (fontified nil) 2993 3005 (fontified nil) 3005 3007 (fontified nil) 3007 3011 (fontified nil face font-lock-keyword-face) 3011 3054 (fontified nil) 3054 3058 (fontified nil face font-lock-keyword-face) 3058 3059 (fontified nil) 3059 3063 (fontified nil) 3063 3143 (fontified nil) 3143 3159 (fontified nil) 3159 3182 (fontified nil face font-lock-string-face) 3182 3184 (fontified nil) 3184 3198 (fontified nil) 3198 3207 (fontified nil face font-lock-string-face) 3207 3209 (fontified nil) 3209 3213 (fontified nil) 3213 3223 (fontified nil face font-lock-string-face) 3223 3235 (fontified nil) 3235 3239 (fontified nil) 3239 3254 (fontified nil face font-lock-string-face) 3254 3266 (fontified nil) 3266 3270 (fontified nil) 3270 3281 (fontified nil face font-lock-string-face) 3281 3284 (fontified nil) 3284 3297 (fontified nil face font-lock-string-face) 3297 3299 (fontified nil) 3299 3303 (fontified nil) 3303 3315 (fontified nil face font-lock-string-face) 3315 3318 (fontified nil) 3318 3331 (fontified nil face font-lock-string-face) 3331 3333 (fontified nil) 3333 3337 (fontified nil) 3337 3348 (fontified nil face font-lock-string-face) 3348 3360 (fontified nil) 3360 3455 (fontified nil) 3455 3458 (fontified nil) 3458 3469 (fontified nil face font-lock-builtin-face) 3469 3478 (fontified nil) 3478 3489 (fontified nil face font-lock-builtin-face) 3489 3498 (fontified nil) 3498 3504 (fontified nil face font-lock-builtin-face) 3504 3505 (fontified nil) 3505 3509 (fontified nil) 3509 3525 (fontified nil face font-lock-builtin-face) 3525 3526 (fontified nil) 3526 3533 (fontified nil face font-lock-string-face) 3533 3534 (fontified nil) 3534 3547 (fontified nil face font-lock-builtin-face) 3547 3550 (fontified nil face font-lock-builtin-face) 3550 3551 (fontified nil) 3551 3564 (fontified nil face font-lock-string-face) 3564 3565 (fontified nil) 3565 3576 (fontified nil face font-lock-builtin-face) 3576 3581 (fontified nil) 3581 3590 (fontified nil face font-lock-builtin-face) 3590 3591 (fontified nil)) . 1878) (undo-tree-id1 . -2488) (undo-tree-id2 . -3494) (undo-tree-id3 . -3494) (t 24918 13512 382583 91000)) nil (24918 13705 894353 604000) 0 nil]) ((#(" " 0 1 (fontified t)) . 5512) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1)) nil (24918 13512 375152 648000) 0 nil]) ((#(" " 0 1 (fontified t)) . 5513)) nil (24918 13512 375234 401000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 5513) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1)) nil (24918 13512 375289 274000) 0 nil]) ((#("(" 0 1 (fontified t)) . 5513)) nil (24918 13512 375306 346000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 5513) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1)) nil (24918 13512 375521 169000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 5513)) nil (24918 13512 375564 932000) 0 nil]) ((#("\\" 0 1 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face))) . 5515)) nil (24918 13512 375574 139000) 0 nil]) ((#("\\" 0 1 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face))) . 5515) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1)) nil (24918 13512 375603 324000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 5515) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (t 24918 13503 792572 636000)) nil (24918 13512 375708 160000) 0 nil]) ((5517 . 5521) (#("(" 0 1 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face))) . -5517) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 5518 (5516 . 5518) (#("(" 0 1 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face))) . -5516) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -5517) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 5518 (5516 . 5518) (#("c" 0 1 (fontified t face font-lock-string-face)) . -5516) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 5517 (5513 . 5517) (#(":" 0 1 (fontified t)) . -5513) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) 5514 (5512 . 5514) (t 24918 13488 285887 256000)) nil (24918 13503 771312 495000) 0 nil]) ((5508 . 5509) (#("]" 0 1 (fontified t face font-lock-string-face)) . -5508) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 5509 (5508 . 5509)) nil (24918 13488 265552 182000) 0 nil]) ((5507 . 5514)) nil (24918 13488 265581 146000) 0 nil]) ((#("\"\\[\")))" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face (font-lock-warning-face font-lock-string-face) help-echo #1="This \\ has no effect") 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 7 (fontified t)) . 5507) (undo-tree-id280 . 5) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2)) nil (24918 13488 265867 904000) 0 nil]) ((5507 . 5508)) nil (24918 13488 265895 727000) 0 nil]) ((5507 . 5508)) nil (24918 13488 265905 184000) 0 nil]) ((5507 . 5508)) nil (24918 13488 265914 131000) 0 nil]) ((5507 . 5508)) nil (24918 13488 265924 561000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 5507) (undo-tree-id303 . 1)) nil (24918 13488 265941 182000) 0 nil]) ((#("[" 0 1 (fontified t)) . 5507) (undo-tree-id304 . 1)) nil (24918 13488 265958 514000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 5507) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1)) nil (24918 13488 266070 94000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 5507)) nil (24918 13488 266094 9000) 0 nil]) ((5507 . 5514)) nil (24918 13488 266102 855000) 0 nil]) ((#("\"\\[\")))" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face (font-lock-warning-face font-lock-string-face) help-echo #1#) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 7 (fontified t)) . 5507) (undo-tree-id327 . 5) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2)) nil (24918 13488 266210 928000) 0 nil]) ((#("\"\\(\" " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face (font-lock-warning-face font-lock-string-face) help-echo #1#) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t)) . 5507) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2)) nil (24918 13488 266301 358000) 0 nil]) ((#("  " 0 2 (fontified t)) . -5484) (#("  " 0 2 (fontified t)) . -5334) (#("  " 0 2 (fontified t)) . -5214) (#("  " 0 2 (fontified t)) . -5180) (#("  " 0 2 (fontified t)) . -5147) (#("  " 0 2 (fontified t)) . -5116) (#("  " 0 2 (fontified t)) . -5090) (#("  " 0 2 (fontified t)) . -5065) (#("  " 0 2 (fontified t)) . -5022) (4813 . 4815) (4805 . 4807) (4791 . 4793) (#("  " 0 2 (fontified t)) . -4612) (#("  " 0 2 (fontified t)) . -4534) (#("  " 0 2 (fontified t)) . -4483) (#("  " 0 2 (fontified t)) . -4443) (#("  " 0 2 (fontified t)) . -4389) (#("  " 0 2 (fontified t)) . -4379) (#("  " 0 2 (fontified t)) . -4368) (#("  " 0 2 (fontified nil)) . -4356) (#("  " 0 2 (fontified nil)) . -4332) (#("  " 0 2 (fontified nil)) . -4290) (#("  " 0 2 (fontified nil)) . -4243) (2193 . 2195) (1886 . 1888) (1878 . 1880) 5542 (t 24918 13461 179188 383000)) nil (24918 13488 266366 229000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 5542) (undo-tree-id256 . 1)) nil (24918 13461 174117 579000) 0 nil]) ((#("\\" 0 1 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face))) . 5537) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (t 24918 13455 299181 485000)) nil (24918 13461 174214 301000) 0 nil]) ((#("\\" 0 1 (fontified t face (font-lock-regexp-grouping-backslash font-lock-warning-face font-lock-string-face) help-echo #1#)) . 5538)) nil (24918 13455 277637 926000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 5544) (t 24918 13450 102508 749000)) nil (24918 13455 277665 137000) 0 nil]) ((5543 . 5545)) nil (24918 13450 96413 991000) 0 nil]) ((5536 . 5537)) nil (24918 13450 96437 906000) 0 nil]) ((5536 . 5537) (t 24918 13434 975824 563000)) nil (24918 13450 96455 148000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 5541)) nil (24918 13434 958867 976000) 0 nil]) ((#("\\" 0 1 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face))) . 5536) (#("\\" 0 1 (fontified t face font-lock-string-face)) . -5536) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 5537 (5536 . 5537)) nil (24918 13434 958964 717000) 0 nil]) ((#("\\" 0 1 (fontified t)) . -5535) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 5536 (5535 . 5536) (#(" " 0 1 (fontified t)) . -5535) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 5536 (#("asd" 0 3 (fontified t)) . -5536) (undo-tree-id212 . -3) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) 5539 (#("f" 0 1 (fontified t)) . -5539) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 5540 (5535 . 5540)) nil (24918 13434 959450 900000) 0 nil]) ((5535 . 5536) (#("'" 0 1 (fontified t)) . 5535) (5535 . 5536) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 5535) (5535 . 5536) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 5535) (t 24918 13390 539107 736000)) nil (24918 13434 959545 477000) 0 nil]) ((5260 . 5261) (#(")" 0 1 (fontified t)) . -5260) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(")" 0 1 (fontified t)) . -5261) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 5262 (5261 . 5262)) nil (24918 13390 522640 299000) 0 nil]) ((5546 . 5549) (#(")" 0 1 (fontified t)) . -5546) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(")" 0 1 (fontified t)) . -5547) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(")" 0 1 (fontified t)) . -5548) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#(")" 0 1 (fontified t)) . -5549) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 5550 (5549 . 5550) (t 24918 13299 495678 377000)) nil (24918 13390 523415 474000) 0 nil]) nil nil (24918 13390 523501 686000) 0 nil] #2# 10516 46 nil)