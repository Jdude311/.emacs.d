"f06595b7944fd8f3ee29bcdc59d3fa981275a699"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#25=[nil nil ((27966 . 30784) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up todo-state-down priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name Meetings :tag meeting :tag clubs :tag club :order 2) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1408 (fontified t line-prefix #2=#("      " 0 6 (face org-indent)) wrap-prefix #3=#("      " 0 6 (face org-indent)) face org-table org-category #1="settings") 1408 1409 (fontified t line-prefix #2# wrap-prefix #3# org-category #1#) 1409 2817 (fontified t line-prefix #2# wrap-prefix #4=#("      " 0 6 (face org-indent)) face org-table org-category #1#) 2817 2818 (fontified t line-prefix #2# wrap-prefix #4# org-category #1#)) . 27966) (undo-tree-id15 . -2818) (t 24943 12694 432288 503000)) nil (24943 12806 254472 836000) 0 nil]) ((27966 . 30784) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up todo-state-down priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name Meetings :tag meeting :tag clubs :tag club :order 2) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1408 (fontified t line-prefix #5=#("      " 0 6 (face org-indent)) wrap-prefix #6=#("      " 0 6 (face org-indent)) face org-table) 1408 1409 (fontified t line-prefix #5# wrap-prefix #6#) 1409 2817 (fontified t line-prefix #5# wrap-prefix #7=#("      " 0 6 (face org-indent)) face org-table) 2817 2818 (fontified t line-prefix #5# wrap-prefix #7#)) . 27966) (undo-tree-id14 . -2818) (t 24943 12498 902537 19000)) nil (24943 12694 426227 139000) 0 nil]) ((#("  (setq org-agenda-skip-scheduled-if-deadline-is-shown 'always)
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t org-category #11="settings" line-prefix #10=#("      " 0 6 (face org-indent)) wrap-prefix #9=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face #8=(org-block) display nil) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t org-category #11# line-prefix #10# wrap-prefix #9# font-lock-multiline t face #8# display nil) 3 7 (fontified t font-lock-fontified t help-echo nil src-block t org-category #11# line-prefix #10# wrap-prefix #9# font-lock-multiline t face (font-lock-keyword-face . #8#) display nil) 7 64 (fontified t font-lock-fontified t help-echo nil src-block t org-category #11# line-prefix #10# wrap-prefix #9# font-lock-multiline t face #8# display nil)) . 25126) (undo-tree-id0 . -62) (undo-tree-id1 . -62) (undo-tree-id2 . -62) (undo-tree-id3 . -62) (undo-tree-id4 . -62) (undo-tree-id5 . -62) (undo-tree-id6 . -62) (undo-tree-id7 . -62) (undo-tree-id8 . -62) (undo-tree-id9 . -62) (undo-tree-id10 . -62) (undo-tree-id11 . -62) (undo-tree-id12 . -62) (undo-tree-id13 . -62) 25188) nil (24943 12498 885926 885000) 0 nil]) ((28030 . 30848) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up todo-state-down priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name Meetings :tag meeting :tag clubs :tag club :order 2) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 217 (fontified t org-category #11# line-prefix #10# wrap-prefix #12=#("      " 0 6 (face org-indent)) face org-table) 217 717 (fontified t org-category #11# line-prefix #10# wrap-prefix #12# face org-table) 717 1217 (fontified t org-category #11# line-prefix #10# wrap-prefix #12# face org-table) 1217 1408 (fontified t org-category #11# line-prefix #10# wrap-prefix #12# face org-table) 1408 1409 (fontified t org-category #11# line-prefix #10# wrap-prefix #12#) 1409 1717 (fontified t org-category #11# line-prefix #10# wrap-prefix #13=#("      " 0 6 (face org-indent)) face org-table) 1717 2217 (fontified t org-category #11# line-prefix #10# wrap-prefix #13# face org-table) 2217 2717 (fontified t org-category #11# line-prefix #10# wrap-prefix #13# face org-table) 2717 2817 (fontified t org-category #11# line-prefix #10# wrap-prefix #13# face org-table) 2817 2818 (fontified t org-category #11# line-prefix #10# wrap-prefix #13#)) . 28030) (24323 . 24325) (24302 . 24323)) nil (24943 12498 885936 22000) 0 nil]) ((#("not-today" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t org-category #11# line-prefix #10# wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 24302) (t 24943 11930 283953 251000)) nil (24943 12498 885939 999000) 0 nil]) ((18443 . 20078) (#("** ORG-ROAM                                                           :test:
#+begin_src elisp
  (use-package org-roam
    :ensure t
    :hook ((after-init . org-roam-setup)
           (org-roam-backlinks-mode . visual-line-mode))
    :config
    '(org-roam-dailies-capture-templates
      '((\"d\" \"default\" entry \"* %?\\
    \" :target
    (file+head \"%<%Y-%m-%d>.org\" \"#+title: %<%Y-%m-%d>
          \")
    :empty-lines-after 1
    :empty-lines-before 1)))

    (setq org-roam-capture-templates
          '((\"d\" \"default\" plain \"%?\" :target
             (file+head \"pages/%<%Y%m%d%H%M%S>-${slug}.org\" \"#+title: ${title}
  \")
             :unnarrowed t)))
    (setq org-roam-v2-ack t)
    (org-roam-setup)
    (setq org-roam-directory \"~/notes\")
    (setq org-roam-dailies-directory \"journals/\")
    (setq org-roam-mode-section-functions
          (list #'org-roam-backlinks-section
                #'org-roam-reflinks-section
                ;; #'org-roam-unlinked-references-section
                ))
    :bind ((\"C-c n f\" . org-roam-node-find)
           (\"C-c n c\" . org-roam-capture)
           (\"C-c n g\" . org-roam-ui-mode)
           (\"C-c n r\" . org-roam-node-random)		    
           (\"C-c n d\" . org-roam-dailies-capture-today)
           (:map org-mode-map
                 ((\"C-c n i\" . org-roam-node-insert)
                  (\"C-c C-w\" . org-roam-refile)
                  (\"C-c n o\" . org-id-get-create)
                  (\"C-c n t\" . org-roam-tag-add)
                  (\"C-c n a\" . org-roam-alias-add)
                  (\"C-c n l\" . org-roam-buffer-toggle)))))
  (org-roam-db-autosync-mode)
#+end_src

#+RESULTS:
: t

" 0 1 (face org-level-2 org-category #14="settings" fontified t) 1 3 (face org-level-2 org-category #14# fontified t) 3 11 (face org-level-2 org-category #14# fontified t) 11 70 (face org-level-2 org-category #14# fontified t) 70 75 (keymap #17=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face #16=(org-tag org-level-2) org-category #14# fontified t) 75 76 (keymap #17# mouse-face highlight face #16# rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category #14# fontified t) 76 77 (org-category #14# fontified t) 77 94 (face org-block-begin-line font-lock-multiline t font-lock-fontified t org-category #14# fontified t) 94 95 (display nil face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t org-category #14# fontified t) 95 98 (display nil face #15=(org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 98 109 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 109 110 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 110 118 (display nil face (font-lock-constant-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 118 123 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 123 130 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 130 137 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 137 142 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 142 235 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 235 242 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 242 293 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 293 296 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 296 297 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 297 306 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 306 313 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 313 325 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 325 326 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 326 333 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 333 349 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 349 366 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 366 367 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 367 400 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 400 406 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 406 424 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 424 425 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 425 426 (display nil face (highlight-numbers-number . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 426 431 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 431 450 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 450 451 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 451 452 (display nil face (highlight-numbers-number . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 452 462 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 462 466 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 466 507 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 507 510 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 510 511 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 511 520 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 520 527 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 527 531 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 531 532 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 532 539 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 539 564 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 564 599 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 599 600 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 600 622 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 622 637 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 637 648 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 648 659 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 659 663 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 663 709 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 709 713 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 713 733 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 733 742 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 742 749 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 749 753 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 753 781 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 781 792 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 792 799 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 799 803 (display nil face (font-lock-keyword-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 803 941 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 941 944 (display nil face (font-lock-comment-delimiter-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 944 983 (display nil face (font-lock-comment-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 983 1006 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1006 1011 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1011 1014 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1014 1023 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1023 1058 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1058 1067 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1067 1100 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1100 1109 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1109 1142 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1142 1151 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1151 1194 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1194 1203 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1203 1250 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1250 1254 (display nil face (font-lock-builtin-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1254 1287 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1287 1296 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1296 1340 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1340 1349 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1349 1388 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1388 1397 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1397 1438 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1438 1447 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1447 1487 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1487 1496 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1496 1538 (display nil face #15# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1538 1547 (display nil face (font-lock-string-face . #15#) font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t) 1547 1608 (face #15# font-lock-multiline t src-block t font-lock-fontified t org-category #14# fontified t) 1608 1617 (face org-block-end-line font-lock-multiline t font-lock-fontified t org-category #14# fontified t) 1617 1618 (face org-block-end-line org-category #14# fontified t) 1618 1619 (org-category #14# fontified t) 1619 1629 (face org-meta-line font-lock-fontified t org-category #14# fontified t) 1629 1630 (org-category #14# fontified t) 1630 1632 (face org-code fontified t) 1632 1634 (face org-code fontified t) 1634 1635 (org-category #14# fontified t)) . 18143) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -110) (undo-tree-id18 . -10) (undo-tree-id19 . -110) (undo-tree-id20 . -110) (undo-tree-id21 . -110) (undo-tree-id22 . -110) (undo-tree-id23 . -110) (undo-tree-id24 . -110) (undo-tree-id25 . -110) (undo-tree-id26 . -110) (undo-tree-id27 . -110) (undo-tree-id28 . -110) (undo-tree-id29 . -110) (undo-tree-id30 . -110) (undo-tree-id31 . -92) (undo-tree-id32 . -92) (undo-tree-id33 . -92) (undo-tree-id34 . -92) (undo-tree-id35 . -92) (undo-tree-id36 . -10) (undo-tree-id37 . -10) (undo-tree-id38 . -10) (undo-tree-id39 . -10) (undo-tree-id40 . -10) (undo-tree-id41 . -10) 18153) nil (24943 11930 277832 651000) 0 nil]) ((19773 . 19775) (19773 . 19775) (#(": t
" 0 4 (face org-code org-category #14# fontified t)) . 19773)) nil (24943 11930 277843 170000) 0 nil]) ((20073 . 20075) (20073 . 20075) (#(": t
" 0 4 (face org-code org-category #14# fontified t)) . 20073) (t 24943 11844 418788 417000)) nil (24943 11930 277847 819000) 0 nil]) ((nil rear-nonsticky nil 33473 . 33474) (#("
" 0 1 (fontified nil display nil face #18=(org-block) font-lock-multiline t src-block t font-lock-fontified t org-category #14#)) . -33493) (33469 . 33494) 33405) nil (24943 11844 401885 118000) 0 nil]) ((#("    (pdf-tools-install)
" 0 24 (display nil face #18# font-lock-multiline t src-block t help-echo nil font-lock-fontified t org-category #14# fontified t)) . 33170) (undo-tree-id0 . -18) (undo-tree-id1 . -18) (undo-tree-id2 . -18) (undo-tree-id3 . -18) (undo-tree-id4 . -18) (undo-tree-id5 . -18) (undo-tree-id6 . -18) (undo-tree-id7 . -18) (undo-tree-id8 . -18) (undo-tree-id9 . -18) (undo-tree-id10 . -18) (undo-tree-id11 . -18) (undo-tree-id12 . -18) (undo-tree-id13 . -18) 33188 (t 24942 5141 487476 850000)) nil (24943 11844 401985 594000) 0 nil]) ((28016 . 30834) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up todo-state-down priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name Meetings :tag meeting :tag clubs :tag club :order 2) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1408 (fontified nil org-category #20="settings" line-prefix #19=#("      " 0 6 (face org-indent)) wrap-prefix #21=#("      " 0 6 (face org-indent))) 1408 1409 (fontified nil org-category #20# line-prefix #19# wrap-prefix #21#) 1409 2817 (fontified nil org-category #20# line-prefix #19# wrap-prefix #22=#("      " 0 6 (face org-indent))) 2817 2818 (fontified nil org-category #20# line-prefix #19# wrap-prefix #22#)) . 28016)) nil (24942 5141 486136 713000) 0 nil]) ((25167 . 25174)) nil (24942 5141 486143 636000) 0 nil]) ((#("today" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t org-category #20# line-prefix #19# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25167)) nil (24942 5141 486146 541000) 0 nil]) ((#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #20# line-prefix #19# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25167)) nil (24942 5141 486149 296000) 0 nil]) ((#("'not" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t org-category #20# line-prefix #19# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25167)) nil (24942 5141 486151 631000) 0 nil]) ((#("          org-agenda-skip-scheduled-if-deadline-is-shown 'not-today
" 0 10 (fontified t font-lock-fontified t help-echo nil src-block t org-category #20# line-prefix #19# wrap-prefix #24=#("                " 0 6 (face org-indent) 6 16 (face org-indent)) font-lock-multiline t face #23=(org-block) display nil) 10 68 (fontified t font-lock-fontified t help-echo nil src-block t org-category #20# line-prefix #19# wrap-prefix #24# font-lock-multiline t face #23# display nil)) . 25033) (undo-tree-id0 . -24) (undo-tree-id1 . -24) (undo-tree-id2 . -24) (undo-tree-id3 . -24) (undo-tree-id4 . -24) (undo-tree-id5 . -24) (undo-tree-id6 . -24) (undo-tree-id7 . -24) (undo-tree-id8 . -24) (undo-tree-id9 . -24) (undo-tree-id10 . -24) (undo-tree-id11 . -24) (undo-tree-id12 . -24) (undo-tree-id13 . -24) 25057 (t 24942 4995 821554 902000)) nil (24942 5141 486203 928000) 0 nil]) nil nil (24942 5141 486208 176000) 0 nil] #25# 13987 16 nil)