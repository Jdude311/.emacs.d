"f209c685bfef500aaf136c84a548c6272e604ed3"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#279=[nil nil ((447 . 448)) nil (24918 11128 486184 287000) 0 nil]) ((#("                                      " 0 38 (fontified t line-prefix #1=#("    " 0 4 (face org-indent)) wrap-prefix #("                                              " 0 4 (face org-indent) 4 46 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 445) (undo-tree-id99 . -32) (undo-tree-id100 . -32) (undo-tree-id101 . -32) (undo-tree-id102 . -32) (undo-tree-id103 . -32) (undo-tree-id104 . -38) (undo-tree-id105 . -38) (undo-tree-id106 . -38) (undo-tree-id107 . -38) (undo-tree-id108 . -38) (undo-tree-id109 . -38) (undo-tree-id110 . -38) 344 (483 . 484) (t 24918 11120 822097 8000)) nil (24918 11128 486220 685000) 0 nil]) (525) nil (24918 11128 486225 394000) 0 nil]) ((nil fontified t 445 . 483) (nil font-lock-fontified t 445 . 483) (nil help-echo nil 445 . 483) (nil src-block t 445 . 483) (nil org-category #3="settings" 445 . 483) (nil line-prefix #1# 445 . 483) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 445 . 483) (nil font-lock-multiline t 445 . 483) (nil face (org-block) 445 . 483) (445 . 483) (nil fontified t 501 . 502) (nil line-prefix #1# 501 . 502) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 501 . 502) (nil font-lock-fontified t 501 . 502) (nil help-echo nil 501 . 502) (nil src-block t 501 . 502) (nil font-lock-multiline t 501 . 502) (nil face (org-block) 501 . 502) (501 . 502) (nil fontified t 503 . 504) (nil font-lock-fontified t 503 . 504) (nil help-echo nil 503 . 504) (nil src-block t 503 . 504) (nil line-prefix #1# 503 . 504) (nil wrap-prefix #2=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 503 . 504) (nil font-lock-multiline t 503 . 504) (nil face (org-block) 503 . 504) (503 . 504) (nil fontified t 510 . 514) (nil line-prefix #1# 510 . 514) (nil wrap-prefix #2# 510 . 514) (nil font-lock-fontified t 510 . 514) (nil help-echo nil 510 . 514) (nil src-block t 510 . 514) (nil font-lock-multiline t 510 . 514) (nil face (org-block) 510 . 514) (510 . 514) 344) nil (24918 11120 774043 413000) 0 nil]) ((542 . 543)) nil (24918 11120 774053 182000) 0 nil]) ((nil rear-nonsticky nil 510 . 511) (#("
" 0 1 (fontified nil line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . -542) (510 . 543) (nil fontified t 509 . 510) (nil font-lock-fontified t 509 . 510) (nil help-echo nil 509 . 510) (nil src-block t 509 . 510) (nil line-prefix #1# 509 . 510) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 509 . 510) (nil font-lock-multiline t 509 . 510) (nil face (org-block) 509 . 510) (509 . 510) 511) nil (24918 11120 774060 826000) 0 nil]) ((503 . 509) (#("s" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -503) (undo-tree-id45 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -504) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -505) (undo-tree-id47 . -1) 506 (503 . 506) (501 . 503) 344 (500 . 501) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #1# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -500) (undo-tree-id48 . -1) 501 (491 . 501) (#(":" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -491) (undo-tree-id49 . -1) 492 (491 . 492) (489 . 491) 344 (nil fontified t 488 . 489) (nil font-lock-fontified t 488 . 489) (nil help-echo nil 488 . 489) (nil src-block t 488 . 489) (nil org-category #3# 488 . 489) (nil line-prefix #1# 488 . 489) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 488 . 489) (nil font-lock-multiline t 488 . 489) (nil face (font-lock-comment-face org-block) 488 . 489) (488 . 489) 441) nil (24918 11120 774091 464000) 0 nil]) ((#("  
" 0 2 (fontified t line-prefix #1# wrap-prefix #5=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face #4=(org-block) display nil help-echo nil src-block t) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t org-category #3# line-prefix #1# wrap-prefix #5# font-lock-multiline t face #4# display nil)) . 499) (undo-tree-id50 . 1) (undo-tree-id51 . -1) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 500) nil (24918 11120 774174 890000) 0 nil]) ((499 . 501) 344 (nil fontified t 498 . 499) (nil font-lock-fontified t 498 . 499) (nil help-echo nil 498 . 499) (nil src-block t 498 . 499) (nil org-category #3# 498 . 499) (nil line-prefix #1# 498 . 499) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 498 . 499) (nil font-lock-multiline t 498 . 499) (nil face (font-lock-builtin-face org-block) 498 . 499) (498 . 499) (t 24918 11084 335279 685000) 495) nil (24918 11120 774185 701000) 0 nil]) ((#(":" 0 1 (fontified t line-prefix #1# wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) font-lock-fontified t src-block t help-echo "Hidden behind deeper element; move to another line?" font-lock-multiline t face (font-lock-warning-face org-block) display nil)) . -1190) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 1191 (1190 . 1191) (nil fontified t 982 . 984) (nil font-lock-fontified t 982 . 984) (nil help-echo nil 982 . 984) (nil src-block t 982 . 984) (nil line-prefix #1# 982 . 984) (nil wrap-prefix #6=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 982 . 984) (nil font-lock-multiline t 982 . 984) (nil face (org-block) 982 . 984) (982 . 984) (nil org-category #3# 992 . 994) (nil fontified t 992 . 994) (nil line-prefix #1# 992 . 994) (nil wrap-prefix #6# 992 . 994) (nil font-lock-fontified t 992 . 994) (nil help-echo nil 992 . 994) (nil src-block t 992 . 994) (nil font-lock-multiline t 992 . 994) (nil face (org-block) 992 . 994) (992 . 994) (nil fontified t 1002 . 1004) (nil line-prefix #1# 1002 . 1004) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 1002 . 1004) (nil font-lock-fontified t 1002 . 1004) (nil src-block t 1002 . 1004) (nil help-echo nil 1002 . 1004) (nil font-lock-multiline t 1002 . 1004) (nil face (org-block) 1002 . 1004) (1002 . 1004) (1009 . 1010) (1010 . 1013) (1032 . 1036) (1067 . 1071) (1102 . 1105) (1103 . 1104) (1134 . 1137) (1135 . 1136) (1165 . 1167) 960 (1163 . 1164) (#("0" 0 1 (fontified t line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (highlight-numbers-number org-block) display nil help-echo nil)) . -1163) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 1164 (1163 . 1164)) nil (24918 11084 286858 830000) 0 nil]) ((nil rear-nonsticky nil 1009 . 1010) (#("
" 0 1 (fontified nil line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . -1163) (1008 . 1164) 1007) nil (24918 11084 286869 841000) 0 nil]) ((1002 . 1008) (nil fontified nil 960 . 962) (nil font-lock-fontified t 960 . 962) (nil help-echo nil 960 . 962) (nil org-category #3# 960 . 962) (nil line-prefix #1# 960 . 962) (nil wrap-prefix #("    " 0 4 (face org-indent)) 960 . 962) (nil font-lock-multiline t 960 . 962) (nil face org-block-begin-line 960 . 962) (960 . 962) (nil fontified nil 978 . 980) (nil font-lock-fontified t 978 . 980) (nil help-echo nil 978 . 980) (nil src-block t 978 . 980) (nil org-category #3# 978 . 980) (nil line-prefix #1# 978 . 980) (nil wrap-prefix #("    " 0 4 (face org-indent)) 978 . 980) (nil font-lock-multiline t 978 . 980) (nil face (org-block) 978 . 980) (978 . 980) (nil fontified nil 988 . 990) (nil font-lock-fontified t 988 . 990) (nil help-echo nil 988 . 990) (nil src-block t 988 . 990) (nil org-category #3# 988 . 990) (nil line-prefix #1# 988 . 990) (nil wrap-prefix #("    " 0 4 (face org-indent)) 988 . 990) (nil font-lock-multiline t 988 . 990) (nil face (org-block) 988 . 990) (988 . 990) (994 . 996) (995 . 997) 960 (993 . 994)) nil (24918 11084 286885 10000) 0 nil]) ((15157 . 15159) (15157 . 15159) (#(": t
" 0 4 (fontified t org-category #3# line-prefix #1# wrap-prefix #("    " 0 4 (face org-indent)) face org-code)) . 15157) (t 24918 11043 981781 571000)) nil (24918 11084 286890 580000) 0 nil]) ((5110 . 5112) (5110 . 5112) (#(": t
" 0 4 (fontified t org-category #3# line-prefix #1# wrap-prefix #("    " 0 4 (face org-indent)) face org-code)) . 5110) (t 24918 11028 931720 673000)) nil (24918 11043 947719 801000) 0 nil]) ((#(" " 0 1 (fontified t line-prefix #1# wrap-prefix #7=#("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 4872) (nil org-category #3# 4900 . 4901) (nil fontified t 4900 . 4901) (nil line-prefix #1# 4900 . 4901) (nil wrap-prefix #7# 4900 . 4901) (nil font-lock-fontified t 4900 . 4901) (nil help-echo nil 4900 . 4901) (nil src-block t 4900 . 4901) (nil font-lock-multiline t 4900 . 4901) (nil face (org-block) 4900 . 4901) (4900 . 4901) (nil org-category #3# 4913 . 4914) (nil fontified t 4913 . 4914) (nil line-prefix #1# 4913 . 4914) (nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) 4913 . 4914) (nil font-lock-fontified t 4913 . 4914) (nil help-echo nil 4913 . 4914) (nil src-block t 4913 . 4914) (nil font-lock-multiline t 4913 . 4914) (nil face (org-block) 4913 . 4914) (4913 . 4914) (nil fontified t 4929 . 4930) (nil font-lock-fontified t 4929 . 4930) (nil help-echo nil 4929 . 4930) (nil src-block t 4929 . 4930) (nil line-prefix #1# 4929 . 4930) (nil wrap-prefix #8=#("       " 0 4 (face org-indent) 4 7 (face org-indent)) 4929 . 4930) (nil font-lock-multiline t 4929 . 4930) (nil face (org-block) 4929 . 4930) (4929 . 4930) (nil org-category #3# 4937 . 4939) (nil fontified t 4937 . 4939) (nil line-prefix #1# 4937 . 4939) (nil wrap-prefix #8# 4937 . 4939) (nil font-lock-fontified t 4937 . 4939) (nil src-block t 4937 . 4939) (nil help-echo nil 4937 . 4939) (nil font-lock-multiline t 4937 . 4939) (nil face (org-block) 4937 . 4939) (4937 . 4939) (4947 . 4950) (4997 . 4998) (5022 . 5023) (5051 . 5052) 4870) nil (24918 11028 884112 616000) 0 nil]) ((4995 . 4997)) nil (24918 11028 884123 266000) 0 nil]) (4996) nil (24918 11028 884125 741000) 0 nil]) ((5022 . 5024)) nil (24918 11028 884127 705000) 0 nil]) (5045) nil (24918 11028 884129 698000) 0 nil]) ((5045 . 5046)) nil (24918 11028 884131 662000) 0 nil]) ((4939 . 4944) (#("{" 0 1 (fontified t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4939) (undo-tree-id28 . -1) 4940 (4939 . 4940) (nil fontified nil 4872 . 4873) (nil font-lock-fontified t 4872 . 4873) (nil help-echo nil 4872 . 4873) (nil src-block t 4872 . 4873) (nil org-category #3# 4872 . 4873) (nil line-prefix #1# 4872 . 4873) (nil wrap-prefix #9=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 4872 . 4873) (nil font-lock-multiline t 4872 . 4873) (nil face (org-block) 4872 . 4873) (4872 . 4873) (nil fontified nil 4899 . 4900) (nil font-lock-fontified t 4899 . 4900) (nil help-echo nil 4899 . 4900) (nil src-block t 4899 . 4900) (nil org-category #3# 4899 . 4900) (nil line-prefix #1# 4899 . 4900) (nil wrap-prefix #9# 4899 . 4900) (nil font-lock-multiline t 4899 . 4900) (nil face (org-block) 4899 . 4900) (4899 . 4900) (nil fontified nil 4911 . 4912) (nil font-lock-fontified t 4911 . 4912) (nil help-echo nil 4911 . 4912) (nil src-block t 4911 . 4912) (nil org-category #3# 4911 . 4912) (nil line-prefix #1# 4911 . 4912) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 4911 . 4912) (nil font-lock-multiline t 4911 . 4912) (nil face (org-block) 4911 . 4912) (4911 . 4912) (nil fontified nil 4925 . 4926) (nil font-lock-fontified t 4925 . 4926) (nil help-echo nil 4925 . 4926) (nil src-block t 4925 . 4926) (nil org-category #3# 4925 . 4926) (nil line-prefix #1# 4925 . 4926) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 4925 . 4926) (nil font-lock-multiline t 4925 . 4926) (nil face (org-block) 4925 . 4926) (4925 . 4926) (4933 . 4935) (4934 . 4935) (4981 . 4982) (5008 . 5009) (5032 . 5033) 4870 (4932 . 4933)) nil (24918 11028 884161 508000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((4934 . 4935)) ((#(" " 0 1 (fontified t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 4934) (t 24918 11002 88279 561000)) (24918 11002 53687 514000) 0 nil]) (4934) nil (24918 11002 605813 450000) 0 nil]) ((4980 . 4981)) ((#(" " 0 1 (highlight-indent-guides-prop #11=(0 nil t 1 (column nil highlight-indent-guides-even-face) #10=((#<marker at 2236 in init.el> . #<marker at 11319 in init.el>))) fontified t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 4980)) (24918 11002 729225 503000) 0 nil]) (4980) nil (24918 11003 559689 264000) 0 nil]) ((5005 . 5006) (t 24918 10996 894925 508000)) ((#(" " 0 1 (highlight-indent-guides-prop #16=(0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified t line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 5005)) (24918 11004 23439 256000) 0 nil]) ((#("'" 0 1 (fontified t line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 5005)) ((5005 . 5006)) (24918 11004 347593 78000) 0 nil]) ((#("'" 0 1 (fontified t line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 4980)) ((4980 . 4981)) (24918 11004 533757 299000) 0 nil]) ((#("'" 0 1 (fontified t line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 4934) (t 24918 10992 788242 488000)) ((4934 . 4935)) (24918 11004 675692 825000) 0 nil]) ((nil rear-nonsticky nil 4933 . 4934) (#("
" 0 1 (fontified nil line-prefix #1# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . 5030) (4933 . 5031) (nil org-category #3# 4932 . 4933) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 4932 . 4933) (nil face (font-lock-builtin-face org-block) 4932 . 4933) (4932 . 4933)) ((#("
" 0 1 (fontified nil line-prefix #1# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil org-category #3#)) . 4932) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (nil face (org-block) 4932 . 4933) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 4932 . 4933) (nil org-category nil 4932 . 4933) (nil fontified nil 4932 . 4933) (nil help-echo nil 4932 . 4933) (#(" '(doom-modeline-buffer-modification-icon nil)
 '(doom-modeline-hud nil)
 '(doom-modeline-mode t)
" 0 1 (highlight-indent-guides-prop (0 nil t 1 (column nil highlight-indent-guides-even-face) #10#) fontified nil line-prefix #1# wrap-prefix #13=#("     " 0 4 (face org-indent) 4 5 (face org-indent)) rear-nonsticky nil font-lock-fontified t src-block t font-lock-multiline t face #12=(org-block)) 1 2 (fontified nil line-prefix #1# wrap-prefix #13# font-lock-fontified t src-block t font-lock-multiline t face #12#) 2 47 (fontified nil line-prefix #1# wrap-prefix #13# font-lock-fontified t src-block t font-lock-multiline t face #12#) 47 48 (highlight-indent-guides-prop #11# fontified nil line-prefix #1# wrap-prefix #14=#("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face #12#) 48 49 (fontified nil line-prefix #1# wrap-prefix #14# font-lock-fontified t src-block t font-lock-multiline t face #12#) 49 73 (fontified nil line-prefix #1# wrap-prefix #14# font-lock-fontified t src-block t font-lock-multiline t face #12#) 73 74 (highlight-indent-guides-prop #16# fontified nil line-prefix #1# wrap-prefix #15=#("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face #12#) 74 75 (fontified nil line-prefix #1# wrap-prefix #15# font-lock-fontified t src-block t font-lock-multiline t face #12#) 75 97 (fontified nil line-prefix #1# wrap-prefix #15# font-lock-fontified t src-block t font-lock-multiline t face #12#) 97 98 (fontified nil line-prefix #1# wrap-prefix #15#)) . 4933) (undo-tree-id14 . -97) (undo-tree-id15 . -97) (undo-tree-id16 . 96) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -48) (undo-tree-id20 . -48) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (5030 . 5031) (nil rear-nonsticky t 4933 . 4934)) (24918 11006 910777 409000) 0 nil]) ((#("+" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18=#("    " 0 4 (face org-indent)) org-category #17="settings" src-block t font-lock-fontified t fontified t)) . 5106) (undo-tree-id136 . 1)) nil (24918 11005 900832 542000) 0 nil]) ((5098 . 5106)) nil (24918 10731 764102 630000) 0 nil]) ((#("dark" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #17# src-block t font-lock-fontified t fontified t)) . 5098)) nil (24918 10731 764105 445000) 0 nil]) ((#("-" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #17# src-block t font-lock-fontified t fontified t)) . 5098)) nil (24918 10731 764107 870000) 0 nil]) ((#("doom" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #17# src-block t font-lock-fontified t fontified t)) . 5098) (t 24918 10569 643510 388000)) nil (24918 10731 764110 515000) 0 nil]) ((5103 . 5109)) nil (24918 10569 598184 922000) 0 nil]) ((#("light " 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #19="settings" src-block t font-lock-fontified t fontified t)) . 5103) (undo-tree-id135 . 6)) nil (24918 10569 598201 743000) 0 nil]) ((#("-" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #19# src-block t font-lock-fontified t fontified t)) . 5103)) nil (24918 10569 598205 831000) 0 nil]) ((#("gruvbox" 0 7 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #19# src-block t font-lock-fontified t fontified t)) . 5103) (t 24918 10438 296543 159000)) nil (24918 10569 598208 867000) 0 nil]) ((4981 . 4983) (4970 . 4983) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# fontified nil)) . 4970) (4969 . 4971) (t 24918 10431 489846 836000)) nil (24918 10438 254111 662000) 0 nil]) ((4949 . 4958) (#("=" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #18# fontified t help-echo nil)) . -4949) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 4950 (4935 . 4950) (4933 . 4935) 4870 (4932 . 4933) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #18# fontified t help-echo nil)) . -4932) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 4933 (4925 . 4933) (4923 . 4925) 4870 (4922 . 4923) (4913 . 4922) (4911 . 4913) 4870 (4910 . 4911) (4901 . 4910) (4899 . 4901) 4870 (4898 . 4899) (4893 . 4898) (4872 . 4893) (4870 . 4872) (4869 . 4870) (4864 . 4869) (4852 . 4874) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# fontified t)) . -4852) (undo-tree-id131 . -1) (#("*" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# fontified t)) . -4853) (undo-tree-id132 . -1) (#("*" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# fontified t)) . -4854) (undo-tree-id133 . -1) (#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20=#("*" 0 1 (face org-indent)) fontified t)) . -4855) (undo-tree-id134 . -1) 4856) nil (24918 10431 447539 945000) 0 nil]) ((4851 . 4856) 4847 (t 24918 10407 513077 162000)) nil (24918 10431 447551 106000) 0 nil]) ((#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4848) (undo-tree-id114 . -1) 4849 (4848 . 4849) (t 24918 10400 479714 89000)) nil (24918 10407 469461 553000) 0 nil]) ((#(":" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4849) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("w" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4850) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . 1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("a" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4851) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 4852 (4849 . 4852) (#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4849) (undo-tree-id113 . -1) 4850 (4849 . 4850) (t 24918 10273 855903 53000)) nil (24918 10400 437978 340000) 0 nil]) ((#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4850) (undo-tree-id56 . -1) 4851 (4850 . 4851) (t 24918 10266 12545 320000)) nil (24918 10273 811043 947000) 0 nil]) ((4843 . 4851) (#("0" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4843) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 4844 (4840 . 4844) (#("m" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4840) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 4841 (4839 . 4841) (#("O" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4839) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("O" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4840) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("M" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified t)) . -4841) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 4842 (4838 . 4842)) nil (24918 10265 977592 699000) 0 nil]) ((4833 . 4838) 2385 (t 24918 10257 615853 481000)) nil (24918 10265 977605 72000) 0 nil]) ((2388 . 2442) (#(" " 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #20# fontified nil)) . 2388) (2388 . 2399) 2385) nil (24918 10257 569307 535000) 0 nil]) ((2364 . 2375) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# fontified nil)) . 2364) (2363 . 2365)) nil (24918 10257 569316 121000) 0 nil]) ((#("j" 0 1 (face org-block-begin-line font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #18# org-category #19# font-lock-fontified t fontified t)) . -2305) (undo-tree-id0 . -1) 2306 (2305 . 2306) (2304 . 2305)) nil (24918 10257 569345 15000) 0 nil]) ((2460 . 2471) (t 24915 30782 748511 523000)) nil (24918 10257 569348 672000) 0 nil]) ((#("j" 0 1 (fontified t line-prefix #21=#("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34039) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (#("j" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34040) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("k" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34041) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) 34042 (34039 . 34042) (34038 . 34039) (#(")" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34038) (undo-tree-id741 . -1) (#(" " 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34039) (undo-tree-id742 . -1) 34040 (34030 . 34040) (#("o" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34030) (undo-tree-id743 . -1) (#("l" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -34031) (undo-tree-id744 . -1) 34032 (34025 . 34032) (34004 . 34025) (34002 . 34004) 33673 (34001 . 34002) (t 24915 30728 992817 815000) 33999) nil (24915 30782 607295 627000) 0 nil]) ((33989 . 33995) (#(" " 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block) display nil)) . -33989) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("h" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block) display nil)) . -33990) (undo-tree-id408 . -1) 33991 (33990 . 33991) (33989 . 33990)) nil (24915 30728 869311 599000) 0 nil]) ((#("mode " 0 5 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block) display nil)) . 33989) (undo-tree-id409 . -5) (undo-tree-id410 . -5)) nil (24915 30728 869322 68000) 0 nil]) ((#("-" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block) display nil)) . 33989) (t 24915 30708 409855 384000)) nil (24915 30728 869325 885000) 0 nil]) ((33989 . 34001) (#("d" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -33989) (undo-tree-id253 . -1) 33990 (33972 . 33990) (#("n" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -33972) (undo-tree-id254 . -1) (#("m" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -33973) (undo-tree-id255 . -1) (#("i" 0 1 (fontified t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -33974) (undo-tree-id256 . -1) 33975 (33967 . 33975) (33965 . 33967) 33673 (33964 . 33965) 33958) nil (24915 30708 273616 302000) 0 nil]) ((33892 . 33894) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -33892) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("e" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -33893) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 33894 (33879 . 33894) (33868 . 33879) (33866 . 33868) 33673 (33865 . 33866) (#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -33865) (undo-tree-id405 . -1) 33866 (33857 . 33866) (33836 . 33857) (33834 . 33836) 33673 (nil fontified t 33833 . 33834) (nil font-lock-fontified t 33833 . 33834) (nil help-echo nil 33833 . 33834) (nil src-block t 33833 . 33834) (nil line-prefix #22=#("  " 0 2 (face org-indent)) 33833 . 33834) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 33833 . 33834) (nil font-lock-multiline t 33833 . 33834) (nil face (org-block) 33833 . 33834) (33833 . 33834) 33832) nil (24915 30708 273896 743000) 0 nil]) ((33865 . 33867)) nil (24915 30708 273912 883000) 0 nil]) ((#("P" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 33865) (#("R" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 33865) (#("W" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #22# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 33865) (t 24915 30653 644169 377000)) nil (24915 30708 273916 19000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #21# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 33747) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1)) nil (24915 30653 509015 165000) 0 nil]) ((#("\"EVLORG\"" 0 8 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #22# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 33748) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -8) (undo-tree-id179 . -7) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -7) (undo-tree-id227 . -7) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -7) (undo-tree-id241 . -7) (undo-tree-id242 . -7) (undo-tree-id243 . -7) (undo-tree-id244 . -7) (undo-tree-id245 . -7) (undo-tree-id246 . -7) (undo-tree-id247 . -7) (undo-tree-id248 . -7) (undo-tree-id249 . -7) (undo-tree-id250 . -7) (undo-tree-id251 . -7) (undo-tree-id252 . -7) 33755 (t 24915 30625 997993 266000)) nil (24915 30653 509154 885000) 0 nil]) ((nil fontified nil 13073 . 13074) (nil font-lock-fontified t 13073 . 13074) (nil help-echo nil 13073 . 13074) (nil src-block t 13073 . 13074) (nil line-prefix #("    " 0 4 (face org-indent)) 13073 . 13074) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 13073 . 13074) (nil font-lock-multiline t 13073 . 13074) (nil face (highlight-numbers-number org-block) 13073 . 13074) (13073 . 13074) (#("0" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #23=#("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (highlight-numbers-number org-block) display nil)) . 13073) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (t 24915 30614 264866 967000)) nil (24915 30625 870254 884000) 0 nil]) ((14799 . 14801) (14799 . 14801) (#(": t
" 0 2 (fontified t line-prefix #23# wrap-prefix #24=#("    " 0 4 (face org-indent)) face org-code) 2 4 (fontified t line-prefix #23# wrap-prefix #24# face org-code)) . 14799)) nil (24915 30614 125074 759000) 0 nil]) ((14799 . 14801) (14799 . 14801) (#(": t
" 0 3 (fontified t line-prefix #23# wrap-prefix #25=#("    " 0 4 (face org-indent)) face org-code) 3 4 (fontified t line-prefix #23# wrap-prefix #25# face org-code)) . 14799) (t 24915 30509 700000 120000)) nil (24915 30614 125083 165000) 0 nil] [nil nil ((nil fontified nil 13864 . 13866) (nil font-lock-fontified t 13864 . 13866) (nil help-echo nil 13864 . 13866) (nil src-block t 13864 . 13866) (nil line-prefix #23# 13864 . 13866) (nil wrap-prefix #26=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 13864 . 13866) (nil font-lock-multiline t 13864 . 13866) (nil face (org-block) 13864 . 13866) (13864 . 13866) (nil fontified nil 13886 . 13888) (nil font-lock-fontified t 13886 . 13888) (nil help-echo nil 13886 . 13888) (nil src-block t 13886 . 13888) (nil line-prefix #23# 13886 . 13888) (nil wrap-prefix #26# 13886 . 13888) (nil font-lock-multiline t 13886 . 13888) (nil face (org-block) 13886 . 13888) (13886 . 13888) (nil fontified nil 13900 . 13902) (nil font-lock-fontified t 13900 . 13902) (nil help-echo nil 13900 . 13902) (nil src-block t 13900 . 13902) (nil line-prefix #23# 13900 . 13902) (nil wrap-prefix #27=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 13900 . 13902) (nil font-lock-multiline t 13900 . 13902) (nil face (org-block) 13900 . 13902) (13900 . 13902) (nil fontified nil 13937 . 13938) (nil font-lock-fontified t 13937 . 13938) (nil help-echo nil 13937 . 13938) (nil src-block t 13937 . 13938) (nil line-prefix #23# 13937 . 13938) (nil wrap-prefix #27# 13937 . 13938) (nil font-lock-multiline t 13937 . 13938) (nil face (org-block) 13937 . 13938) (13937 . 13938) (nil fontified nil 13946 . 13947) (nil font-lock-fontified t 13946 . 13947) (nil help-echo nil 13946 . 13947) (nil src-block t 13946 . 13947) (nil line-prefix #23# 13946 . 13947) (nil wrap-prefix #28=#("             " 0 4 (face org-indent) 4 13 (face org-indent)) 13946 . 13947) (nil font-lock-multiline t 13946 . 13947) (nil face (org-block) 13946 . 13947) (13946 . 13947) (nil fontified nil 13992 . 13994) (nil font-lock-fontified t 13992 . 13994) (nil help-echo nil 13992 . 13994) (nil src-block t 13992 . 13994) (nil line-prefix #23# 13992 . 13994) (nil wrap-prefix #28# 13992 . 13994) (nil font-lock-multiline t 13992 . 13994) (nil face (org-block) 13992 . 13994) (13992 . 13994) (nil fontified nil 14004 . 14006) (nil font-lock-fontified t 14004 . 14006) (nil help-echo nil 14004 . 14006) (nil src-block t 14004 . 14006) (nil line-prefix #23# 14004 . 14006) (nil wrap-prefix #29=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 14004 . 14006) (nil font-lock-multiline t 14004 . 14006) (nil face (org-block) 14004 . 14006) (14004 . 14006) (nil fontified nil 14029 . 14030) (nil font-lock-fontified t 14029 . 14030) (nil help-echo nil 14029 . 14030) (nil src-block t 14029 . 14030) (nil line-prefix #23# 14029 . 14030) (nil wrap-prefix #29# 14029 . 14030) (nil font-lock-multiline t 14029 . 14030) (nil face (org-block) 14029 . 14030) (14029 . 14030) (nil fontified nil 14031 . 14032) (nil font-lock-fontified t 14031 . 14032) (nil help-echo nil 14031 . 14032) (nil src-block t 14031 . 14032) (nil line-prefix #23# 14031 . 14032) (nil wrap-prefix #30=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 14031 . 14032) (nil font-lock-multiline t 14031 . 14032) (nil face (org-block) 14031 . 14032) (14031 . 14032) (nil fontified nil 14048 . 14050) (nil font-lock-fontified t 14048 . 14050) (nil help-echo nil 14048 . 14050) (nil src-block t 14048 . 14050) (nil line-prefix #23# 14048 . 14050) (nil wrap-prefix #30# 14048 . 14050) (nil font-lock-multiline t 14048 . 14050) (nil face (org-block) 14048 . 14050) (14048 . 14050) (nil fontified nil 14089 . 14091) (nil font-lock-fontified t 14089 . 14091) (nil help-echo nil 14089 . 14091) (nil src-block t 14089 . 14091) (nil line-prefix #23# 14089 . 14091) (nil wrap-prefix #31=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 14089 . 14091) (nil font-lock-multiline t 14089 . 14091) (nil face (org-block) 14089 . 14091) (14089 . 14091) (nil fontified nil 14127 . 14128) (nil font-lock-fontified t 14127 . 14128) (nil help-echo nil 14127 . 14128) (nil src-block t 14127 . 14128) (nil line-prefix #23# 14127 . 14128) (nil wrap-prefix #31# 14127 . 14128) (nil font-lock-multiline t 14127 . 14128) (nil face (org-block) 14127 . 14128) (14127 . 14128) (nil fontified nil 14133 . 14134) (nil font-lock-fontified t 14133 . 14134) (nil help-echo nil 14133 . 14134) (nil src-block t 14133 . 14134) (nil line-prefix #23# 14133 . 14134) (nil wrap-prefix #32=#("          " 0 4 (face org-indent) 4 10 (face org-indent)) 14133 . 14134) (nil font-lock-multiline t 14133 . 14134) (nil face (org-block) 14133 . 14134) (14133 . 14134) (nil fontified nil 14168 . 14170) (nil font-lock-fontified t 14168 . 14170) (nil help-echo nil 14168 . 14170) (nil src-block t 14168 . 14170) (nil line-prefix #23# 14168 . 14170) (nil wrap-prefix #32# 14168 . 14170) (nil font-lock-multiline t 14168 . 14170) (nil face (org-block) 14168 . 14170) (14168 . 14170) (nil fontified nil 14220 . 14222) (nil font-lock-fontified t 14220 . 14222) (nil help-echo nil 14220 . 14222) (nil src-block t 14220 . 14222) (nil line-prefix #23# 14220 . 14222) (nil wrap-prefix #33=#("                " 0 4 (face org-indent) 4 16 (face org-indent)) 14220 . 14222) (nil font-lock-multiline t 14220 . 14222) (nil face (org-block) 14220 . 14222) (14220 . 14222) (nil fontified nil 14262 . 14263) (nil font-lock-fontified t 14262 . 14263) (nil help-echo nil 14262 . 14263) (nil src-block t 14262 . 14263) (nil line-prefix #23# 14262 . 14263) (nil wrap-prefix #33# 14262 . 14263) (nil font-lock-multiline t 14262 . 14263) (nil face (font-lock-comment-face org-block) 14262 . 14263) (14262 . 14263) (nil fontified nil 14274 . 14275) (nil font-lock-fontified t 14274 . 14275) (nil help-echo nil 14274 . 14275) (nil src-block t 14274 . 14275) (nil line-prefix #23# 14274 . 14275) (nil wrap-prefix #34=#("                " 0 4 (face org-indent) 4 16 (face org-indent)) 14274 . 14275) (nil font-lock-multiline t 14274 . 14275) (nil face (org-block) 14274 . 14275) (14274 . 14275) (nil fontified nil 14277 . 14278) (nil font-lock-fontified t 14277 . 14278) (nil help-echo nil 14277 . 14278) (nil src-block t 14277 . 14278) (nil line-prefix #23# 14277 . 14278) (nil wrap-prefix #34# 14277 . 14278) (nil font-lock-multiline t 14277 . 14278) (nil face (org-block) 14277 . 14278) (14277 . 14278) (nil fontified nil 14279 . 14280) (nil font-lock-fontified t 14279 . 14280) (nil help-echo nil 14279 . 14280) (nil src-block t 14279 . 14280) (nil line-prefix #23# 14279 . 14280) (nil wrap-prefix #35=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 14279 . 14280) (nil font-lock-multiline t 14279 . 14280) (nil face (org-block) 14279 . 14280) (14279 . 14280) (nil fontified nil 14319 . 14320) (nil font-lock-fontified t 14319 . 14320) (nil help-echo nil 14319 . 14320) (nil src-block t 14319 . 14320) (nil line-prefix #23# 14319 . 14320) (nil wrap-prefix #35# 14319 . 14320) (nil font-lock-multiline t 14319 . 14320) (nil face (org-block) 14319 . 14320) (14319 . 14320) (nil fontified nil 14330 . 14331) (nil font-lock-fontified t 14330 . 14331) (nil help-echo nil 14330 . 14331) (nil src-block t 14330 . 14331) (nil line-prefix #23# 14330 . 14331) (nil wrap-prefix #36=#("               " 0 4 (face org-indent) 4 15 (face org-indent)) 14330 . 14331) (nil font-lock-multiline t 14330 . 14331) (nil face (org-block) 14330 . 14331) (14330 . 14331) (nil fontified nil 14361 . 14363) (nil font-lock-fontified t 14361 . 14363) (nil help-echo nil 14361 . 14363) (nil src-block t 14361 . 14363) (nil line-prefix #23# 14361 . 14363) (nil wrap-prefix #36# 14361 . 14363) (nil font-lock-multiline t 14361 . 14363) (nil face (org-block) 14361 . 14363) (14361 . 14363) (14398 . 14400) (nil fontified nil 14404 . 14405) (nil font-lock-fontified t 14404 . 14405) (nil help-echo nil 14404 . 14405) (nil src-block t 14404 . 14405) (nil line-prefix #23# 14404 . 14405) (nil wrap-prefix #("    " 0 4 (face org-indent)) 14404 . 14405) (nil font-lock-multiline t 14404 . 14405) (nil face (org-block) 14404 . 14405) (14404 . 14405) (nil fontified nil 14415 . 14416) (nil font-lock-fontified t 14415 . 14416) (nil help-echo nil 14415 . 14416) (nil src-block t 14415 . 14416) (nil line-prefix #23# 14415 . 14416) (nil wrap-prefix #37=#("               " 0 4 (face org-indent) 4 15 (face org-indent)) 14415 . 14416) (nil font-lock-multiline t 14415 . 14416) (nil face (org-block) 14415 . 14416) (14415 . 14416) (nil fontified nil 14456 . 14458) (nil font-lock-fontified t 14456 . 14458) (nil help-echo nil 14456 . 14458) (nil src-block t 14456 . 14458) (nil line-prefix #23# 14456 . 14458) (nil wrap-prefix #37# 14456 . 14458) (nil font-lock-multiline t 14456 . 14458) (nil face (org-block) 14456 . 14458) (14456 . 14458) (nil fontified nil 14503 . 14505) (nil font-lock-fontified t 14503 . 14505) (nil help-echo nil 14503 . 14505) (nil src-block t 14503 . 14505) (nil line-prefix #23# 14503 . 14505) (nil wrap-prefix #38=#("                     " 0 4 (face org-indent) 4 21 (face org-indent)) 14503 . 14505) (nil font-lock-multiline t 14503 . 14505) (nil face (org-block) 14503 . 14505) (14503 . 14505) (nil fontified nil 14539 . 14540) (nil font-lock-fontified t 14539 . 14540) (nil help-echo nil 14539 . 14540) (nil src-block t 14539 . 14540) (nil line-prefix #23# 14539 . 14540) (nil wrap-prefix #38# 14539 . 14540) (nil font-lock-multiline t 14539 . 14540) (nil face (org-block) 14539 . 14540) (14539 . 14540) (nil fontified nil 14557 . 14558) (nil font-lock-fontified t 14557 . 14558) (nil help-echo nil 14557 . 14558) (nil src-block t 14557 . 14558) (nil line-prefix #23# 14557 . 14558) (nil wrap-prefix #39=#("                      " 0 4 (face org-indent) 4 22 (face org-indent)) 14557 . 14558) (nil font-lock-multiline t 14557 . 14558) (nil face (org-block) 14557 . 14558) (14557 . 14558) (nil fontified nil 14589 . 14591) (nil font-lock-fontified t 14589 . 14591) (nil help-echo nil 14589 . 14591) (nil src-block t 14589 . 14591) (nil line-prefix #23# 14589 . 14591) (nil wrap-prefix #39# 14589 . 14591) (nil font-lock-multiline t 14589 . 14591) (nil face (org-block) 14589 . 14591) (14589 . 14591) (nil fontified nil 14656 . 14658) (nil font-lock-fontified t 14656 . 14658) (nil help-echo nil 14656 . 14658) (nil src-block t 14656 . 14658) (nil line-prefix #23# 14656 . 14658) (nil wrap-prefix #40=#("                      " 0 4 (face org-indent) 4 22 (face org-indent)) 14656 . 14658) (nil font-lock-multiline t 14656 . 14658) (nil face (org-block) 14656 . 14658) (14656 . 14658) (nil fontified nil 14689 . 14690) (nil font-lock-fontified t 14689 . 14690) (nil help-echo nil 14689 . 14690) (nil src-block t 14689 . 14690) (nil line-prefix #23# 14689 . 14690) (nil wrap-prefix #40# 14689 . 14690) (nil font-lock-multiline t 14689 . 14690) (nil face (org-block) 14689 . 14690) (14689 . 14690) (nil fontified nil 14707 . 14708) (nil font-lock-fontified t 14707 . 14708) (nil help-echo nil 14707 . 14708) (nil src-block t 14707 . 14708) (nil line-prefix #23# 14707 . 14708) (nil wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) 14707 . 14708) (nil font-lock-multiline t 14707 . 14708) (nil face (org-block) 14707 . 14708) (14707 . 14708) (14748 . 14750) 13862 (14397 . 14398)) ((#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #23# wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) font-lock-multiline t face #41=(org-block) display nil)) . 14397) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face #41#)) . 14748) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14707) (nil face (org-block) 14707 . 14708) (nil wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) 14707 . 14708) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14689) (nil face (org-block) 14689 . 14690) (nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) 14689 . 14690) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14656) (nil face (org-block) 14656 . 14658) (nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) 14656 . 14658) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14589) (nil face (org-block) 14589 . 14591) (nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) 14589 . 14591) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14557) (nil face (org-block) 14557 . 14558) (nil wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) 14557 . 14558) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14539) (nil face (org-block) 14539 . 14540) (nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) 14539 . 14540) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14503) (nil face (org-block) 14503 . 14505) (nil wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) 14503 . 14505) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14456) (nil face (org-block) 14456 . 14458) (nil wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) 14456 . 14458) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14415) (nil face (org-block) 14415 . 14416) (nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) 14415 . 14416) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14404) (nil face (org-block) 14404 . 14405) (nil wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) 14404 . 14405) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #41# display nil)) . 14398) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14361) (nil face (org-block) 14361 . 14363) (nil wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) 14361 . 14363) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14330) (nil face (org-block) 14330 . 14331) (nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) 14330 . 14331) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14319) (nil face (org-block) 14319 . 14320) (nil wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) 14319 . 14320) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14279) (nil face (org-block) 14279 . 14280) (nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) 14279 . 14280) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14277) (nil face (org-block) 14277 . 14278) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 14277 . 14278) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14274) (nil face (org-block) 14274 . 14275) (nil wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) 14274 . 14275) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 14262) (nil face (org-block) 14262 . 14263) (nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) 14262 . 14263) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14220) (nil face (org-block) 14220 . 14222) (nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) 14220 . 14222) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14168) (nil face (org-block) 14168 . 14170) (nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) 14168 . 14170) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14133) (nil face (org-block) 14133 . 14134) (nil wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) 14133 . 14134) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14127) (nil face (org-block) 14127 . 14128) (nil wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) 14127 . 14128) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14089) (nil face (org-block) 14089 . 14091) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 14089 . 14091) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14048) (nil face (org-block) 14048 . 14050) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 14048 . 14050) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14031) (nil face (org-block) 14031 . 14032) (nil wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) 14031 . 14032) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14029) (nil face (org-block) 14029 . 14030) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 14029 . 14030) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 14004) (nil face (org-block) 14004 . 14006) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 14004 . 14006) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13992) (nil face (org-block) 13992 . 13994) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 13992 . 13994) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13946) (nil face (org-block) 13946 . 13947) (nil wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) 13946 . 13947) (#(" " 0 1 (fontified nil line-prefix #23# wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13937) (nil face (org-block) 13937 . 13938) (nil wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) 13937 . 13938) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13900) (nil face (org-block) 13900 . 13902) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 13900 . 13902) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13886) (nil face (org-block) 13886 . 13888) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 13886 . 13888) (#("  " 0 2 (fontified nil line-prefix #23# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 13864) (nil face (org-block) 13864 . 13866) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 13864 . 13866) (nil fontified t 13864 . 13866)) (24915 30508 628082 92000) 0 nil]) ((14394 . 14401)) nil (24915 30508 638761 602000) 0 nil]) ((#("graph" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #23# wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 14394)) nil (24915 30508 628112 28000) 0 nil]) ((15082 . 15084) (15071 . 15084) (#("
" 0 1 (fontified nil line-prefix #23# wrap-prefix #("    " 0 4 (face org-indent)))) . 15071) (15070 . 15072) (t 24915 30434 877870 751000)) nil (24915 30508 628116 446000) 0 nil]) ((15056 . 15059) (15035 . 15056) (#("d" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15035) (undo-tree-id1 . -1) 15036 (15031 . 15036) (15029 . 15031) 14897 (15028 . 15029) (15023 . 15028) (#("0" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15023) (undo-tree-id2 . -1) (#("=" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15024) (undo-tree-id3 . -1) (#("-" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15025) (undo-tree-id4 . -1) 15026 (15023 . 15026) (#("/" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15023) (undo-tree-id5 . -1) 15024 (15023 . 15024) (15002 . 15023) (14999 . 15002) (#("e" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14999) (undo-tree-id6 . -1) 15000 (14990 . 15000) (#("l" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14990) (undo-tree-id7 . -1) 14991 (14979 . 14991) (#("h" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14979) (undo-tree-id8 . -1) (#("o" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14980) (undo-tree-id9 . -1) 14981 (14974 . 14981) (14972 . 14974) 14897 (14971 . 14972) (14968 . 14971) (#("t" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) display nil)) . -14968) (undo-tree-id10 . -1) 14969 (14961 . 14969) (14956 . 14961) (14935 . 14956) (14933 . 14935) 14897 (14932 . 14933) (14926 . 14932) (#("t" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) display nil)) . -14926) (undo-tree-id11 . -1) (#("u" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) display nil)) . -14927) (undo-tree-id12 . -1) (#("r" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) display nil)) . -14928) (undo-tree-id13 . -1) (#("e" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-builtin-face org-block) display nil)) . -14929) (undo-tree-id14 . -1) 14930 (14912 . 14930) (#("rwebsock" 0 1 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42=(font-lock-constant-face org-block) display nil) 1 2 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 2 3 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 3 4 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 4 5 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 5 6 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 6 7 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil) 7 8 (help-echo nil fontified t font-lock-fontified t src-block t font-lock-multiline t face #42# display nil)) . -14912) (undo-tree-id15 . -8) 14920 (14915 . 14920) (14913 . 14915) (#("e" 0 1 (help-echo nil fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-constant-face org-block) display nil)) . -14913) (undo-tree-id16 . -1) 14914 (14899 . 14914) (#(")" 0 1 (fontified t line-prefix #23# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14899) (undo-tree-id17 . -1) 14900 (14899 . 14900) (14897 . 14899) (14896 . 14897) (#(" " 0 1 (fontified t line-prefix #23# wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -14896) (undo-tree-id18 . -1) 14897 (14891 . 14897) (14879 . 14901) (14878 . 14879) 14816 (14816 . 14872) (#(" " 0 1 (fontified nil line-prefix #43=#("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 14816) (14816 . 14823) (14805 . 14816) (#("org-" 0 4 (fontified t face org-level-2)) . -14805) (undo-tree-id19 . -4) 14809 (#("roam-" 0 5 (fontified t face org-level-2)) . -14809) (undo-tree-id20 . -5) 14814 (#("ui" 0 2 (fontified t face org-level-2)) . -14814) (undo-tree-id21 . -2) 14816 (14805 . 14816)) nil (24915 30434 746446 134000) 0 nil] [nil nil ((nil face (org-superstar-header-bullet org-level-2) 14804 . 14805) (nil fontified nil 14804 . 14805) (nil line-prefix #23# 14804 . 14805) (nil wrap-prefix #("    " 0 4 (face org-indent)) 14804 . 14805) (14804 . 14805) (#(" " 0 1 (fontified t line-prefix #43# wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 14804) (undo-tree-id0 . -1)) ((14804 . 14805) (#("g" 0 1 (fontified nil line-prefix #23# wrap-prefix #("    " 0 4 (face org-indent)) face (org-superstar-header-bullet org-level-2))) . 14804) (nil wrap-prefix #("    " 0 4 (face org-indent)) 14804 . 14805) (nil face nil 14804 . 14805)) (24915 30379 57016 79000) 0 nil]) ((14800 . 14805) 13775 (t 24908 57258 608378 189000)) nil (24915 30379 57571 825000) 0 nil]) ((14797 . 14799) (14797 . 14799) (#(": t
" 0 4 (face org-code wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 14797) (t 24908 55756 401365 380000)) nil (24908 57258 576348 379000) 0 nil]) ((14025 . 14028) (14004 . 14025) (14002 . 14004) 13862 (nil fontified t 14001 . 14002) (nil font-lock-fontified t 14001 . 14002) (nil help-echo nil 14001 . 14002) (nil src-block t 14001 . 14002) (nil line-prefix #("    " 0 4 (face org-indent)) 14001 . 14002) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 14001 . 14002) (nil font-lock-multiline t 14001 . 14002) (nil face (font-lock-builtin-face org-block) 14001 . 14002) (14001 . 14002) (t 24908 55640 84783 222000) 13995) nil (24908 55756 262965 770000) 0 nil]) ((29634 . 30159) (#("| org-ref-org-menu | org-superstar-mode | org-variable-pitch-minor-mode | org-indent-mode | #[0 \\301\\211\\207 [imenu-create-index-function org-imenu-get-tree] 2] | flyspell-mode | evil-org-mode | visual-line-mode | #[0 \\300\\301\\302\\303\\304$\\207 [add-hook change-major-mode-hook org-show-all append local] 5] | #[0 \\300\\301\\302\\303\\304$\\207 [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] | org-babel-result-hide-spec | org-babel-hide-all-hashes | org-ref-setup-label-finders |
" 0 478 (face org-table wrap-prefix #46=#("    " 0 4 (face org-indent)) line-prefix #45=#("    " 0 4 (face org-indent)) org-category #44="settings" fontified t) 478 504 (face org-table wrap-prefix #46# line-prefix #45# org-category #44# fontified t) 504 505 (wrap-prefix #46# line-prefix #45# org-category #44# fontified t)) . 29634) (t 24908 55592 404817 430000)) nil (24908 55640 55952 799000) 0 nil]) ((29555 . 29557)) nil (24908 55592 364602 957000) 0 nil]) ((#("                                         org-headline-done))
" 0 41 (display nil face #49=(org-block) font-lock-multiline t wrap-prefix #48=#("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) line-prefix #47=#("    " 0 4 (face org-indent)) org-category #44# src-block t help-echo nil font-lock-fontified t fontified t) 41 58 (display nil face #49# font-lock-multiline t wrap-prefix #48# line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t) 58 59 (display nil face #49# font-lock-multiline t wrap-prefix #48# line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t) 59 60 (display nil face #49# font-lock-multiline t wrap-prefix #48# line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t) 60 61 (display nil face #49# font-lock-multiline t wrap-prefix #48# line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t)) . 29556) (undo-tree-id74 . -61) (undo-tree-id75 . -61) (undo-tree-id76 . -61) (undo-tree-id77 . -61) (undo-tree-id78 . -61) (undo-tree-id79 . -61) (undo-tree-id80 . -61) (undo-tree-id81 . -61) (undo-tree-id82 . -61) (undo-tree-id83 . -61) (undo-tree-id84 . -61) (undo-tree-id85 . -61) (undo-tree-id86 . -61) (undo-tree-id87 . -61) (undo-tree-id88 . -61) (undo-tree-id89 . -61) (undo-tree-id90 . -61) (undo-tree-id91 . -61) (undo-tree-id92 . -61) (undo-tree-id93 . -61) (undo-tree-id94 . -61) (undo-tree-id95 . -61) (undo-tree-id96 . -61) (undo-tree-id97 . -61) (undo-tree-id98 . -61) (undo-tree-id99 . -61) (undo-tree-id100 . -61) (undo-tree-id101 . -61) (undo-tree-id102 . -61) (undo-tree-id103 . -61) (undo-tree-id104 . -61) (undo-tree-id105 . -61) (undo-tree-id106 . -61) (undo-tree-id107 . -61) (undo-tree-id108 . -61) (undo-tree-id109 . -61) (undo-tree-id110 . -61) (undo-tree-id111 . -61) (undo-tree-id112 . -61) (undo-tree-id113 . -61) (undo-tree-id114 . -61) (undo-tree-id115 . -61) (undo-tree-id116 . -61) (undo-tree-id117 . -61) (undo-tree-id118 . -61) (undo-tree-id119 . -61) (undo-tree-id120 . -61) (undo-tree-id121 . -61) (undo-tree-id122 . -61) (undo-tree-id123 . -61) (undo-tree-id124 . -61) (undo-tree-id125 . -61) (undo-tree-id126 . -61) (undo-tree-id127 . -61) (undo-tree-id128 . -61) (undo-tree-id129 . -61) (undo-tree-id130 . -61) (undo-tree-id131 . -61) (undo-tree-id132 . -61) (undo-tree-id133 . -61) (undo-tree-id134 . -61) (undo-tree-id135 . -61) (undo-tree-id136 . -61) (undo-tree-id137 . -61) (undo-tree-id138 . -61) (undo-tree-id139 . -61) (undo-tree-id140 . -61) (undo-tree-id141 . -61) (undo-tree-id142 . -61) (undo-tree-id143 . -61) (undo-tree-id144 . -61) (undo-tree-id145 . -61) (undo-tree-id146 . 1) (undo-tree-id147 . -59) (undo-tree-id148 . -59) (undo-tree-id149 . -59) (undo-tree-id150 . -59) (undo-tree-id151 . -59) (undo-tree-id152 . -59) (undo-tree-id153 . -59) (undo-tree-id154 . -59) (undo-tree-id155 . -59) (undo-tree-id156 . -59) (undo-tree-id157 . -59) (undo-tree-id158 . -59) (undo-tree-id159 . -59) (undo-tree-id160 . -59) (undo-tree-id161 . -59) (undo-tree-id162 . -59) (undo-tree-id163 . -59) (undo-tree-id164 . -59) (undo-tree-id165 . -59) (undo-tree-id166 . -59) (undo-tree-id167 . -59) (undo-tree-id168 . -59) (undo-tree-id169 . -59) (undo-tree-id170 . -59) (undo-tree-id171 . -59) (undo-tree-id172 . -59) (undo-tree-id173 . -59) (undo-tree-id174 . -59) (undo-tree-id175 . -59) (undo-tree-id176 . -59) (undo-tree-id177 . -59) (undo-tree-id178 . -59) (undo-tree-id179 . -59) (undo-tree-id180 . -59) (undo-tree-id181 . -59) (undo-tree-id182 . -59) (undo-tree-id183 . -59) (undo-tree-id184 . -59) (undo-tree-id185 . -59) (undo-tree-id186 . -59) (undo-tree-id187 . -59) (undo-tree-id188 . -59) (undo-tree-id189 . -59) (undo-tree-id190 . -59) (undo-tree-id191 . -59) (undo-tree-id192 . -59) (undo-tree-id193 . -59) (undo-tree-id194 . -59) (undo-tree-id195 . -59) (undo-tree-id196 . -59) (undo-tree-id197 . -59) (undo-tree-id198 . -59) (undo-tree-id199 . -59) (undo-tree-id200 . -59) (undo-tree-id201 . -59) (undo-tree-id202 . -59) (undo-tree-id203 . -59) (undo-tree-id204 . -59) (undo-tree-id205 . -59) (undo-tree-id206 . -59) (undo-tree-id207 . -59) (undo-tree-id208 . -59) (undo-tree-id209 . -59) (undo-tree-id210 . -59) (undo-tree-id211 . -59) (undo-tree-id212 . -59) (undo-tree-id213 . -59) (undo-tree-id214 . -59) (undo-tree-id215 . -59) (undo-tree-id216 . -59) (undo-tree-id217 . -59) (undo-tree-id218 . -59) (undo-tree-id219 . -59) (undo-tree-id220 . -59) (undo-tree-id221 . -59) (undo-tree-id222 . -59) (undo-tree-id223 . -59) (undo-tree-id224 . -59) (undo-tree-id225 . -59) (undo-tree-id226 . -59) (undo-tree-id227 . -59) (undo-tree-id228 . -59) (undo-tree-id229 . -59) (undo-tree-id230 . -59) (undo-tree-id231 . -59) (undo-tree-id232 . -59) (undo-tree-id233 . -59) (undo-tree-id234 . -59) (undo-tree-id235 . -59) (undo-tree-id236 . -59) (undo-tree-id237 . -59) (undo-tree-id238 . -59) (undo-tree-id239 . -59) (undo-tree-id240 . -59) (undo-tree-id241 . -59) (undo-tree-id242 . -59) (undo-tree-id243 . -59) (undo-tree-id244 . -59) (undo-tree-id245 . -59) (undo-tree-id246 . -59) (undo-tree-id247 . -59) (undo-tree-id248 . -59) (undo-tree-id249 . -59) (undo-tree-id250 . -59) (undo-tree-id251 . -59) (undo-tree-id252 . -59) (undo-tree-id253 . -59) (undo-tree-id254 . -59) (undo-tree-id255 . -59) (undo-tree-id256 . -59) (undo-tree-id257 . -59) (undo-tree-id258 . -59) (undo-tree-id259 . -59) (undo-tree-id260 . -59) (undo-tree-id261 . -59) (undo-tree-id262 . -59) (undo-tree-id263 . -59) (undo-tree-id264 . -59) (undo-tree-id265 . -59) (undo-tree-id266 . -59) (undo-tree-id267 . -59) (undo-tree-id268 . -59) (undo-tree-id269 . -59) (undo-tree-id270 . -59) (undo-tree-id271 . -59) (undo-tree-id272 . -59) (undo-tree-id273 . -59) (undo-tree-id274 . -59) (undo-tree-id275 . -59) (undo-tree-id276 . -59) (undo-tree-id277 . -59) (undo-tree-id278 . -59) (undo-tree-id279 . -59) (undo-tree-id280 . -59) (undo-tree-id281 . -59) (undo-tree-id282 . -59) (undo-tree-id283 . -59) (undo-tree-id284 . -59) (undo-tree-id285 . -59) (undo-tree-id286 . -59) (undo-tree-id287 . -59) (undo-tree-id288 . -59) (undo-tree-id289 . -59) (undo-tree-id290 . -59) (undo-tree-id291 . -59) (undo-tree-id292 . -59) (undo-tree-id293 . -59) (undo-tree-id294 . -59) (undo-tree-id295 . -59) 29615 (t 24908 55589 108153 119000)) nil (24908 55592 365039 666000) 0 nil]) ((29614 . 29616)) nil (24908 55589 77162 850000) 0 nil]) ((#("                                         org-done))
" 0 41 (display nil face #51=(org-block) font-lock-multiline t wrap-prefix #50=#("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t) 41 52 (display nil face #51# font-lock-multiline t wrap-prefix #50# line-prefix #47# org-category #44# src-block t help-echo nil font-lock-fontified t fontified t)) . 29615) (undo-tree-id0 . -41) (undo-tree-id1 . -41) (undo-tree-id2 . -41) (undo-tree-id3 . -41) (undo-tree-id4 . -41) (undo-tree-id5 . -41) (undo-tree-id6 . -41) (undo-tree-id7 . -41) (undo-tree-id8 . -41) (undo-tree-id9 . -41) (undo-tree-id10 . -41) (undo-tree-id11 . -41) (undo-tree-id12 . -41) (undo-tree-id13 . -41) (undo-tree-id14 . -41) (undo-tree-id15 . -41) (undo-tree-id16 . -41) (undo-tree-id17 . -41) (undo-tree-id18 . -41) (undo-tree-id19 . -41) (undo-tree-id20 . -41) (undo-tree-id21 . -41) (undo-tree-id22 . -41) (undo-tree-id23 . -41) (undo-tree-id24 . -41) (undo-tree-id25 . -41) (undo-tree-id26 . -41) (undo-tree-id27 . -41) (undo-tree-id28 . -41) (undo-tree-id29 . -41) (undo-tree-id30 . -41) (undo-tree-id31 . -41) (undo-tree-id32 . -41) (undo-tree-id33 . -41) (undo-tree-id34 . -41) (undo-tree-id35 . -41) (undo-tree-id36 . -41) (undo-tree-id37 . -41) (undo-tree-id38 . -41) (undo-tree-id39 . -41) (undo-tree-id40 . -41) (undo-tree-id41 . -41) (undo-tree-id42 . -41) (undo-tree-id43 . -41) (undo-tree-id44 . -41) (undo-tree-id45 . -41) (undo-tree-id46 . -41) (undo-tree-id47 . -41) (undo-tree-id48 . -41) (undo-tree-id49 . -41) (undo-tree-id50 . -41) (undo-tree-id51 . -41) (undo-tree-id52 . -41) (undo-tree-id53 . -41) (undo-tree-id54 . -41) (undo-tree-id55 . -41) (undo-tree-id56 . -41) (undo-tree-id57 . -41) (undo-tree-id58 . -41) (undo-tree-id59 . -41) (undo-tree-id60 . -41) (undo-tree-id61 . -41) (undo-tree-id62 . -41) (undo-tree-id63 . -41) (undo-tree-id64 . -41) (undo-tree-id65 . -41) (undo-tree-id66 . -41) (undo-tree-id67 . -41) (undo-tree-id68 . -41) (undo-tree-id69 . -41) (undo-tree-id70 . -41) (undo-tree-id71 . -41) (undo-tree-id72 . -41) (undo-tree-id73 . -41) 29656) nil (24908 55589 77307 942000) 0 nil]) ((nil fontified t 28117 . 28120) (nil font-lock-fontified t 28117 . 28120) (nil help-echo nil 28117 . 28120) (nil src-block t 28117 . 28120) (nil org-category #44# 28117 . 28120) (nil line-prefix #45# 28117 . 28120) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 28117 . 28120) (nil font-lock-multiline t 28117 . 28120) (nil face (org-block) 28117 . 28120) (28117 . 28120) 27739 (t 24905 6206 961073 668000)) nil (24908 55589 77321 287000) 0 nil]) ((nil fontified t 27739 . 27741) (nil font-lock-fontified t 27739 . 27741) (nil help-echo nil 27739 . 27741) (nil org-category #52="settings" 27739 . 27741) (nil line-prefix #53=#("    " 0 4 (face org-indent)) 27739 . 27741) (nil wrap-prefix #("    " 0 4 (face org-indent)) 27739 . 27741) (nil font-lock-multiline t 27739 . 27741) (nil face org-block-begin-line 27739 . 27741) (27739 . 27741) (nil fontified t 28917 . 28920) (nil font-lock-fontified t 28917 . 28920) (nil help-echo nil 28917 . 28920) (nil src-block t 28917 . 28920) (nil org-category #52# 28917 . 28920) (nil line-prefix #53# 28917 . 28920) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 28917 . 28920) (nil font-lock-multiline t 28917 . 28920) (nil face (org-block) 28917 . 28920) (28917 . 28920) (nil fontified t 28970 . 28973) (nil font-lock-fontified t 28970 . 28973) (nil help-echo nil 28970 . 28973) (nil src-block t 28970 . 28973) (nil org-category #52# 28970 . 28973) (nil line-prefix #53# 28970 . 28973) (nil wrap-prefix #54=#("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 28970 . 28973) (nil font-lock-multiline t 28970 . 28973) (nil face (org-block) 28970 . 28973) (28970 . 28973) (nil fontified t 28982 . 28983) (nil font-lock-fontified t 28982 . 28983) (nil help-echo nil 28982 . 28983) (nil src-block t 28982 . 28983) (nil org-category #52# 28982 . 28983) (nil line-prefix #53# 28982 . 28983) (nil wrap-prefix #54# 28982 . 28983) (nil font-lock-multiline t 28982 . 28983) (nil face (org-block) 28982 . 28983) (28982 . 28983) (nil fontified t 29022 . 29024) (nil font-lock-fontified t 29022 . 29024) (nil help-echo nil 29022 . 29024) (nil src-block t 29022 . 29024) (nil org-category #52# 29022 . 29024) (nil line-prefix #53# 29022 . 29024) (nil wrap-prefix #55=#("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29022 . 29024) (nil font-lock-multiline t 29022 . 29024) (nil face (org-block) 29022 . 29024) (29022 . 29024) (nil fontified t 29035 . 29036) (nil font-lock-fontified t 29035 . 29036) (nil help-echo nil 29035 . 29036) (nil src-block t 29035 . 29036) (nil org-category #52# 29035 . 29036) (nil line-prefix #53# 29035 . 29036) (nil wrap-prefix #55# 29035 . 29036) (nil font-lock-multiline t 29035 . 29036) (nil face (org-block) 29035 . 29036) (29035 . 29036) (nil fontified t 29075 . 29077) (nil font-lock-fontified t 29075 . 29077) (nil help-echo nil 29075 . 29077) (nil src-block t 29075 . 29077) (nil org-category #52# 29075 . 29077) (nil line-prefix #53# 29075 . 29077) (nil wrap-prefix #56=#("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29075 . 29077) (nil font-lock-multiline t 29075 . 29077) (nil face (org-block) 29075 . 29077) (29075 . 29077) (nil fontified t 29088 . 29089) (nil font-lock-fontified t 29088 . 29089) (nil help-echo nil 29088 . 29089) (nil src-block t 29088 . 29089) (nil org-category #52# 29088 . 29089) (nil line-prefix #53# 29088 . 29089) (nil wrap-prefix #56# 29088 . 29089) (nil font-lock-multiline t 29088 . 29089) (nil face (org-block) 29088 . 29089) (29088 . 29089) (nil fontified t 29128 . 29130) (nil font-lock-fontified t 29128 . 29130) (nil help-echo nil 29128 . 29130) (nil src-block t 29128 . 29130) (nil org-category #52# 29128 . 29130) (nil line-prefix #53# 29128 . 29130) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29128 . 29130) (nil font-lock-multiline t 29128 . 29130) (nil face (org-block) 29128 . 29130) (29128 . 29130) (nil fontified t 29181 . 29184) (nil font-lock-fontified t 29181 . 29184) (nil help-echo nil 29181 . 29184) (nil src-block t 29181 . 29184) (nil org-category #52# 29181 . 29184) (nil line-prefix #53# 29181 . 29184) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29181 . 29184) (nil font-lock-multiline t 29181 . 29184) (nil face (org-block) 29181 . 29184) (29181 . 29184) (nil fontified t 29235 . 29238) (nil font-lock-fontified t 29235 . 29238) (nil help-echo nil 29235 . 29238) (nil src-block t 29235 . 29238) (nil org-category #52# 29235 . 29238) (nil line-prefix #53# 29235 . 29238) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29235 . 29238) (nil font-lock-multiline t 29235 . 29238) (nil face (org-block) 29235 . 29238) (29235 . 29238) (nil fontified t 29287 . 29290) (nil font-lock-fontified t 29287 . 29290) (nil help-echo nil 29287 . 29290) (nil src-block t 29287 . 29290) (nil org-category #52# 29287 . 29290) (nil line-prefix #53# 29287 . 29290) (nil wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) 29287 . 29290) (nil font-lock-multiline t 29287 . 29290) (nil face (org-block) 29287 . 29290) (29287 . 29290) 27739) nil (24905 6206 922950 827000) 0 nil]) ((28644 . 28645) (#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #57=#("    " 0 4 (face org-indent)) wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -28644) (undo-tree-id293 . -1) 28645 (28644 . 28645)) nil (24905 6206 922978 459000) 0 nil]) (28644) nil (24905 6206 922982 266000) 0 nil]) ((#("j" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #57# wrap-prefix #("                                             " 0 4 (face org-indent) 4 45 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . -28438) (undo-tree-id294 . -1) 28439 (28437 . 28439) (t 24905 5769 568833 100000)) nil (24905 6206 922988 97000) 0 nil]) (28440) nil (24905 6206 922990 953000) 0 nil]) (28001) nil (24905 6206 922993 107000) 0 nil]) ((#("** Org-autolist-mode
#+begin_src elisp
  (use-package org-autolist
  :ensure t
  :demand t
  :config
  (add-hook 'org-mode-hook 'org-autolist-mode))
#+end_src

#+RESULTS:
: t

" 0 1 (fontified t org-category #52# line-prefix #59=#("*" 0 1 (face org-indent)) wrap-prefix #58=#("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-superstar-leading composition (4 1 [32 8228])) 1 2 (fontified t org-category #52# line-prefix #59# wrap-prefix #58# face (org-superstar-header-bullet org-level-2) composition (5 1 [128923])) 2 3 (fontified t org-category #52# line-prefix #59# wrap-prefix #58# face org-level-2) 3 20 (fontified t org-category #52# line-prefix #59# wrap-prefix #58# face org-level-2) 20 21 (fontified t org-category #52# line-prefix #59# wrap-prefix #58#) 21 38 (fontified t font-lock-fontified t org-category #52# line-prefix #53# wrap-prefix #62=#("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 38 39 (fontified t font-lock-fontified t help-echo nil org-category #52# line-prefix #53# wrap-prefix #62# font-lock-multiline t face org-block-begin-line display nil) 39 41 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face #60=(org-block) display nil) 41 42 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61# font-lock-multiline t face #60# display nil) 42 53 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61# font-lock-multiline t face (font-lock-keyword-face . #60#) display nil) 53 54 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61# font-lock-multiline t face #60# display nil) 54 66 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61# font-lock-multiline t face (font-lock-constant-face . #60#) display nil) 66 67 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #61# font-lock-multiline t face #60# display nil) 67 69 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #63=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face #60# display nil) 69 76 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #63# font-lock-multiline t face (font-lock-builtin-face . #60#) display nil) 76 79 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #63# font-lock-multiline t face #60# display nil) 79 81 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #64=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face #60# display nil) 81 88 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #64# font-lock-multiline t face (font-lock-builtin-face . #60#) display nil) 88 91 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #64# font-lock-multiline t face #60# display nil) 91 93 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #65=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face #60# display nil) 93 100 (fontified t font-lock-fontified t help-echo nil src-block t org-category #52# line-prefix #53# wrap-prefix #65# font-lock-multiline t face (font-lock-builtin-face . #60#) display nil) 100 101 (fontified t font-lock-fontified t src-block t org-category #52# line-prefix #53# wrap-prefix #65# font-lock-multiline t face #60#) 101 103 (fontified t font-lock-fontified t src-block t org-category #52# line-prefix #53# wrap-prefix #66=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face #60#) 103 149 (fontified t font-lock-fontified t src-block t org-category #52# line-prefix #53# wrap-prefix #66# font-lock-multiline t face #60#) 149 158 (fontified t font-lock-fontified t org-category #52# line-prefix #53# wrap-prefix #67=#("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-end-line) 158 159 (fontified t org-category #52# line-prefix #53# wrap-prefix #67# face org-block-end-line) 159 160 (fontified t org-category #52# line-prefix #53# wrap-prefix #("    " 0 4 (face org-indent))) 160 170 (fontified t font-lock-fontified t org-category #52# line-prefix #53# wrap-prefix #68=#("    " 0 4 (face org-indent)) face org-meta-line) 170 171 (fontified t org-category #52# line-prefix #53# wrap-prefix #68#) 171 175 (fontified t org-category #52# line-prefix #53# wrap-prefix #("    " 0 4 (face org-indent)) face org-code) 175 176 (fontified t org-category #52# line-prefix #53# wrap-prefix #("    " 0 4 (face org-indent)))) . 32674) (undo-tree-id0 . 156) (undo-tree-id1 . -175) (undo-tree-id2 . -10) (undo-tree-id3 . -10) (undo-tree-id4 . -10) (undo-tree-id5 . -10) (undo-tree-id6 . -10) (undo-tree-id7 . -10) (undo-tree-id8 . -10) (undo-tree-id9 . -10) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) (undo-tree-id19 . -10) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (undo-tree-id37 . -10) (undo-tree-id38 . -10) (undo-tree-id39 . -10) (undo-tree-id40 . -10) (undo-tree-id41 . -10) (undo-tree-id42 . -10) (undo-tree-id43 . -10) (undo-tree-id44 . -10) (undo-tree-id45 . -10) (undo-tree-id46 . -10) (undo-tree-id47 . -10) (undo-tree-id48 . -10) (undo-tree-id49 . -10) (undo-tree-id50 . -10) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) (undo-tree-id58 . -10) (undo-tree-id59 . -10) (undo-tree-id60 . -10) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -10) (undo-tree-id66 . -10) (undo-tree-id67 . -10) (undo-tree-id68 . -10) (undo-tree-id69 . -10) (undo-tree-id70 . -10) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . 169) (undo-tree-id75 . -15) (undo-tree-id76 . -10) (undo-tree-id77 . -10) (undo-tree-id78 . -10) (undo-tree-id79 . -10) (undo-tree-id80 . -10) (undo-tree-id81 . -10) (undo-tree-id82 . -10) (undo-tree-id83 . -10) (undo-tree-id84 . -10) (undo-tree-id85 . -10) (undo-tree-id86 . -10) (undo-tree-id87 . -10) (undo-tree-id88 . -10) (undo-tree-id89 . -10) (undo-tree-id90 . -10) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -10) (undo-tree-id101 . -10) (undo-tree-id102 . -10) (undo-tree-id103 . -10) (undo-tree-id104 . -10) (undo-tree-id105 . -10) (undo-tree-id106 . -10) (undo-tree-id107 . -10) (undo-tree-id108 . -10) (undo-tree-id109 . -10) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (undo-tree-id112 . -10) (undo-tree-id113 . -10) (undo-tree-id114 . -10) (undo-tree-id115 . -10) (undo-tree-id116 . -10) (undo-tree-id117 . -10) (undo-tree-id118 . -10) (undo-tree-id119 . -10) (undo-tree-id120 . -10) (undo-tree-id121 . -10) (undo-tree-id122 . -10) (undo-tree-id123 . -10) (undo-tree-id124 . -10) (undo-tree-id125 . -10) (undo-tree-id126 . -10) (undo-tree-id127 . -10) (undo-tree-id128 . -10) (undo-tree-id129 . -10) (undo-tree-id130 . -10) (undo-tree-id131 . -10) (undo-tree-id132 . -10) (undo-tree-id133 . -10) (undo-tree-id134 . -10) (undo-tree-id135 . -10) (undo-tree-id136 . -10) (undo-tree-id137 . -10) (undo-tree-id138 . -10) (undo-tree-id139 . -10) (undo-tree-id140 . -10) (undo-tree-id141 . -10) (undo-tree-id142 . -10) (undo-tree-id143 . -10) (undo-tree-id144 . -10) (undo-tree-id145 . -10) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -10) (undo-tree-id151 . -10) (undo-tree-id152 . -10) (undo-tree-id153 . -10) (undo-tree-id154 . -10) (undo-tree-id155 . -10) (undo-tree-id156 . -10) (undo-tree-id157 . -10) (undo-tree-id158 . -10) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (undo-tree-id162 . -10) (undo-tree-id163 . -10) (undo-tree-id164 . -10) (undo-tree-id165 . -10) (undo-tree-id166 . -10) (undo-tree-id167 . -10) (undo-tree-id168 . -10) (undo-tree-id169 . -10) (undo-tree-id170 . -10) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -10) (undo-tree-id174 . -10) (undo-tree-id175 . -10) (undo-tree-id176 . -10) (undo-tree-id177 . -10) (undo-tree-id178 . -10) (undo-tree-id179 . -10) (undo-tree-id180 . -10) (undo-tree-id181 . -10) (undo-tree-id182 . -10) (undo-tree-id183 . -10) (undo-tree-id184 . -10) (undo-tree-id185 . -10) (undo-tree-id186 . -10) (undo-tree-id187 . -10) (undo-tree-id188 . -10) (undo-tree-id189 . -10) (undo-tree-id190 . -10) (undo-tree-id191 . -10) (undo-tree-id192 . -10) (undo-tree-id193 . -10) (undo-tree-id194 . -10) (undo-tree-id195 . -10) (undo-tree-id196 . -10) (undo-tree-id197 . -10) (undo-tree-id198 . -10) (undo-tree-id199 . -10) (undo-tree-id200 . -10) (undo-tree-id201 . -10) (undo-tree-id202 . -10) (undo-tree-id203 . -10) (undo-tree-id204 . -10) (undo-tree-id205 . -10) (undo-tree-id206 . -10) (undo-tree-id207 . -10) (undo-tree-id208 . -10) (undo-tree-id209 . -10) (undo-tree-id210 . -10) (undo-tree-id211 . -10) (undo-tree-id212 . -10) (undo-tree-id213 . -10) (undo-tree-id214 . -10) (undo-tree-id215 . -10) (undo-tree-id216 . -10) (undo-tree-id217 . -10) (undo-tree-id218 . -10) (undo-tree-id219 . -10) (undo-tree-id220 . -10) (undo-tree-id221 . -10) (undo-tree-id222 . -10) (undo-tree-id223 . -10) (undo-tree-id224 . -10) (undo-tree-id225 . -10) (undo-tree-id226 . -10) (undo-tree-id227 . -10) (undo-tree-id228 . -10) (undo-tree-id229 . -10) (undo-tree-id230 . -10) (undo-tree-id231 . -10) (undo-tree-id232 . -10) (undo-tree-id233 . -10) (undo-tree-id234 . -10) (undo-tree-id235 . -10) (undo-tree-id236 . -10) (undo-tree-id237 . -10) (undo-tree-id238 . -10) (undo-tree-id239 . -10) (undo-tree-id240 . -10) (undo-tree-id241 . -10) (undo-tree-id242 . -10) (undo-tree-id243 . -10) (undo-tree-id244 . -10) (undo-tree-id245 . -10) (undo-tree-id246 . -10) (undo-tree-id247 . -10) (undo-tree-id248 . -10) (undo-tree-id249 . -10) (undo-tree-id250 . -10) (undo-tree-id251 . -10) (undo-tree-id252 . -10) (undo-tree-id253 . -10) (undo-tree-id254 . -10) (undo-tree-id255 . -10) (undo-tree-id256 . -10) (undo-tree-id257 . -10) (undo-tree-id258 . -10) (undo-tree-id259 . -10) (undo-tree-id260 . -10) (undo-tree-id261 . -10) (undo-tree-id262 . -10) (undo-tree-id263 . -10) (undo-tree-id264 . -10) (undo-tree-id265 . -10) (undo-tree-id266 . -10) (undo-tree-id267 . -10) (undo-tree-id268 . -10) (undo-tree-id269 . -10) (undo-tree-id270 . -10) (undo-tree-id271 . -10) (undo-tree-id272 . -10) (undo-tree-id273 . -10) (undo-tree-id274 . -10) (undo-tree-id275 . -10) (undo-tree-id276 . -10) (undo-tree-id277 . -10) (undo-tree-id278 . -10) (undo-tree-id279 . -10) (undo-tree-id280 . -10) (undo-tree-id281 . -10) (undo-tree-id282 . -10) (undo-tree-id283 . -10) (undo-tree-id284 . -10) (undo-tree-id285 . -10) (undo-tree-id286 . -10) (undo-tree-id287 . -10) (undo-tree-id288 . -10) (undo-tree-id289 . -10) (undo-tree-id290 . -10) (undo-tree-id291 . -10) (undo-tree-id292 . -10) 32684 (t 24905 5762 635515 187000)) nil (24905 5769 541970 655000) 0 nil]) ((nil rear-nonsticky nil 14774 . 14775) (#("
" 0 1 (fontified nil line-prefix #69=#("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -14946) (14774 . 14947) 13767 (t 24905 5752 985536 519000)) nil (24905 5762 596319 463000) 0 nil]) ((nil rear-nonsticky nil 13766 . 13767) (#("
" 0 1 (fontified nil line-prefix #69# wrap-prefix #("    " 0 4 (face org-indent)))) . -14774) (13766 . 14775) 13303) nil (24905 5752 946533 81000) 0 nil]) ((nil rear-nonsticky nil 12803 . 12804) (#("
" 0 1 (fontified nil line-prefix #69# wrap-prefix #("    " 0 4 (face org-indent)))) . -13302) (12803 . 13303) 12799 (t 24899 55113 562438 500000)) nil (24905 5752 946542 649000) 0 nil]) ((31166 . 31168) (31166 . 31168) (#(": t
" 0 2 (face org-code wrap-prefix #71=#("    " 0 4 (face org-indent)) line-prefix #70=#("    " 0 4 (face org-indent)) fontified t) 2 4 (face org-code wrap-prefix #71# line-prefix #70# fontified t)) . 31166)) nil (24899 55113 537257 625000) 0 nil]) ((31166 . 31168) (31166 . 31168) (#(": t
" 0 2 (face org-code wrap-prefix #72=#("    " 0 4 (face org-indent)) line-prefix #70# fontified t) 2 4 (face org-code wrap-prefix #72# line-prefix #70# fontified t)) . 31166) (t 24899 54987 850380 868000)) nil (24899 55113 537265 971000) 0 nil]) ((#("-mode" 0 1 (display nil face #74=(font-lock-constant-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #73=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t help-echo nil) 1 2 (display nil face #74# font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #73# line-prefix #70# fontified t help-echo nil) 2 3 (display nil face #74# font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #73# line-prefix #70# fontified t help-echo nil) 3 4 (display nil face #74# font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #73# line-prefix #70# fontified t help-echo nil) 4 5 (display nil face #74# font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #73# line-prefix #70# fontified t help-echo nil)) . 31061) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1)) nil (24899 54987 816650 271000) 0 nil]) ((31171 . 31173) (31171 . 31173) (t 24899 54960 424024 167000)) nil (24899 54987 816659 488000) 0 nil]) ((31093 . 31100) (nil fontified nil 31034 . 31036) (nil line-prefix #70# 31034 . 31036) (nil wrap-prefix #("    " 0 4 (face org-indent)) 31034 . 31036) (nil font-lock-fontified t 31034 . 31036) (nil help-echo nil 31034 . 31036) (nil font-lock-multiline t 31034 . 31036) (nil face org-block-begin-line 31034 . 31036) (31034 . 31036) (nil help-echo nil 31065 . 31067) (nil fontified nil 31065 . 31067) (nil line-prefix #70# 31065 . 31067) (nil wrap-prefix #("    " 0 4 (face org-indent)) 31065 . 31067) (nil font-lock-fontified t 31065 . 31067) (nil src-block t 31065 . 31067) (nil font-lock-multiline t 31065 . 31067) (nil face (org-block) 31065 . 31067) (31065 . 31067) (nil help-echo nil 31075 . 31077) (nil fontified nil 31075 . 31077) (nil line-prefix #70# 31075 . 31077) (nil wrap-prefix #("    " 0 4 (face org-indent)) 31075 . 31077) (nil font-lock-fontified t 31075 . 31077) (nil src-block t 31075 . 31077) (nil font-lock-multiline t 31075 . 31077) (nil face (org-block) 31075 . 31077) (31075 . 31077) (31085 . 31087) (31086 . 31088) 31034 (31084 . 31085) 31083) nil (24899 54960 388736 768000) 0 nil]) ((31142 . 31153) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified nil)) . 31142) (31141 . 31143) (t 24899 54951 874123 365000)) nil (24899 54960 388747 78000) 0 nil]) ((31129 . 31130) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31129) (undo-tree-id39 . -1) 31130 (31129 . 31130) (31111 . 31129) (31104 . 31111) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31104) (undo-tree-id40 . -1) (#("h" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31105) (undo-tree-id41 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31106) (undo-tree-id42 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31107) (undo-tree-id43 . -1) (#("k" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31108) (undo-tree-id44 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31109) (undo-tree-id45 . -1) 31110 (31095 . 31110) (#(":" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31095) (undo-tree-id46 . -1) 31096 (31085 . 31096) (31084 . 31085) (31076 . 31084)) nil (24899 54951 837551 548000) 0 nil]) ((31075 . 31076) (31074 . 31075) (31070 . 31074) (#("t" 0 1 (display nil face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t help-echo nil)) . -31070) (undo-tree-id47 . -1) 31071 (31065 . 31071) (31064 . 31065) (31044 . 31064) (31034 . 31044) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #70# fontified t)) . -31034) (undo-tree-id48 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t)) . -31035) (undo-tree-id49 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t)) . -31036) (undo-tree-id50 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t)) . -31037) (undo-tree-id51 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t)) . -31038) (undo-tree-id52 . -1) 31039 (31036 . 31039) (31034 . 31036) (31033 . 31034) 31017) nil (24899 54951 837576 935000) 0 nil]) ((31028 . 31033)) nil (24899 54951 837582 626000) 0 nil]) ((31016 . 31038)) nil (24899 54951 837584 689000) 0 nil]) ((#("- this
- that
  + this
  + that
" 0 1 (composition (3 1 #77=[8213]) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #75=#("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #75#) 2 6 (fontified t line-prefix #70# wrap-prefix #75#) 6 7 (fontified t line-prefix #70# wrap-prefix #75#) 7 8 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #76=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 8 9 (face org-variable-pitch-fixed-face wrap-prefix #76# line-prefix #70# fontified t) 9 13 (wrap-prefix #76# line-prefix #70# fontified t) 13 14 (fontified t line-prefix #70# wrap-prefix #76#) 14 16 (face org-variable-pitch-fixed-face wrap-prefix #78=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified t) 16 17 (composition (6 1 #80=[8226]) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #78#) 17 18 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #78#) 18 22 (fontified t line-prefix #70# wrap-prefix #78#) 22 23 (fontified t line-prefix #70# wrap-prefix #78#) 23 25 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #79=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 25 26 (composition (6 1 #80#) face org-variable-pitch-fixed-face wrap-prefix #79# line-prefix #70# fontified t) 26 27 (face org-variable-pitch-fixed-face wrap-prefix #79# line-prefix #70# fontified t) 27 31 (wrap-prefix #79# line-prefix #70# fontified t) 31 32 (fontified t line-prefix #70# wrap-prefix #79#)) . 31016) (undo-tree-id53 . -32) (undo-tree-id54 . -32) (undo-tree-id55 . -23) (undo-tree-id56 . -23) (undo-tree-id57 . -23)) nil (24899 54951 837594 127000) 0 nil]) ((#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #81=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #81# line-prefix #70# fontified t)) . -31048) (undo-tree-id58 . -2) (undo-tree-id59 . -1) 31050 (#("  " 0 2 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31048) (undo-tree-id60 . -1) (nil fontified t 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #82=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil fontified t 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil wrap-prefix #82# 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition (6 1 #80#) face org-variable-pitch-fixed-face wrap-prefix #82# line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #82# line-prefix #70# fontified t)) . 31050) (31052 . 31054) (31048 . 31050) (#("    " 0 4 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)))) . -31048) (undo-tree-id61 . -1) (nil fontified t 31053 . 31054) (nil line-prefix #70# 31053 . 31054) (nil wrap-prefix #83=#("          " 0 4 (face org-indent) 4 10 (face org-indent)) 31053 . 31054) (nil face org-variable-pitch-fixed-face 31053 . 31054) (nil fontified t 31052 . 31053) (nil line-prefix #70# 31052 . 31053) (nil wrap-prefix #83# 31052 . 31053) (nil face org-variable-pitch-fixed-face 31052 . 31053) (nil composition (7 1 [8227]) 31052 . 31053) (#("* " 0 1 (composition (7 1 #90=[8227]) face org-variable-pitch-fixed-face wrap-prefix #83# line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #83# line-prefix #70# fontified t)) . 31052) (31054 . 31056) (31048 . 31052) (#("  " 0 2 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31048) (undo-tree-id62 . -1) (nil fontified t 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #84=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil fontified t 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil wrap-prefix #84# 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition (6 1 #80#) face org-variable-pitch-fixed-face wrap-prefix #84# line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #84# line-prefix #70# fontified t)) . 31050) (31052 . 31054) (31048 . 31050) (nil fontified t 31049 . 31050) (nil line-prefix #70# 31049 . 31050) (nil wrap-prefix #85=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 31049 . 31050) (nil face org-variable-pitch-fixed-face 31049 . 31050) (nil fontified t 31048 . 31049) (nil line-prefix #70# 31048 . 31049) (nil wrap-prefix #85# 31048 . 31049) (nil face org-variable-pitch-fixed-face 31048 . 31049) (nil composition (3 1 [8213]) 31048 . 31049) (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #85# line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #85# line-prefix #70# fontified t)) . 31048) (31050 . 31052) (#("  " 0 2 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31048) (undo-tree-id63 . -1) (nil fontified t 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #86=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil wrap-prefix #86# 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil fontified t 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition (6 1 #80#) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #86#) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #86# line-prefix #70# fontified t)) . 31050) (31052 . 31054) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil fontified nil 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (31048 . 31052) (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #87=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #87# line-prefix #70# fontified t)) . -31048) (undo-tree-id64 . -2) 31050 (#("  " 0 2 (fontified nil line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31048) (undo-tree-id65 . -1) (nil fontified nil 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #88=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil wrap-prefix #88# 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil fontified nil 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition #92=(6 1 #80#) face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #88#) 1 2 (wrap-prefix #88# line-prefix #70# fontified nil)) . 31050) (31052 . 31054) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil fontified nil 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (31048 . 31052) (#("    * " 0 4 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #89=#("          " 0 4 (face org-indent) 4 10 (face org-indent))) 4 5 (composition (7 1 #90#) face org-variable-pitch-fixed-face wrap-prefix #89# line-prefix #70# fontified t) 5 6 (face org-variable-pitch-fixed-face wrap-prefix #89# line-prefix #70# fontified t)) . -31048) (undo-tree-id66 . -6) 31054 (31048 . 31052) (#("  " 0 2 (face org-variable-pitch-fixed-face wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified nil)) . -31048) (undo-tree-id67 . -1) (nil wrap-prefix #91=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil fontified t 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil wrap-prefix #91# 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil fontified t 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition #92# face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #91#) 1 2 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #91#)) . 31050) (31052 . 31054) (31039 . 31052) (#("  + 
  + that" 0 2 (fontified nil line-prefix #70# wrap-prefix #93=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #93# line-prefix #70# fontified nil) 4 5 (wrap-prefix #93# line-prefix #70# fontified nil) 5 7 (face org-variable-pitch-fixed-face wrap-prefix #94=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified nil) 7 8 (composition (6 1 #80#) face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #94#) 8 9 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #94#) 9 13 (fontified nil line-prefix #70# wrap-prefix #94#)) . 31039) (undo-tree-id68 . -13) (undo-tree-id69 . -13) (undo-tree-id70 . -13) (31039 . 31044) 31047 (#("
" 0 1 (fontified t line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31047) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 31048 (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #95=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #95# line-prefix #70# fontified t)) . -31048) (undo-tree-id74 . -2) (undo-tree-id75 . -1) 31050 (#("  " 0 2 (face org-variable-pitch-fixed-face wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified nil)) . -31048) (undo-tree-id76 . -1) (nil wrap-prefix #96=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil fontified t 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil wrap-prefix #96# 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil fontified t 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition (6 1 #80#) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #96#) 1 2 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #96#)) . 31050) (31052 . 31054) (31039 . 31052) (#("  + 
  + that" 0 2 (fontified nil line-prefix #70# wrap-prefix #97=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #97# line-prefix #70# fontified nil) 4 5 (wrap-prefix #97# line-prefix #70# fontified nil) 5 7 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #98=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 7 8 (composition (6 1 #80#) face org-variable-pitch-fixed-face wrap-prefix #98# line-prefix #70# fontified nil) 8 9 (face org-variable-pitch-fixed-face wrap-prefix #98# line-prefix #70# fontified nil) 9 13 (wrap-prefix #98# line-prefix #70# fontified nil)) . 31039) (undo-tree-id77 . -13) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (31039 . 31044) 31047 (31046 . 31047) (#("t" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified t)) . -31046) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("
" 0 1 (fontified t line-prefix #70# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -31047) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 31048 (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #99=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #99# line-prefix #70# fontified t)) . -31048) (undo-tree-id86 . -2) (undo-tree-id87 . -1) 31050) nil (24899 54951 837691 18000) 0 nil]) ((#("  " 0 2 (face org-variable-pitch-fixed-face wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified nil)) . -31048) (undo-tree-id88 . -2) (undo-tree-id89 . -1) (nil wrap-prefix #100=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 31051 . 31052) (nil line-prefix #70# 31051 . 31052) (nil fontified t 31051 . 31052) (nil face org-variable-pitch-fixed-face 31051 . 31052) (nil wrap-prefix #100# 31050 . 31051) (nil line-prefix #70# 31050 . 31051) (nil fontified t 31050 . 31051) (nil face org-variable-pitch-fixed-face 31050 . 31051) (nil composition (6 1 [8226]) 31050 . 31051) (#("+ " 0 1 (composition (6 1 #80#) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #100#) 1 2 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #100#)) . 31050) (31052 . 31054) 31051) nil (24899 54951 837718 328000) 0 nil]) ((31039 . 31052) (#("  + 
  + that" 0 2 (fontified nil line-prefix #70# wrap-prefix #101=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #101# line-prefix #70# fontified nil) 4 5 (wrap-prefix #101# line-prefix #70# fontified nil) 5 7 (face org-variable-pitch-fixed-face wrap-prefix #102=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified nil) 7 8 (composition (6 1 #80#) face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #102#) 8 9 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #102#) 9 13 (fontified nil line-prefix #70# wrap-prefix #102#)) . 31039) (undo-tree-id90 . -13) (31039 . 31044) 31047 (31043 . 31047) (31030 . 31043) (#("  + 
  + this" 0 2 (fontified nil line-prefix #70# wrap-prefix #103=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 2 4 (wrap-prefix #103# line-prefix #70# fontified nil) 4 5 (wrap-prefix #103# line-prefix #70# fontified nil) 5 7 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #104=#("        " 0 4 (face org-indent) 4 8 (face org-indent))) 7 8 (composition (6 1 #80#) face org-variable-pitch-fixed-face wrap-prefix #104# line-prefix #70# fontified nil) 8 9 (face org-variable-pitch-fixed-face wrap-prefix #104# line-prefix #70# fontified nil) 9 13 (wrap-prefix #104# line-prefix #70# fontified nil)) . 31030) (undo-tree-id91 . -13) (31030 . 31035) 31038 (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #70# fontified t)) . -31038) (undo-tree-id92 . -1) 31039 (31034 . 31039) (31030 . 31032) (nil wrap-prefix #105=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 31031 . 31032) (nil line-prefix #70# 31031 . 31032) (nil fontified t 31031 . 31032) (nil face org-variable-pitch-fixed-face 31031 . 31032) (nil wrap-prefix #105# 31030 . 31031) (nil line-prefix #70# 31030 . 31031) (nil fontified t 31030 . 31031) (nil face org-variable-pitch-fixed-face 31030 . 31031) (nil composition (3 1 [8213]) 31030 . 31031) (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #105#) 1 2 (face org-variable-pitch-fixed-face fontified t line-prefix #70# wrap-prefix #105#)) . 31030) (31032 . 31034) (31023 . 31032) (#("- 
- that" 0 2 (wrap-prefix #106=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified nil) 2 3 (wrap-prefix #106# line-prefix #70# fontified nil) 3 4 (composition (3 1 #77#) face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #107=#("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (face org-variable-pitch-fixed-face fontified nil line-prefix #70# wrap-prefix #107#) 5 9 (fontified nil line-prefix #70# wrap-prefix #107#)) . 31023) (undo-tree-id93 . -9) (31023 . 31026) 31029 (31025 . 31029) (31016 . 31025) (#("- 
- this" 0 2 (wrap-prefix #108=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified nil) 2 3 (wrap-prefix #108# line-prefix #70# fontified nil) 3 4 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #109=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified nil) 4 5 (face org-variable-pitch-fixed-face wrap-prefix #109# line-prefix #70# fontified nil) 5 9 (wrap-prefix #109# line-prefix #70# fontified nil)) . 31016) (undo-tree-id94 . -9) (31016 . 31019) 31022 (31016 . 31022) (#(" " 0 1 (face org-variable-pitch-fixed-face wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #70# fontified t)) . -31016) (undo-tree-id95 . -1) 31017 (31016 . 31017) (#("- " 0 1 (composition (3 1 #77#) face org-variable-pitch-fixed-face wrap-prefix #110=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #70# fontified t) 1 2 (face org-variable-pitch-fixed-face wrap-prefix #110# line-prefix #70# fontified t)) . -31016) (undo-tree-id96 . -2) 31018 (31016 . 31018) (31015 . 31016) (30998 . 31015)) nil (24899 54951 837747 954000) 0 nil]) ((30993 . 30998) 30852 (t 24899 54701 434353 360000)) nil (24899 54951 837755 909000) 0 nil]) ((#("
" 0 1 (display nil face org-block-begin-line font-lock-multiline t help-echo nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #111=#("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -31167) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 31168 (31167 . 31168) (31157 . 31167) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #111# font-lock-fontified t fontified t)) . -31157) (undo-tree-id38 . -1) 31158 (31157 . 31158)) nil (24899 54701 413141 594000) 0 nil]) ((31009 . 31061) (#(" " 0 1 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 31009) (31009 . 31020) 31004) nil (24899 54701 413151 432000) 0 nil]) ((4903 . 4905) (4903 . 4905) (#(": t
" 0 4 (face org-code wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# fontified t)) . 4903) (t 24899 54673 671509 477000)) nil (24899 54701 413155 670000) 0 nil]) ((4864 . 4878)) nil (24899 54673 635628 7000) 0 nil]) ((#("gruvbox " 0 8 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #70# src-block t font-lock-fontified t fontified t)) . 4864) (t 24896 65218 86944 726000)) nil (24899 54673 635635 40000) 0 nil]) ((15471 . 15605) (#("| p | Personal TODO | entry | (file+headline ~/Documents/personal.org Personal TODO list) | * TODO %^{Headline} :personal:%^{Tags}: |
" 0 133 (fontified t line-prefix #114=#("    " 0 4 (face org-indent)) wrap-prefix #113=#("    " 0 4 (face org-indent)) org-category #112="settings" face org-table) 133 134 (fontified t line-prefix #114# wrap-prefix #113# org-category #112#)) . 15471) (t 24896 65198 933506 858000)) nil (24896 65218 61804 599000) 0 nil]) ((#("%^{Scheduled}t " 0 15 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115=#("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 15332)) nil (24896 65198 899020 509000) 0 nil]) ((#("SCHEDULED: " 0 10 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115# wrap-prefix #117=#("    " 0 4 (face org-indent)) org-category #112# font-lock-multiline t face #116=(font-lock-string-face org-block) display nil) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115# wrap-prefix #117# org-category #112# font-lock-multiline t face #116# display nil)) . 15332)) nil (24896 65198 899027 713000) 0 nil]) ((#("    " 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #114# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 15332)) nil (24896 65198 899030 889000) 0 nil]) ((#("    " 0 4 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #114# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14978)) nil (24896 65198 899033 564000) 0 nil]) ((#("     " 0 5 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #114# wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14783)) nil (24896 65198 899036 590000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115# wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14598)) nil (24896 65198 899039 275000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14598)) nil (24896 65198 899042 160000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #115# wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14598)) nil (24896 65198 899044 735000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #114# wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) org-category #112# font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 14598) (t 24894 44374 919641 492000)) nil (24896 65198 899047 811000) 0 nil]) ((5663 . 5665)) nil (24894 44374 793927 898000) 0 nil]) ((#("yes" 0 3 (face org-block-begin-line font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t fontified t)) . 5663) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2)) nil (24894 44374 794009 912000) 0 nil]) ((5536 . 5559) (#("                        " 0 24 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118=#("*" 0 1 (face org-indent)) fontified t)) . 5536) (undo-tree-id36 . 24) (5535 . 5536)) nil (24894 44374 794018 257000) 0 nil]) ((5535 . 5559) (#("                         " 0 25 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5535) (5534 . 5535) (5534 . 5559) (#("                          " 0 26 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5534) (5533 . 5534) (5533 . 5559) (#("                           " 0 27 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5533) (5532 . 5533) (5532 . 5559) (#("                            " 0 28 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5532) (5531 . 5532) (5531 . 5559) (#("                             " 0 29 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5531) (5530 . 5531) (5530 . 5559) (#("                              " 0 30 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5530) (5529 . 5530) (5528 . 5559) (#("                                " 0 32 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5528) (5528 . 5529) (5528 . 5559) (#("                                " 0 32 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5528) (5527 . 5528) (5527 . 5559) (#("                                 " 0 33 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5527) (5526 . 5527) (5526 . 5559) (#("                                  " 0 34 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5526) (5525 . 5526) (5525 . 5559) (#("                                   " 0 35 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5525) (5524 . 5525) (5523 . 5559) (#("                                     " 0 37 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5523) (5523 . 5524) (5523 . 5559) (#("                                     " 0 37 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5523) (5522 . 5523) (5522 . 5559) (#("                                      " 0 38 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5522) (5521 . 5522) (5521 . 5559) (#("                                       " 0 39 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5521) (5520 . 5521) (5519 . 5559) (#("                                         " 0 41 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5519) (5519 . 5520) (5519 . 5559) (#("                                         " 0 41 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5519) (5518 . 5519) (5518 . 5559) (#("                                          " 0 42 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5518) (5517 . 5518) (5517 . 5559) (#("                                           " 0 43 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5517) (5516 . 5517) (5516 . 5559) (#("                                            " 0 44 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5516) (5515 . 5516) (5515 . 5559) (#("                                             " 0 45 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5515) (5514 . 5515) (5513 . 5559) (#("                                               " 0 47 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5513) (5513 . 5514) (5513 . 5559) (#("                                               " 0 47 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5513) (5512 . 5513) (5512 . 5559) (#("                                                " 0 48 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5512) (5511 . 5512) (5511 . 5559) (#("                                                 " 0 49 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5511) (5510 . 5511) (5510 . 5559) (#("                                                  " 0 50 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5510) (5509 . 5510) (5509 . 5559) (#("                                                   " 0 51 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5509) (5508 . 5509) (5508 . 5559) (#("                                                    " 0 52 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5508) (5507 . 5508) (5507 . 5559) (#("                                                     " 0 53 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5507) (5506 . 5507) (5505 . 5559) (#("                                                       " 0 55 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5505) (5505 . 5506)) nil (24894 44374 794060 407000) 0 nil]) ((5505 . 5559) (#(" " 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #118# fontified nil)) . 5505) (5505 . 5516) (t 24894 35407 579441 888000)) nil (24894 44374 794076 316000) 0 nil]) ((19392 . 22168) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up todo-state-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1385 (fontified t line-prefix #120=#("      " 0 6 (face org-indent)) wrap-prefix #121=#("      " 0 6 (face org-indent)) face org-table org-category #119="settings") 1385 1386 (fontified t line-prefix #120# wrap-prefix #121# org-category #119#) 1386 2771 (fontified t line-prefix #120# wrap-prefix #122=#("      " 0 6 (face org-indent)) face org-table org-category #119#) 2771 2772 (fontified t line-prefix #120# wrap-prefix #122# org-category #119#)) . 19392) (undo-tree-id394 . -2772) (t 24894 35397 649449 797000)) nil (24894 35407 553066 504000) 0 nil]) ((17225 . 17230)) nil (24894 35397 615877 118000) 0 nil]) ((#("up " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #126="settings" line-prefix #125=#("      " 0 6 (face org-indent)) wrap-prefix #124=#("                      " 0 6 (face org-indent) 6 22 (face org-indent)) font-lock-multiline t face #123=(org-block) display nil) 1 2 (fontified t font-lock-fontified t help-echo nil src-block t org-category #126# line-prefix #125# wrap-prefix #124# font-lock-multiline t face #123# display nil) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t org-category #126# line-prefix #125# wrap-prefix #124# font-lock-multiline t face #123# display nil)) . 17225) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1)) nil (24894 35397 616694 700000) 0 nil]) ((19390 . 22162) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1371 (fontified t line-prefix #125# wrap-prefix #128=#("      " 0 6 (face org-indent)) face org-table org-category #127="settings") 1371 1372 (fontified t line-prefix #125# wrap-prefix #128# org-category #127#) 1372 2743 (fontified t line-prefix #125# wrap-prefix #129=#("      " 0 6 (face org-indent)) face org-table org-category #127#) 2743 2744 (fontified t line-prefix #125# wrap-prefix #129# org-category #127#)) . 19390) (undo-tree-id393 . -2744) (t 24894 35388 762790 204000)) nil (24894 35397 616719 457000) 0 nil]) ((17214 . 17228)) nil (24894 35388 730900 21000) 0 nil]) ((19376 . 22120) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1371 (fontified t line-prefix #131=#("      " 0 6 (face org-indent)) wrap-prefix #132=#("      " 0 6 (face org-indent)) face org-table org-category #130="settings") 1371 1372 (fontified t line-prefix #131# wrap-prefix #132# org-category #130#) 1372 2743 (fontified t line-prefix #131# wrap-prefix #133=#("      " 0 6 (face org-indent)) face org-table org-category #130#) 2743 2744 (fontified t line-prefix #131# wrap-prefix #133# org-category #130#)) . 19376) (undo-tree-id174 . -2744) (t 24894 35325 949506 677000)) nil (24894 35388 730918 706000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134="settings" line-prefix #131# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16829) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1)) nil (24894 35325 916000 114000) 0 nil]) ((16844 . 16845)) nil (24894 35325 916006 556000) 0 nil]) ((nil rear-nonsticky nil 16856 . 16857) (nil fontified nil 16844 . 16857) (nil fontified t 16844 . 16857) (nil font-lock-fontified t 16844 . 16857) (nil help-echo nil 16844 . 16857) (nil src-block t 16844 . 16857) (nil org-category #134# 16844 . 16857) (nil line-prefix #131# 16844 . 16857) (nil wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) 16844 . 16857) (nil font-lock-multiline t 16844 . 16857) (nil face (org-block) 16844 . 16857) (16844 . 16857) 16843) nil (24894 35325 916015 863000) 0 nil]) ((#("todo-state-up" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137=#("      " 0 6 (face org-indent)) wrap-prefix #136=#("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face #135=(org-block) display nil) 1 4 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 4 5 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 5 6 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 6 8 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 8 9 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 9 10 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 11 12 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t org-category #134# line-prefix #137# wrap-prefix #136# font-lock-multiline t face #135# display nil)) . 16830) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -12) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -13) (undo-tree-id173 . -12) 16843 (t 24894 35250 132899 658000)) nil (24894 35325 916037 133000) 0 nil]) ((19376 . 22120) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1371 (fontified t line-prefix #137# wrap-prefix #139=#("      " 0 6 (face org-indent)) face org-table org-category #138="settings") 1371 1372 (fontified t line-prefix #137# wrap-prefix #139# org-category #138#) 1372 2743 (fontified t line-prefix #137# wrap-prefix #140=#("      " 0 6 (face org-indent)) face org-table org-category #138#) 2743 2744 (fontified t line-prefix #137# wrap-prefix #140# org-category #138#)) . 19376) (undo-tree-id152 . -2744) (t 24894 35238 402908 837000)) nil (24894 35250 112022 192000) 0 nil]) ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #138# line-prefix #137# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . -16843) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 16844 (16843 . 16844) (16834 . 16843) (t 24894 35212 349595 836000)) nil (24894 35238 370315 284000) 0 nil]) ((19367 . 22111) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1371 (fontified t line-prefix #142=#("      " 0 6 (face org-indent)) wrap-prefix #143=#("      " 0 6 (face org-indent)) face org-table org-category #141="settings") 1371 1372 (fontified t line-prefix #142# wrap-prefix #143# org-category #141#) 1372 2743 (fontified t line-prefix #142# wrap-prefix #144=#("      " 0 6 (face org-indent)) face org-table org-category #141#) 2743 2744 (fontified t line-prefix #142# wrap-prefix #144# org-category #141#)) . 19367) (undo-tree-id113 . -2744) (t 24894 35202 246270 368000)) nil (24894 35212 326838 150000) 0 nil]) ((#("n" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #141# line-prefix #142# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16834) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("w" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #141# line-prefix #142# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16834) (#("o" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #141# line-prefix #142# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16834) (#("d" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #141# line-prefix #142# wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16834)) nil (24894 35202 225150 17000) 0 nil]) ((#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t org-category #141# line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 16834) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1)) nil (24894 35202 225501 816000) 0 nil]) ((19372 . 22116) (#("| g | Good agenda          | ((agenda  ((org-agenda-overriding-header Agenda and Tonight's Homework) (org-agenda-sorting-strategy '(time-up deadline-up priority-down effort-down scheduled-down)) (org-super-agenda-groups `((:time-grid t) (:name OVERDUE :discard (:todo SOMEDAY) :deadline past :order 1) (:name School Habits :and (:tag school :tag habit) :order 4) (:name Meetings :tag meeting :order 2) (:name Today's Schedule :time-grid t :order 2) (:name Tests and Quizzes :tag (test quiz assessment conference) :order 3) (:name Homework :and (:tag school :tag homework :deadline (before ,(org-read-date nil nil +8d))) :order 5) (:name Upcoming Schoolwork/Homework :and (:tag (school homework) :deadline future) :order 6) (:name Personal Habits :and (:tag personal :habit t) :order 8) (:name Personal TODO list :tag (personal) :order 7) (:name Emails :tag email :order 8) (:name Scheduled work :scheduled t :order 10) (:discard (:tag drill)))))) (alltodo  ((org-agenda-overriding-header PROJECTS) (org-super-agenda-groups '((:discard (:todo SOMEDAY :not (:tag PROJECT))) (:auto-outline-path t) (:discard (:anything)))))) (alltodo  ((org-agenda-overriding-header Other) (org-super-agenda-groups '((:name Bucket List :and (:todo SOMEDAY :tag PERSONAL) :order 1) (:name Someday Maybe :todo SOMEDAY :order 10) (:name Everything Else :anything t :order 20)))))) | nil | nil |
| n | Agenda and all TODOs | ((agenda  nil) (alltodo  nil| nil |     |
" 0 1371 (fontified nil org-category #146="settings" line-prefix #145=#("      " 0 6 (face org-indent)) wrap-prefix #147=#("      " 0 6 (face org-indent))) 1371 1372 (fontified nil org-category #146# line-prefix #145# wrap-prefix #147#) 1372 2743 (fontified nil org-category #146# line-prefix #145# wrap-prefix #148=#("      " 0 6 (face org-indent))) 2743 2744 (fontified nil org-category #146# line-prefix #145# wrap-prefix #148#)) . 19372) (t 24894 35184 229617 699000)) nil (24894 35202 225508 759000) 0 nil]) ((16830 . 16840) (t 24875 60223 841606 68000)) nil (24894 35184 195483 856000) 0 nil]) ((25389 . 25391) (25389 . 25391) (#(": t
" 0 2 (face org-code wrap-prefix #150=#("      " 0 6 (face org-indent)) line-prefix #149=#("      " 0 6 (face org-indent)) fontified t) 2 4 (face org-code wrap-prefix #150# line-prefix #149# fontified t)) . 25389)) nil (24875 60223 808975 754000) 0 nil]) ((25289 . 25301)) nil (24875 60223 808983 107000) 0 nil]) ((#("pdf-annot-delete)" 0 17 (display nil face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #149# fontified t src-block t font-lock-fontified t)) . 25289) (undo-tree-id0 . -17) (undo-tree-id1 . -17)) nil (24875 60223 809011 450000) 0 nil]) ((25284 . 25285) (t 24875 60193 882619 934000)) nil (24875 60223 809014 876000) 0 nil]) ((#("d" 0 1 (help-echo nil display nil face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #149# fontified t src-block t font-lock-fontified t)) . 25284)) nil (24875 60193 848513 491000) 0 nil]) ((nil rear-nonsticky nil 25247 . 25248) (#("
" 0 1 (wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #149# fontified nil display nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -25306) (25244 . 25307) (nil fontified t 25243 . 25244) (nil font-lock-fontified t 25243 . 25244) (nil help-echo nil 25243 . 25244) (nil src-block t 25243 . 25244) (nil line-prefix #149# 25243 . 25244) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25243 . 25244) (nil font-lock-multiline t 25243 . 25244) (nil face (org-block) 25243 . 25244) (25243 . 25244) 25221) nil (24875 60193 848527 336000) 0 nil]) ((25331 . 25333) (25320 . 25333) (#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #149# fontified nil)) . 25320) (25319 . 25321) (t 24875 60149 487352 204000)) nil (24875 60193 848533 167000) 0 nil]) ((nil fontified nil 25221 . 25222) (nil font-lock-fontified t 25221 . 25222) (nil help-echo nil 25221 . 25222) (nil src-block t 25221 . 25222) (nil line-prefix #149# 25221 . 25222) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25221 . 25222) (nil font-lock-multiline t 25221 . 25222) (nil face (font-lock-string-face org-block) 25221 . 25222) (25221 . 25222) (#("D" 0 1 (display nil face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t)) . 25221) (t 24875 49333 656643 776000)) nil (24875 60149 468253 649000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((25798 . 25800) (25798 . 25800) (#(": t
" 0 2 (fontified t line-prefix #152=#("      " 0 6 (face org-indent)) wrap-prefix #151=#("      " 0 6 (face org-indent)) face org-code) 2 4 (fontified t line-prefix #152# wrap-prefix #151# face org-code)) . 25798) (t 24875 48513 434868 1000)) ((25798 . 25802) (#("t
" 0 1 (fontified nil line-prefix #154=#("      " 0 6 (face org-indent)) wrap-prefix #153=#("      " 0 6 (face org-indent)) face org-code) 1 2 (fontified t line-prefix #154# wrap-prefix #153# face org-code)) . 25798) (#(": " 0 2 (fontified t line-prefix #152# wrap-prefix #("      " 0 6 (face org-indent)) face org-code)) . 25798) (t 24875 48906 594422 999000)) (24875 48906 568585 727000) 0 nil]) ((#("  (use-package pdf-view
  :config
  (setq pdf-view-display-size 'fit-page
         pdf-view-use-imagemagick t))
" 0 2 (fontified t line-prefix #152# wrap-prefix #156=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155=(org-block) display nil) 2 3 (line-prefix #152# wrap-prefix #156# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 3 14 (line-prefix #152# wrap-prefix #156# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #155#) display nil) 14 15 (line-prefix #152# wrap-prefix #156# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 15 23 (line-prefix #152# wrap-prefix #156# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face . #155#) display nil) 23 24 (line-prefix #152# wrap-prefix #156# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 24 26 (line-prefix #152# wrap-prefix #157=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 26 33 (line-prefix #152# wrap-prefix #157# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face . #155#) display nil) 33 34 (line-prefix #152# wrap-prefix #157# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 34 36 (line-prefix #152# wrap-prefix #158=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 36 37 (line-prefix #152# wrap-prefix #158# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 37 41 (line-prefix #152# wrap-prefix #158# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #155#) display nil) 41 74 (line-prefix #152# wrap-prefix #158# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 74 83 (line-prefix #152# wrap-prefix #159=#("               " 0 6 (face org-indent) 6 15 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 83 110 (line-prefix #152# wrap-prefix #159# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 110 111 (line-prefix #152# wrap-prefix #159# fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #155# display nil) 111 112 (fontified t font-lock-fontified t help-echo nil line-prefix #152# wrap-prefix #159# src-block t font-lock-multiline t face #155# display nil)) . 24954) (undo-tree-id9 . -81) (undo-tree-id10 . -2) (undo-tree-id11 . -110) (undo-tree-id12 . 1) (undo-tree-id14 . -41) (undo-tree-id16 . -41) (undo-tree-id17 . -7) (undo-tree-id18 . -41) (undo-tree-id19 . -81) (undo-tree-id20 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -81) (undo-tree-id25 . -81) (undo-tree-id27 . -81) (undo-tree-id29 . -81) (undo-tree-id31 . -81) (undo-tree-id33 . -81) (undo-tree-id35 . -81) (undo-tree-id37 . -81) (undo-tree-id39 . -81) (undo-tree-id41 . -81) (undo-tree-id43 . -81) (undo-tree-id45 . -81) (undo-tree-id47 . -81) (undo-tree-id49 . -81) (undo-tree-id51 . -81) (undo-tree-id53 . -81) (undo-tree-id55 . -81) (undo-tree-id57 . -81) (undo-tree-id59 . -81) (undo-tree-id61 . -81) (undo-tree-id63 . -81) (undo-tree-id65 . -81) (undo-tree-id67 . -81) (undo-tree-id69 . -81) (undo-tree-id71 . -81) (undo-tree-id73 . -81) (undo-tree-id75 . -81) (undo-tree-id77 . -81) (undo-tree-id79 . -81) (undo-tree-id81 . -81) (undo-tree-id83 . -81) (undo-tree-id85 . -81) (undo-tree-id87 . -81) (undo-tree-id89 . -81) (undo-tree-id91 . -81) (undo-tree-id93 . -81) (undo-tree-id95 . -81) (undo-tree-id97 . -81) (undo-tree-id99 . -81) (undo-tree-id101 . -41) (undo-tree-id103 . -41) (undo-tree-id105 . -41) (undo-tree-id107 . -41) (undo-tree-id109 . -41) (undo-tree-id111 . -41) (undo-tree-id113 . -41) (undo-tree-id115 . -41) (undo-tree-id117 . -41) (undo-tree-id119 . -41) (undo-tree-id121 . -41) (undo-tree-id123 . -41) (undo-tree-id125 . -41) (undo-tree-id127 . -41) (undo-tree-id129 . -41) (undo-tree-id131 . -41) (undo-tree-id133 . -41) (undo-tree-id135 . -41) (undo-tree-id137 . -31) (undo-tree-id139 . -31) (undo-tree-id141 . -31) (undo-tree-id143 . -31) (undo-tree-id145 . -31) (undo-tree-id147 . -31) (undo-tree-id149 . -31) (undo-tree-id151 . -31) (undo-tree-id153 . -31) (undo-tree-id155 . -31) (undo-tree-id157 . -31) (undo-tree-id159 . -31) (undo-tree-id161 . -31) (undo-tree-id163 . -31) (undo-tree-id165 . -31) (undo-tree-id167 . -31) (undo-tree-id169 . -31) (undo-tree-id171 . -7) (undo-tree-id173 . -7) (undo-tree-id175 . -7) (undo-tree-id177 . -7) (undo-tree-id179 . -7) (undo-tree-id181 . -7) (undo-tree-id183 . -7) (undo-tree-id185 . -7) (undo-tree-id187 . -7) (undo-tree-id189 . -7) (undo-tree-id191 . -7) (undo-tree-id193 . -7) (undo-tree-id195 . -7) (undo-tree-id197 . -7) (undo-tree-id199 . -7) (undo-tree-id201 . -7) (undo-tree-id203 . -7) (undo-tree-id205 . -7) (undo-tree-id207 . -7) (undo-tree-id209 . -7) (undo-tree-id211 . -7) (undo-tree-id213 . -7) (undo-tree-id215 . -7) (undo-tree-id217 . -7) (undo-tree-id219 . -7) (undo-tree-id221 . -7) (undo-tree-id223 . -7) (undo-tree-id225 . -7) (undo-tree-id227 . -7) (undo-tree-id229 . -7) (undo-tree-id231 . -7) (undo-tree-id233 . -7) (undo-tree-id235 . -7) (undo-tree-id237 . -7) (undo-tree-id239 . -7) (undo-tree-id241 . -7) 24961) ((24954 . 25066)) (24875 49293 453653 706000) 0 nil]) ((25910 . 25912) (25910 . 25912) (#(": t
" 0 2 (fontified t line-prefix #152# wrap-prefix #160=#("      " 0 6 (face org-indent)) face org-code) 2 4 (fontified t line-prefix #152# wrap-prefix #160# face org-code)) . 25910) (t 24875 48458 557588 243000)) ((25910 . 25914) (#("t
" 0 1 (fontified nil line-prefix #154# wrap-prefix #161=#("      " 0 6 (face org-indent)) face org-code) 1 2 (fontified t line-prefix #154# wrap-prefix #161# face org-code)) . 25910) (#(": " 0 2 (fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) face org-code)) . 25910)) (24875 49294 11655 952000) 0 nil]) ((#("!" 0 1 (line-prefix #152# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) display nil)) . 24995) (undo-tree-id5 . -1) (undo-tree-id7 . -1)) ((24995 . 24996)) (24875 49294 871668 927000) 0 nil]) ((25911 . 25913) (25911 . 25913) (#(": t
" 0 4 (fontified t line-prefix #152# wrap-prefix #("      " 0 6 (face org-indent)) face org-code)) . 25911) (t 24875 48444 987449 432000)) ((25911 . 25915) (#("t
" 0 1 (fontified nil line-prefix #154# wrap-prefix #162=#("      " 0 6 (face org-indent)) face org-code) 1 2 (fontified t line-prefix #154# wrap-prefix #162# face org-code)) . 25911) (#(": " 0 2 (fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) face org-code)) . 25911)) (24875 49295 651631 538000) 0 nil]) ((nil rear-nonsticky nil 25065 . 25066) (nil fontified nil 25029 . 25066) (nil fontified nil 24988 . 25029) (nil fontified nil 24978 . 24988) (nil fontified nil 24956 . 24978) (nil fontified t 24956 . 25066) (nil font-lock-fontified t 24956 . 25066) (nil help-echo nil 24956 . 25066) (nil line-prefix #152# 24956 . 25066) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24956 . 25066) (nil src-block t 24956 . 25066) (nil font-lock-multiline t 24956 . 25066) (nil face (org-block) 24956 . 25066) (24956 . 25066) 24955) ((#("(use-package pdf-view
  :config
  (setq! pdf-view-display-size 'fit-page
         pdf-view-use-imagemagick t))" 0 1 (line-prefix #154# wrap-prefix #164=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163=(org-block) display nil) 1 5 (line-prefix #154# wrap-prefix #164# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 5 12 (line-prefix #154# wrap-prefix #164# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 12 13 (line-prefix #154# wrap-prefix #164# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 13 21 (line-prefix #154# wrap-prefix #164# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 21 22 (line-prefix #154# wrap-prefix #164# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 22 24 (line-prefix #154# wrap-prefix #165=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 24 31 (line-prefix #154# wrap-prefix #165# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 31 32 (line-prefix #154# wrap-prefix #165# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 32 34 (line-prefix #154# wrap-prefix #166=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 34 35 (line-prefix #154# wrap-prefix #166# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 35 39 (line-prefix #154# wrap-prefix #166# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 39 40 (line-prefix #154# wrap-prefix #166# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 40 73 (line-prefix #154# wrap-prefix #166# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 73 82 (line-prefix #154# wrap-prefix #167=#("               " 0 6 (face org-indent) 6 15 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 82 109 (line-prefix #154# wrap-prefix #167# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil) 109 110 (line-prefix #154# wrap-prefix #167# fontified nil rear-nonsticky nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #163# display nil)) . 24956) (undo-tree-id242 . -109) (undo-tree-id243 . -80) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -39) (undo-tree-id284 . -39) (undo-tree-id285 . -39) (undo-tree-id286 . -39) (undo-tree-id287 . -39) (undo-tree-id288 . -39) (undo-tree-id289 . -39) (undo-tree-id290 . -39) (undo-tree-id291 . -39) (undo-tree-id292 . -39) (undo-tree-id293 . -39) (undo-tree-id294 . -39) (undo-tree-id295 . -39) (undo-tree-id296 . -39) (undo-tree-id297 . -39) (undo-tree-id298 . -39) (undo-tree-id299 . -39) (undo-tree-id300 . -39) (undo-tree-id301 . -39) (undo-tree-id302 . -39) (undo-tree-id303 . -39) (undo-tree-id304 . -39) (undo-tree-id305 . -39) (undo-tree-id306 . -39) (undo-tree-id307 . -39) (undo-tree-id308 . -39) (undo-tree-id309 . -39) (undo-tree-id310 . -39) (undo-tree-id311 . -39) (undo-tree-id312 . -39) (undo-tree-id313 . -39) (undo-tree-id314 . -39) (undo-tree-id315 . -39) (undo-tree-id316 . -39) (undo-tree-id317 . -39) (undo-tree-id318 . -39) (undo-tree-id319 . -39) (undo-tree-id320 . -39) (nil face (org-block) 25065 . 25066) (nil face (org-block) 25038 . 25065) (nil face (org-block) 25029 . 25038) (nil face (org-block) 24996 . 25029) (nil face (org-block) 24995 . 24996) (nil face (org-block) 24991 . 24995) (nil face (org-block) 24990 . 24991) (nil face (org-block) 24988 . 24990) (nil face (org-block) 24987 . 24988) (nil face (font-lock-builtin-face org-block) 24980 . 24987) (nil face (org-block) 24978 . 24980) (nil face (org-block) 24977 . 24978) (nil face (font-lock-constant-face org-block) 24969 . 24977) (nil face (org-block) 24968 . 24969) (nil face (font-lock-keyword-face org-block) 24961 . 24968) (nil face (font-lock-keyword-face org-block) 24957 . 24961) (nil face (org-block) 24956 . 24957) (nil wrap-prefix #168=#("               " 0 6 (face org-indent) 6 15 (face org-indent)) 25065 . 25066) (nil wrap-prefix #168# 25038 . 25065) (nil wrap-prefix #168# 25029 . 25038) (nil wrap-prefix #169=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24996 . 25029) (nil wrap-prefix #169# 24995 . 24996) (nil wrap-prefix #169# 24991 . 24995) (nil wrap-prefix #169# 24990 . 24991) (nil wrap-prefix #169# 24988 . 24990) (nil wrap-prefix #170=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24987 . 24988) (nil wrap-prefix #170# 24980 . 24987) (nil wrap-prefix #170# 24978 . 24980) (nil wrap-prefix #171=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24977 . 24978) (nil wrap-prefix #171# 24969 . 24977) (nil wrap-prefix #171# 24968 . 24969) (nil wrap-prefix #171# 24961 . 24968) (nil wrap-prefix #171# 24957 . 24961) (nil wrap-prefix #171# 24956 . 24957) (nil line-prefix #154# 25065 . 25066) (nil line-prefix #154# 25038 . 25065) (nil line-prefix #154# 25029 . 25038) (nil line-prefix #154# 24996 . 25029) (nil line-prefix #154# 24995 . 24996) (nil line-prefix #154# 24991 . 24995) (nil line-prefix #154# 24990 . 24991) (nil line-prefix #154# 24988 . 24990) (nil line-prefix #154# 24987 . 24988) (nil line-prefix #154# 24980 . 24987) (nil line-prefix #154# 24978 . 24980) (nil line-prefix #154# 24977 . 24978) (nil line-prefix #154# 24969 . 24977) (nil line-prefix #154# 24968 . 24969) (nil line-prefix #154# 24961 . 24968) (nil line-prefix #154# 24957 . 24961) (nil line-prefix #154# 24956 . 24957) (nil fontified nil 25065 . 25066) (nil fontified nil 25038 . 25065) (nil fontified nil 25029 . 25038) (nil fontified nil 24996 . 25029) (nil fontified nil 24995 . 24996) (nil fontified nil 24991 . 24995) (nil fontified nil 24990 . 24991) (nil fontified nil 24988 . 24990) (nil fontified nil 24987 . 24988) (nil fontified nil 24980 . 24987) (nil fontified nil 24978 . 24980) (nil fontified nil 24977 . 24978) (nil fontified nil 24969 . 24977) (nil fontified nil 24968 . 24969) (nil fontified nil 24961 . 24968) (nil fontified nil 24957 . 24961) (nil fontified nil 24956 . 24957) (nil rear-nonsticky t 25065 . 25066)) (24875 49296 417851 814000) 0 nil]) ((24954 . 24956) (24953 . 24954) (t 24875 46699 106946 173000) 24952) ((#("
" 0 1 (fontified nil line-prefix #152# wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line display nil)) . 24953) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("  " 0 1 (fontified t line-prefix #154# wrap-prefix #173=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #172=(org-block) display nil) 1 2 (fontified t line-prefix #154# wrap-prefix #173# font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #172# display nil)) . 24954) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1)) (24875 49296 772686 136000) 0 nil] [nil nil ((nil rear-nonsticky nil 25062 . 25063) (nil fontified nil 25026 . 25063) (nil fontified nil 24985 . 25026) (nil fontified nil 24975 . 24985) (nil fontified nil 24953 . 24975) (24953 . 25063) 24952 (t 24875 46699 106946 173000)) ((#("(use-package pdf-view
  :config
  (setq! pdf-view-display-size 'fit-page
         pdf-view-use-imagemagick t))" 0 22 (line-prefix #152# wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 24 (line-prefix #152# wrap-prefix #174=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil face org-variable-pitch-fixed-face font-lock-fontified t font-lock-multiline t src-block t) 24 32 (line-prefix #152# wrap-prefix #174# fontified nil font-lock-fontified t font-lock-multiline t src-block t) 32 34 (line-prefix #152# wrap-prefix #175=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil face org-variable-pitch-fixed-face font-lock-fontified t font-lock-multiline t src-block t) 34 73 (line-prefix #152# wrap-prefix #175# fontified nil font-lock-fontified t font-lock-multiline t src-block t) 73 82 (line-prefix #152# wrap-prefix #176=#("               " 0 6 (face org-indent) 6 15 (face org-indent)) fontified nil face org-variable-pitch-fixed-face font-lock-fontified t font-lock-multiline t src-block t) 82 109 (line-prefix #152# wrap-prefix #176# fontified nil font-lock-fontified t font-lock-multiline t src-block t) 109 110 (line-prefix #152# wrap-prefix #176# fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t src-block t)) . 24953) (undo-tree-id0 . -109) (undo-tree-id1 . -109) (undo-tree-id2 . -109) (undo-tree-id3 . -109) (nil rear-nonsticky t 25062 . 25063)) (24875 48442 615230 123000) 0 nil]) ((25798 . 25800) (25798 . 25800) (#(": t
" 0 2 (face org-code wrap-prefix #178=#("      " 0 6 (face org-indent)) line-prefix #177=#("      " 0 6 (face org-indent)) fontified t) 2 4 (face org-code wrap-prefix #178# line-prefix #177# fontified t)) . 25798) (t 24875 46691 58686 466000)) ((25798 . 25802) (#("t
" 0 1 (fontified nil line-prefix #154# wrap-prefix #179=#("      " 0 6 (face org-indent)) face org-code) 1 2 (fontified t line-prefix #154# wrap-prefix #179# face org-code)) . 25798) (#(": " 0 2 (fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) face org-code)) . 25798)) (24875 49298 220620 147000) 0 nil]) ((25516 . 25525) (#("-" 0 1 (display nil face #200=(org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #177#)) . -25516) (undo-tree-id45 . -1) (undo-tree-id47 . -1) (undo-tree-id49 . -1) (undo-tree-id51 . -1) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (undo-tree-id65 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) (undo-tree-id73 . -1) (undo-tree-id75 . -1) (undo-tree-id77 . -1) (undo-tree-id79 . -1) (undo-tree-id81 . -1) 25517 (25496 . 25517) (#("c" 0 1 (display nil face #197=(org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #177#)) . -25496) 25497 (25492 . 25497) (#(" " 0 1 (display nil face #193=(org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #177#)) . -25492) 25493 (25491 . 25493) (nil line-prefix #177# 24954 . 24956) (nil wrap-prefix #("      " 0 6 (face org-indent)) 24954 . 24956) (nil fontified nil 24954 . 24956) (nil font-lock-fontified t 24954 . 24956) (nil help-echo nil 24954 . 24956) (nil font-lock-multiline t 24954 . 24956) (nil face org-block-begin-line 24954 . 24956) (24954 . 24956) (nil line-prefix #177# 24977 . 24978) (nil wrap-prefix #("      " 0 6 (face org-indent)) 24977 . 24978) (nil fontified nil 24977 . 24978) (nil font-lock-fontified t 24977 . 24978) (nil help-echo nil 24977 . 24978) (nil src-block t 24977 . 24978) (nil font-lock-multiline t 24977 . 24978) (nil face (org-block) 24977 . 24978) (24977 . 24978) (nil line-prefix #177# 24978 . 24979) (nil wrap-prefix #180=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 24978 . 24979) (nil fontified nil 24978 . 24979) (nil font-lock-fontified t 24978 . 24979) (nil help-echo nil 24978 . 24979) (nil src-block t 24978 . 24979) (nil font-lock-multiline t 24978 . 24979) (nil face (org-block) 24978 . 24979) (24978 . 24979) (nil line-prefix #177# 25009 . 25010) (nil wrap-prefix #180# 25009 . 25010) (nil fontified nil 25009 . 25010) (nil font-lock-fontified t 25009 . 25010) (nil help-echo nil 25009 . 25010) (nil src-block t 25009 . 25010) (nil font-lock-multiline t 25009 . 25010) (nil face (font-lock-comment-face org-block) 25009 . 25010) (25009 . 25010) (nil line-prefix #177# 25010 . 25011) (nil wrap-prefix #181=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25010 . 25011) (nil fontified nil 25010 . 25011) (nil font-lock-fontified t 25010 . 25011) (nil help-echo nil 25010 . 25011) (nil src-block t 25010 . 25011) (nil font-lock-multiline t 25010 . 25011) (nil face (org-block) 25010 . 25011) (25010 . 25011) (nil line-prefix #177# 25018 . 25020) (nil wrap-prefix #181# 25018 . 25020) (nil fontified nil 25018 . 25020) (nil font-lock-fontified t 25018 . 25020) (nil help-echo nil 25018 . 25020) (nil src-block t 25018 . 25020) (nil font-lock-multiline t 25018 . 25020) (nil face (org-block) 25018 . 25020) (25018 . 25020) (nil line-prefix #177# 25033 . 25035) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25033 . 25035) (nil fontified nil 25033 . 25035) (nil font-lock-fontified t 25033 . 25035) (nil help-echo nil 25033 . 25035) (nil src-block t 25033 . 25035) (nil font-lock-multiline t 25033 . 25035) (nil face (font-lock-comment-face org-block) 25033 . 25035) (25033 . 25035) (nil line-prefix #177# 25055 . 25057) (nil wrap-prefix #182=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25055 . 25057) (nil fontified nil 25055 . 25057) (nil font-lock-fontified t 25055 . 25057) (nil help-echo nil 25055 . 25057) (nil src-block t 25055 . 25057) (nil font-lock-multiline t 25055 . 25057) (nil face (org-block) 25055 . 25057) (25055 . 25057) (nil line-prefix #177# 25087 . 25088) (nil wrap-prefix #182# 25087 . 25088) (nil fontified nil 25087 . 25088) (nil font-lock-fontified t 25087 . 25088) (nil help-echo nil 25087 . 25088) (nil src-block t 25087 . 25088) (nil font-lock-multiline t 25087 . 25088) (nil face (font-lock-comment-face org-block) 25087 . 25088) (25087 . 25088) (nil line-prefix #177# 25088 . 25089) (nil wrap-prefix #183=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25088 . 25089) (nil fontified nil 25088 . 25089) (nil font-lock-fontified t 25088 . 25089) (nil help-echo nil 25088 . 25089) (nil src-block t 25088 . 25089) (nil font-lock-multiline t 25088 . 25089) (nil face (org-block) 25088 . 25089) (25088 . 25089) (nil line-prefix #177# 25135 . 25136) (nil wrap-prefix #183# 25135 . 25136) (nil fontified nil 25135 . 25136) (nil font-lock-fontified t 25135 . 25136) (nil help-echo nil 25135 . 25136) (nil src-block t 25135 . 25136) (nil font-lock-multiline t 25135 . 25136) (nil face (org-block) 25135 . 25136) (25135 . 25136) (nil line-prefix #177# 25136 . 25137) (nil wrap-prefix #184=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25136 . 25137) (nil fontified nil 25136 . 25137) (nil font-lock-fontified t 25136 . 25137) (nil help-echo nil 25136 . 25137) (nil src-block t 25136 . 25137) (nil font-lock-multiline t 25136 . 25137) (nil face (org-block) 25136 . 25137) (25136 . 25137) (nil line-prefix #177# 25173 . 25175) (nil wrap-prefix #184# 25173 . 25175) (nil fontified nil 25173 . 25175) (nil font-lock-fontified t 25173 . 25175) (nil help-echo nil 25173 . 25175) (nil src-block t 25173 . 25175) (nil font-lock-multiline t 25173 . 25175) (nil face (font-lock-comment-face org-block) 25173 . 25175) (25173 . 25175) (nil line-prefix #177# 25222 . 25224) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25222 . 25224) (nil fontified nil 25222 . 25224) (nil font-lock-fontified t 25222 . 25224) (nil help-echo nil 25222 . 25224) (nil src-block t 25222 . 25224) (nil font-lock-multiline t 25222 . 25224) (nil face (org-block) 25222 . 25224) (25222 . 25224) (nil line-prefix #177# 25246 . 25248) (nil wrap-prefix #185=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25246 . 25248) (nil fontified nil 25246 . 25248) (nil font-lock-fontified t 25246 . 25248) (nil help-echo nil 25246 . 25248) (nil src-block t 25246 . 25248) (nil font-lock-multiline t 25246 . 25248) (nil face (org-block) 25246 . 25248) (25246 . 25248) (nil line-prefix #177# 25306 . 25307) (nil wrap-prefix #185# 25306 . 25307) (nil fontified nil 25306 . 25307) (nil font-lock-fontified t 25306 . 25307) (nil help-echo nil 25306 . 25307) (nil src-block t 25306 . 25307) (nil font-lock-multiline t 25306 . 25307) (nil face (org-block) 25306 . 25307) (25306 . 25307) (nil line-prefix #177# 25307 . 25308) (nil wrap-prefix #186=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25307 . 25308) (nil fontified nil 25307 . 25308) (nil font-lock-fontified t 25307 . 25308) (nil help-echo nil 25307 . 25308) (nil src-block t 25307 . 25308) (nil font-lock-multiline t 25307 . 25308) (nil face (org-block) 25307 . 25308) (25307 . 25308) (nil line-prefix #177# 25337 . 25338) (nil wrap-prefix #186# 25337 . 25338) (nil fontified nil 25337 . 25338) (nil font-lock-fontified t 25337 . 25338) (nil help-echo nil 25337 . 25338) (nil src-block t 25337 . 25338) (nil font-lock-multiline t 25337 . 25338) (nil face (font-lock-comment-face org-block) 25337 . 25338) (25337 . 25338) (nil line-prefix #177# 25338 . 25339) (nil wrap-prefix #187=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25338 . 25339) (nil fontified nil 25338 . 25339) (nil font-lock-fontified t 25338 . 25339) (nil help-echo nil 25338 . 25339) (nil src-block t 25338 . 25339) (nil font-lock-multiline t 25338 . 25339) (nil face (org-block) 25338 . 25339) (25338 . 25339) (nil line-prefix #177# 25394 . 25396) (nil wrap-prefix #187# 25394 . 25396) (nil fontified nil 25394 . 25396) (nil font-lock-fontified t 25394 . 25396) (nil help-echo nil 25394 . 25396) (nil src-block t 25394 . 25396) (nil font-lock-multiline t 25394 . 25396) (nil face (org-block) 25394 . 25396) (25394 . 25396) (nil line-prefix #177# 25424 . 25426) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25424 . 25426) (nil fontified nil 25424 . 25426) (nil font-lock-fontified t 25424 . 25426) (nil help-echo nil 25424 . 25426) (nil src-block t 25424 . 25426) (nil font-lock-multiline t 25424 . 25426) (nil face (font-lock-comment-face org-block) 25424 . 25426) (25424 . 25426) (25459 . 25461) (nil line-prefix #177# 25460 . 25461) (nil wrap-prefix #("      " 0 6 (face org-indent)) 25460 . 25461) (nil fontified nil 25460 . 25461) (nil font-lock-fontified t 25460 . 25461) (nil help-echo nil 25460 . 25461) (nil src-block t 25460 . 25461) (nil font-lock-multiline t 25460 . 25461) (nil face (org-block) 25460 . 25461) (25460 . 25461) (nil line-prefix #177# 25461 . 25462) (nil wrap-prefix #188=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25461 . 25462) (nil fontified nil 25461 . 25462) (nil font-lock-fontified t 25461 . 25462) (nil help-echo nil 25461 . 25462) (nil src-block t 25461 . 25462) (nil font-lock-multiline t 25461 . 25462) (nil face (org-block) 25461 . 25462) (25461 . 25462) (nil line-prefix #177# 25483 . 25484) (nil wrap-prefix #188# 25483 . 25484) (nil fontified nil 25483 . 25484) (nil font-lock-fontified t 25483 . 25484) (nil help-echo nil 25483 . 25484) (nil src-block t 25483 . 25484) (nil font-lock-multiline t 25483 . 25484) (nil face (font-lock-comment-face org-block) 25483 . 25484) (25483 . 25484) (nil line-prefix #177# 25484 . 25485) (nil wrap-prefix #189=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25484 . 25485) (nil fontified nil 25484 . 25485) (nil font-lock-fontified t 25484 . 25485) (nil help-echo nil 25484 . 25485) (nil src-block t 25484 . 25485) (nil font-lock-multiline t 25484 . 25485) (nil face (org-block) 25484 . 25485) (25484 . 25485) (nil line-prefix #177# 25568 . 25570) (nil wrap-prefix #189# 25568 . 25570) (nil fontified nil 25568 . 25570) (nil font-lock-fontified t 25568 . 25570) (nil help-echo nil 25568 . 25570) (nil src-block t 25568 . 25570) (nil font-lock-multiline t 25568 . 25570) (nil face (org-block) 25568 . 25570) (25568 . 25570) (nil line-prefix #177# 25641 . 25643) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25641 . 25643) (nil fontified nil 25641 . 25643) (nil font-lock-fontified t 25641 . 25643) (nil help-echo nil 25641 . 25643) (nil src-block t 25641 . 25643) (nil font-lock-multiline t 25641 . 25643) (nil face (org-block) 25641 . 25643) (25641 . 25643) 24954 (nil line-prefix #177# 25458 . 25459) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25458 . 25459) (nil fontified t 25458 . 25459) (nil font-lock-fontified t 25458 . 25459) (nil help-echo nil 25458 . 25459) (nil src-block t 25458 . 25459) (nil font-lock-multiline t 25458 . 25459) (nil face (org-block) 25458 . 25459) (25458 . 25459) (t 24875 45639 124951 949000) 25424) ((#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25458) (nil face (org-block) 25458 . 25459) (nil fontified nil 25458 . 25459) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25458 . 25459) (nil line-prefix #154# 25458 . 25459) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25641) (nil face (org-block) 25641 . 25643) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25641 . 25643) (nil line-prefix #152# 25641 . 25643) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25568) (nil face (org-block) 25568 . 25570) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25568 . 25570) (nil line-prefix #152# 25568 . 25570) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25484) (nil face (org-block) 25484 . 25485) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25484 . 25485) (nil line-prefix #154# 25484 . 25485) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25483) (nil face (org-block) 25483 . 25484) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25483 . 25484) (nil line-prefix #152# 25483 . 25484) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25461) (nil face (org-block) 25461 . 25462) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25461 . 25462) (nil line-prefix #154# 25461 . 25462) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25460) (nil face (org-block) 25460 . 25461) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25460 . 25461) (nil line-prefix #152# 25460 . 25461) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face #194=(org-block) display nil)) . 25459) (#("  " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #191=#("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face #190=(font-lock-comment-face org-block) display nil) 1 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #191# font-lock-multiline t face #190# display nil)) . 25424) (nil face (org-block) 25425 . 25426) (nil face (org-block) 25424 . 25425) (nil wrap-prefix #192=#("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25425 . 25426) (nil wrap-prefix #192# 25424 . 25425) (nil line-prefix #152# 25425 . 25426) (nil line-prefix #152# 25424 . 25425) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25394) (nil face (org-block) 25394 . 25396) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25394 . 25396) (nil line-prefix #152# 25394 . 25396) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25338) (nil face (org-block) 25338 . 25339) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25338 . 25339) (nil line-prefix #154# 25338 . 25339) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25337) (nil face (org-block) 25337 . 25338) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25337 . 25338) (nil line-prefix #152# 25337 . 25338) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25307) (nil face (org-block) 25307 . 25308) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25307 . 25308) (nil line-prefix #154# 25307 . 25308) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25306) (nil face (org-block) 25306 . 25307) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25306 . 25307) (nil line-prefix #152# 25306 . 25307) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25246) (nil face (org-block) 25246 . 25248) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25246 . 25248) (nil line-prefix #152# 25246 . 25248) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25222) (nil face (org-block) 25222 . 25224) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25222 . 25224) (nil line-prefix #152# 25222 . 25224) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25173) (nil face (org-block) 25173 . 25175) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25173 . 25175) (nil line-prefix #152# 25173 . 25175) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25136) (nil face (org-block) 25136 . 25137) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25136 . 25137) (nil line-prefix #154# 25136 . 25137) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25135) (nil face (org-block) 25135 . 25136) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25135 . 25136) (nil line-prefix #152# 25135 . 25136) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25088) (nil face (org-block) 25088 . 25089) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25088 . 25089) (nil line-prefix #154# 25088 . 25089) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25087) (nil face (org-block) 25087 . 25088) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25087 . 25088) (nil line-prefix #152# 25087 . 25088) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25055) (nil face (org-block) 25055 . 25057) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25055 . 25057) (nil line-prefix #152# 25055 . 25057) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25033) (nil face (org-block) 25033 . 25035) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25033 . 25035) (nil line-prefix #152# 25033 . 25035) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25018) (nil face (org-block) 25018 . 25020) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25018 . 25020) (nil line-prefix #152# 25018 . 25020) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25010) (nil face (org-block) 25010 . 25011) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25010 . 25011) (nil line-prefix #154# 25010 . 25011) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25009) (nil face (org-block) 25009 . 25010) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 25009 . 25010) (nil line-prefix #152# 25009 . 25010) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 24978) (nil face (org-block) 24978 . 24979) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24978 . 24979) (nil line-prefix #154# 24978 . 24979) (#(" " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 24977) (nil face (org-block) 24977 . 24978) (nil wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) 24977 . 24978) (nil line-prefix #152# 24977 . 24978) (#("  " 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face org-block-begin-line display nil)) . 24954) (undo-tree-id565 . 2) (nil face (org-block) 24954 . 24956) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 24954 . 24956) (nil line-prefix #154# 24954 . 24956) (#("  " 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #195=#("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-multiline t face #194# display nil) 1 2 (display nil face #193# font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #195# line-prefix #154#)) . 25491) (25492 . 25493) (#("(setc" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #196=#("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face #194# display nil) 1 4 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #196# font-lock-multiline t face #198=(font-lock-keyword-face . #194#) display nil) 4 5 (display nil face #197# font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #196# line-prefix #154#)) . 25492) (25496 . 25497) (#("q pdf-view-use-image-" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #199=#("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face #198# display nil) 1 20 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #199# font-lock-multiline t face #194# display nil) 20 21 (display nil face #200# font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #199# line-prefix #154#)) . 25496) (25516 . 25517) (#("magick t)" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #152# wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-multiline t face #194# display nil)) . 25516)) (24875 49299 244311 499000) 0 nil]) ((25723 . 25725) (25723 . 25725) (25712 . 25724) (#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #177# fontified nil)) . 25712) (25711 . 25713) (t 24875 45490 230901 209000)) ((#("

" 0 1 (fontified t line-prefix #152# wrap-prefix #("      " 0 6 (face org-indent))) 1 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #154# fontified nil)) . 25711) (25712 . 25713) (#("#+RESULTS:

" 0 10 (fontified t font-lock-fontified t line-prefix #152# wrap-prefix #201=#("      " 0 6 (face org-indent)) face org-meta-line) 10 11 (fontified t line-prefix #152# wrap-prefix #201#) 11 12 (fontified nil line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)))) . 25712) (#("t
" 0 1 (wrap-prefix #202=#("      " 0 6 (face org-indent)) line-prefix #154# fontified nil face org-code) 1 2 (wrap-prefix #202# line-prefix #154# fontified t face org-code)) . 25723) (#(": " 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #154# fontified t face org-code)) . 25723)) (24875 49300 813494 101000) 0 nil]) ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #177# fontified t)) . 25701)) ((25701 . 25702)) (24875 49303 140117 566000) 0 nil]) ((24954 . 25700)) ((#("(use-package pdf-tools
 :pin manual ;; manually update
 :config
 ;; initialise
 (pdf-tools-install)
 ;; open pdfs scaled to fit page
 (setq-default pdf-view-display-size 'fit-page)
 ;; automatically annotate highlights
 (setq pdf-annot-activate-created-annotations t)
 ;; use normal isearch
 (define-key pdf-view-mode-map (kbd \"C-s\") 'isearch-forward)
 ;; turn off cua so copy works
 (add-hook 'pdf-view-mode-hook (lambda () (cua-mode 0)))
 ;; more fine-grained zooming
 (setq pdf-view-resize-factor 1.1)
 ;; keyboard shortcuts
 (define-key pdf-view-mode-map (kbd \"h\") 'pdf-annot-add-highlight-markup-annotation)
 (define-key pdf-view-mode-map (kbd \"t\") 'pdf-annot-add-text-annotation)
 (define-key pdf-view-mode-map (kbd \"D\") 'pdf-annot-delete))" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #204=#("      " 0 6 (face org-indent)) font-lock-multiline t face #203=(org-block) display nil) 1 12 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #204# font-lock-multiline t face (font-lock-keyword-face . #203#) display nil) 12 13 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #204# font-lock-multiline t face #203# display nil) 13 22 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #204# font-lock-multiline t face (font-lock-constant-face . #203#) display nil) 22 23 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #204# font-lock-multiline t face #203# display nil) 23 24 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #205=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 24 28 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #205# font-lock-multiline t face (font-lock-builtin-face . #203#) display nil) 28 36 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #205# font-lock-multiline t face #203# display nil) 36 39 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #205# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 39 55 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #205# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 55 56 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #206=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 56 63 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #206# font-lock-multiline t face (font-lock-builtin-face . #203#) display nil) 63 64 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #206# font-lock-multiline t face #203# display nil) 64 65 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #207=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 65 68 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #207# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 68 79 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #207# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 79 80 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #208=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 80 100 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #208# font-lock-multiline t face #203# display nil) 100 101 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #209=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 101 104 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #209# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 104 133 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #209# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 133 134 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #210=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 134 135 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #210# font-lock-multiline t face #203# display nil) 135 147 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #210# font-lock-multiline t face (font-lock-keyword-face . #203#) display nil) 147 181 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #210# font-lock-multiline t face #203# display nil) 181 182 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #211=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 182 185 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #211# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 185 219 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #211# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 219 220 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #212=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 220 221 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #212# font-lock-multiline t face #203# display nil) 221 225 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #212# font-lock-multiline t face (font-lock-keyword-face . #203#) display nil) 225 244 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #212# font-lock-multiline t face #203# display nil) 244 268 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #212# font-lock-multiline t face #203# display nil) 268 269 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #213=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 269 272 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #213# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 272 291 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #213# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 291 292 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #214=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 292 327 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #214# font-lock-multiline t face #203# display nil) 327 332 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #214# font-lock-multiline t face (font-lock-string-face . #203#) display nil) 332 348 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #214# font-lock-multiline t face #203# display nil) 348 352 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #214# font-lock-multiline t face #203# display nil) 352 353 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #215=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 353 356 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #215# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 356 371 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #215# font-lock-multiline t face #216=(font-lock-comment-face . #203#) display nil) 371 383 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #215# font-lock-multiline t face #216# display nil) 383 384 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 384 402 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face #203# display nil) 402 415 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face #203# display nil) 415 421 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face (font-lock-keyword-face . #203#) display nil) 421 435 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face #203# display nil) 435 436 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face (highlight-numbers-number . #203#) display nil) 436 440 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #217# font-lock-multiline t face #203# display nil) 440 441 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #219=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 441 444 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #219# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 444 451 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #219# font-lock-multiline t face #218=(font-lock-comment-face . #203#) display nil) 451 454 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #219# font-lock-multiline t face #218# display nil) 454 470 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #219# font-lock-multiline t face #218# display nil) 470 471 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 471 472 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face #203# display nil) 472 476 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face (font-lock-keyword-face . #203#) display nil) 476 482 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face #203# display nil) 482 500 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face #203# display nil) 500 503 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face (highlight-numbers-number . #203#) display nil) 503 504 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face #203# display nil) 504 505 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #220# font-lock-multiline t face #203# display nil) 505 506 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #221=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 506 509 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #221# font-lock-multiline t face (font-lock-comment-delimiter-face . #203#) display nil) 509 528 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #221# font-lock-multiline t face (font-lock-comment-face . #203#) display nil) 528 529 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #222=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 529 564 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #222# font-lock-multiline t face #203# display nil) 564 567 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #222# font-lock-multiline t face (font-lock-string-face . #203#) display nil) 567 600 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #222# font-lock-multiline t face #203# display nil) 600 613 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #222# font-lock-multiline t face #203# display nil) 613 614 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #223=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 614 649 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #223# font-lock-multiline t face #203# display nil) 649 652 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #223# font-lock-multiline t face (font-lock-string-face . #203#) display nil) 652 686 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #223# font-lock-multiline t face #203# display nil) 686 687 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #224=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #203# display nil) 687 722 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #224# font-lock-multiline t face #203# display nil) 722 725 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #224# font-lock-multiline t face (font-lock-string-face . #203#) display nil) 725 745 (fontified t font-lock-fontified t src-block t line-prefix #154# wrap-prefix #224# font-lock-multiline t face #203#) 745 746 (fontified t font-lock-fontified t src-block t line-prefix #154# wrap-prefix #224# rear-nonsticky nil font-lock-multiline t face #203#)) . 24954) (undo-tree-id2351 . 746)) (24875 49323 497176 78000) 0 nil]) ((24953 . 24955) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #154# fontified nil)) . 24953) (24948 . 24954) (#("lisp " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #225=#("      " 0 6 (face org-indent)) line-prefix #154# fontified nil) 1 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #225# line-prefix #154# fontified nil) 2 3 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #225# line-prefix #154# fontified nil) 3 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #225# line-prefix #154# fontified nil) 4 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #225# line-prefix #154# fontified nil)) . 24948) (24948 . 24953) (24935 . 24958)) ((#("
#+begin_src 
#+end_src" 0 1 (fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent))) 1 13 (fontified nil font-lock-fontified t line-prefix #154# wrap-prefix #226=#("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 13 14 (src-block t font-lock-fontified t wrap-prefix #226# line-prefix #154# fontified nil font-lock-multiline t face #229=(org-block)) 14 23 (fontified nil font-lock-fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line)) . 24935) (undo-tree-id2352 . -13) (undo-tree-id2353 . -13) (undo-tree-id2354 . 10) (undo-tree-id2355 . -13) (undo-tree-id2356 . -13) (undo-tree-id2357 . 10) (undo-tree-id2358 . -13) (undo-tree-id2359 . -13) (undo-tree-id2360 . -13) (undo-tree-id2361 . -13) (undo-tree-id2362 . -13) (undo-tree-id2363 . -13) (undo-tree-id2364 . -13) (undo-tree-id2365 . -13) (undo-tree-id2366 . -13) (undo-tree-id2367 . -13) (undo-tree-id2368 . -13) (undo-tree-id2369 . -13) (undo-tree-id2370 . -13) (undo-tree-id2371 . -13) (undo-tree-id2372 . -13) (undo-tree-id2373 . -13) (undo-tree-id2374 . -13) (undo-tree-id2375 . -13) (undo-tree-id2376 . -13) (undo-tree-id2377 . -13) (undo-tree-id2378 . -13) (undo-tree-id2379 . -13) (undo-tree-id2380 . -13) (undo-tree-id2381 . -13) (undo-tree-id2382 . -13) (undo-tree-id2383 . -13) (undo-tree-id2384 . -13) (undo-tree-id2385 . -13) (undo-tree-id2386 . -13) (undo-tree-id2387 . -13) (undo-tree-id2388 . -13) (undo-tree-id2389 . -13) (undo-tree-id2390 . -13) (undo-tree-id2391 . -13) (undo-tree-id2392 . -13) (undo-tree-id2393 . -13) (undo-tree-id2394 . -13) (undo-tree-id2395 . -13) (undo-tree-id2396 . -13) (undo-tree-id2397 . -13) (undo-tree-id2398 . -1) (undo-tree-id2399 . -14) (undo-tree-id2400 . -13) (undo-tree-id2401 . -13) (undo-tree-id2402 . -13) (undo-tree-id2403 . -13) (undo-tree-id2404 . -13) (undo-tree-id2405 . -13) (undo-tree-id2406 . -13) (undo-tree-id2407 . -13) (undo-tree-id2408 . -13) (undo-tree-id2409 . -13) (undo-tree-id2410 . -13) (undo-tree-id2411 . -13) (undo-tree-id2412 . -13) (undo-tree-id2413 . -13) (undo-tree-id2414 . -13) (undo-tree-id2415 . -13) (undo-tree-id2416 . -13) (undo-tree-id2417 . -13) (undo-tree-id2418 . -13) (undo-tree-id2419 . -13) (undo-tree-id2420 . -13) (undo-tree-id2421 . -13) (undo-tree-id2422 . -13) (undo-tree-id2423 . -13) (undo-tree-id2424 . -13) (undo-tree-id2425 . -13) (undo-tree-id2426 . -13) (undo-tree-id2427 . -13) (undo-tree-id2428 . -13) (undo-tree-id2429 . -13) (undo-tree-id2430 . -13) (undo-tree-id2431 . -13) (undo-tree-id2432 . -13) (undo-tree-id2433 . -13) (undo-tree-id2434 . -13) (undo-tree-id2435 . -13) (undo-tree-id2436 . -13) (undo-tree-id2437 . -13) (undo-tree-id2438 . -13) (undo-tree-id2439 . -13) (undo-tree-id2440 . -13) (undo-tree-id2441 . -13) (undo-tree-id2442 . -13) (undo-tree-id2443 . -13) (undo-tree-id2444 . -13) (undo-tree-id2445 . -13) (undo-tree-id2446 . -13) (undo-tree-id2447 . -13) (undo-tree-id2448 . -13) (undo-tree-id2449 . -13) (undo-tree-id2450 . -13) (undo-tree-id2451 . -13) (undo-tree-id2452 . -13) (undo-tree-id2453 . -13) (undo-tree-id2454 . -13) (undo-tree-id2455 . -13) (undo-tree-id2456 . -13) (undo-tree-id2457 . -13) (undo-tree-id2458 . -13) (undo-tree-id2459 . -13) (undo-tree-id2460 . -13) (undo-tree-id2461 . -13) (undo-tree-id2462 . -13) (undo-tree-id2463 . -13) (undo-tree-id2464 . -13) (undo-tree-id2465 . -13) (undo-tree-id2466 . -13) (undo-tree-id2467 . -13) (undo-tree-id2468 . -13) (undo-tree-id2469 . -13) (#("lisp " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #227=#("      " 0 6 (face org-indent)) line-prefix #154# fontified nil) 1 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #227# line-prefix #154# fontified nil) 2 3 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #227# line-prefix #154# fontified nil) 3 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #227# line-prefix #154# fontified nil) 4 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #227# line-prefix #154# fontified nil)) . 24948) (24948 . 24953) (#("elisp " 0 5 (fontified nil font-lock-fontified t line-prefix #154# wrap-prefix #228=#("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 5 6 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #228# line-prefix #154# fontified nil)) . 24948) (undo-tree-id2470 . -5) (undo-tree-id2471 . -5) (undo-tree-id2472 . -5) (undo-tree-id2473 . -5) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -5) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (undo-tree-id2492 . -5) (undo-tree-id2493 . -5) (undo-tree-id2494 . -5) (undo-tree-id2495 . -5) (undo-tree-id2496 . -5) (undo-tree-id2497 . -5) (undo-tree-id2498 . -5) (undo-tree-id2499 . -5) (undo-tree-id2500 . -5) (undo-tree-id2501 . -5) (undo-tree-id2502 . -5) (undo-tree-id2503 . -5) (undo-tree-id2504 . -5) (undo-tree-id2505 . -5) (undo-tree-id2506 . -5) (undo-tree-id2507 . -5) (undo-tree-id2508 . -5) (undo-tree-id2509 . -5) (undo-tree-id2510 . -5) (undo-tree-id2511 . -5) (undo-tree-id2512 . -5) (undo-tree-id2513 . -5) (undo-tree-id2514 . -5) (undo-tree-id2515 . -5) (undo-tree-id2516 . -5) (undo-tree-id2517 . -5) (undo-tree-id2518 . -5) (undo-tree-id2519 . -5) (undo-tree-id2520 . -5) (undo-tree-id2521 . -5) (undo-tree-id2522 . -5) (undo-tree-id2523 . -5) (undo-tree-id2524 . -5) (undo-tree-id2525 . -5) (undo-tree-id2526 . -5) (undo-tree-id2527 . -5) (undo-tree-id2528 . -5) (undo-tree-id2529 . -5) (undo-tree-id2530 . -5) (undo-tree-id2531 . -5) (undo-tree-id2532 . -5) (undo-tree-id2533 . -5) (undo-tree-id2534 . -5) (undo-tree-id2535 . -5) (undo-tree-id2536 . -5) (undo-tree-id2537 . -5) (undo-tree-id2538 . -5) (undo-tree-id2539 . -5) (undo-tree-id2540 . -5) (undo-tree-id2541 . -5) (undo-tree-id2542 . -5) (undo-tree-id2543 . -5) (undo-tree-id2544 . -5) (undo-tree-id2545 . -5) (undo-tree-id2546 . -5) (undo-tree-id2547 . -5) (undo-tree-id2548 . -5) (undo-tree-id2549 . -5) (undo-tree-id2550 . -5) (undo-tree-id2551 . -5) (undo-tree-id2552 . -5) (undo-tree-id2553 . -5) (undo-tree-id2554 . -5) (undo-tree-id2555 . -5) (undo-tree-id2556 . -5) (undo-tree-id2557 . -5) (undo-tree-id2558 . -5) (undo-tree-id2559 . -5) (undo-tree-id2560 . -5) (undo-tree-id2561 . -5) (undo-tree-id2562 . -5) (undo-tree-id2563 . -5) (undo-tree-id2564 . -5) (undo-tree-id2565 . -5) (undo-tree-id2566 . -5) (undo-tree-id2567 . -5) (undo-tree-id2568 . -5) (undo-tree-id2569 . -5) (undo-tree-id2570 . -5) (undo-tree-id2571 . -5) (undo-tree-id2572 . -5) (undo-tree-id2573 . -5) (undo-tree-id2574 . -5) (undo-tree-id2575 . -5) (undo-tree-id2576 . -5) (undo-tree-id2577 . -5) (undo-tree-id2578 . -5) (undo-tree-id2579 . -5) (undo-tree-id2580 . -5) (undo-tree-id2581 . -5) (undo-tree-id2582 . -5) (undo-tree-id2583 . -5) (24953 . 24954) (#("

" 0 1 (fontified t font-lock-fontified t help-echo nil line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) src-block t font-lock-multiline t face org-block-begin-line) 1 2 (fontified t font-lock-fontified t src-block t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face #229#)) . 24953) (undo-tree-id2584 . 2) (undo-tree-id2585 . 1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1)) (24875 49326 737488 184000) 0 nil]) ((24958 . 24969)) ((#(" :tangle no" 0 11 (fontified t font-lock-fontified t line-prefix #154# wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 24958)) (24875 49329 66894 16000) 0 nil]) ((25095 . 25097)) ((#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #152# wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25095)) (24875 49329 657666 437000) 0 nil]) nil nil (24875 49321 421992 786000) 0 nil]) ((25179 . 25182)) ((#("   " 0 3 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #152# wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25179)) (24875 49320 956268 122000) 0 nil]) ((#(" (define-key pdf-view-mode-map (kbd \"t\") 'pdf-annot-add-text-annotation)
" 0 1 (line-prefix #154# wrap-prefix #231=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #230=(org-block) display nil) 1 36 (line-prefix #154# wrap-prefix #231# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #230# display nil) 36 39 (line-prefix #154# wrap-prefix #231# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #230#) display nil) 39 73 (line-prefix #154# wrap-prefix #231# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #230# display nil)) . 25179)) ((25179 . 25252)) (24875 49320 112307 447000) 0 nil]) ((nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25095 . 25130) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25130 . 25133) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25133 . 25179) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25179 . 25180) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25180 . 25215) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25215 . 25218) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25218 . 25252) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25252 . 25253) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25253 . 25288) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25288 . 25291) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25291 . 25310) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25310 . 25311) (nil face (org-block) 25095 . 25130) (nil face (org-block) 25130 . 25133) (nil face (org-block) 25133 . 25179) (nil face (org-block) 25179 . 25180) (nil face (org-block) 25180 . 25215) (nil face (org-block) 25215 . 25218) (nil face (org-block) 25218 . 25252) (nil face (org-block) 25252 . 25253) (nil face (org-block) 25253 . 25288) (nil face (org-block) 25288 . 25291) (nil face (org-block) 25291 . 25310) (nil face (org-block) 25310 . 25311) (25095 . 25311)) ((#("(define-key pdf-view-mode-map (kbd \"h\") 'pdf-annot-add-highlight-markup-annotation)
 (define-key pdf-view-mode-map (kbd \"t\") 'pdf-annot-add-text-annotation)
 (define-key pdf-view-mode-map (kbd \"D\") 'pdf-annot-delete)" 0 35 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #233=#("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face #232=(org-block) display nil) 35 38 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #233# font-lock-multiline t face #232# display nil) 38 84 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #233# font-lock-multiline t face #232# display nil) 84 85 (line-prefix #154# wrap-prefix #234=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #232# display nil) 85 120 (line-prefix #154# wrap-prefix #234# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #232# display nil) 120 123 (line-prefix #154# wrap-prefix #234# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #232# display nil) 123 157 (line-prefix #154# wrap-prefix #234# fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #232# display nil) 157 158 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #235=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-multiline t face #232# display nil) 158 193 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #235# font-lock-multiline t face #232# display nil) 193 196 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #235# font-lock-multiline t face #232# display nil) 196 215 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #235# font-lock-multiline t face #232# display nil) 215 216 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #235# rear-nonsticky nil font-lock-multiline t face #232# display nil)) . 25095) (nil face (org-block) 25310 . 25311) (nil face (org-block) 25291 . 25310) (nil face (font-lock-string-face org-block) 25288 . 25291) (nil face (org-block) 25253 . 25288) (nil face (org-block) 25252 . 25253) (nil face (org-block) 25218 . 25252) (nil face (font-lock-string-face org-block) 25215 . 25218) (nil face (org-block) 25180 . 25215) (nil face (org-block) 25179 . 25180) (nil face (org-block) 25133 . 25179) (nil face (font-lock-string-face org-block) 25130 . 25133) (nil face (org-block) 25095 . 25130) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25310 . 25311) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25291 . 25310) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25288 . 25291) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25253 . 25288) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25252 . 25253) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25218 . 25252) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25215 . 25218) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25180 . 25215) (nil wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25179 . 25180) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25133 . 25179) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25130 . 25133) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 25095 . 25130)) (24875 49319 862444 597000) 0 nil]) ((25093 . 25095) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25092 . 25093) (nil face (font-lock-comment-face org-block) 25092 . 25093) (25092 . 25093)) ((#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block) display nil)) . 25092) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (nil face (font-lock-comment-face org-block) 25092 . 25093) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25092 . 25093) (#("  " 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #154# wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block) display nil)) . 25093) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -2) (undo-tree-id2282 . -2) (undo-tree-id2283 . -2) (undo-tree-id2284 . -2) (undo-tree-id2285 . -2) (undo-tree-id2286 . -2) (undo-tree-id2287 . -2) (undo-tree-id2288 . -2) (undo-tree-id2289 . -2) (undo-tree-id2290 . -2) (undo-tree-id2291 . -2) (undo-tree-id2292 . -2) (undo-tree-id2293 . -2) (undo-tree-id2294 . -2) (undo-tree-id2295 . -2) (undo-tree-id2296 . -2) (undo-tree-id2297 . -2) (undo-tree-id2298 . -2) (undo-tree-id2299 . -2) (undo-tree-id2300 . -2) (undo-tree-id2301 . -2) (undo-tree-id2302 . -2) (undo-tree-id2303 . -2) (undo-tree-id2304 . -2) (undo-tree-id2305 . -2) (undo-tree-id2306 . -2) (undo-tree-id2307 . -2) (undo-tree-id2308 . -2) (undo-tree-id2309 . -2) (undo-tree-id2310 . -2) (undo-tree-id2311 . -2) (undo-tree-id2312 . -2) (undo-tree-id2313 . -2) (undo-tree-id2314 . -2) (undo-tree-id2315 . -2) (undo-tree-id2316 . -2) (undo-tree-id2317 . -2) (undo-tree-id2318 . -2) (undo-tree-id2319 . -2) (undo-tree-id2320 . -2) (undo-tree-id2321 . -2) (undo-tree-id2322 . -2) (undo-tree-id2323 . -2) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) (undo-tree-id2326 . -2) (undo-tree-id2327 . -2) (undo-tree-id2328 . -2) (undo-tree-id2329 . -2) (undo-tree-id2330 . -2) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) (undo-tree-id2336 . -2) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -2) (undo-tree-id2343 . -2) (undo-tree-id2344 . -2) (undo-tree-id2345 . -2) (undo-tree-id2346 . -2) (undo-tree-id2347 . -2) (undo-tree-id2348 . -2) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2)) (24875 49319 559189 199000) 0 nil] [nil nil ((nil rear-nonsticky nil 25287 . 25288) (nil fontified nil 25229 . 25288) (nil fontified nil 25156 . 25229) (nil fontified nil 25072 . 25156) (nil fontified t 25072 . 25288) (nil font-lock-fontified t 25072 . 25288) (nil help-echo nil 25072 . 25288) (nil src-block t 25072 . 25288) (nil line-prefix #236=#("      " 0 6 (face org-indent)) 25072 . 25288) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25072 . 25288) (nil font-lock-multiline t 25072 . 25288) (nil face (font-lock-comment-delimiter-face org-block) 25072 . 25288) (25072 . 25288) 25071 (t 24875 40865 495816 705000)) ((#("(define-key pdf-view-mode-map (kbd \"h\") 'pdf-annot-add-highlight-markup-annotation)
 (define-key pdf-view-mode-map (kbd \"t\") 'pdf-annot-add-text-annotation)
 (define-key pdf-view-mode-map (kbd \"D\") 'pdf-annot-delete)" 0 84 (line-prefix #236# wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face #237=(font-lock-comment-delimiter-face org-block) display nil help-echo nil src-block t) 84 85 (line-prefix #236# wrap-prefix #238=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 85 120 (line-prefix #236# wrap-prefix #238# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 120 123 (line-prefix #236# wrap-prefix #238# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 123 157 (line-prefix #236# wrap-prefix #238# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 157 158 (line-prefix #236# wrap-prefix #239=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 158 193 (line-prefix #236# wrap-prefix #239# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 193 196 (line-prefix #236# wrap-prefix #239# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 196 215 (line-prefix #236# wrap-prefix #239# fontified nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t) 215 216 (line-prefix #236# wrap-prefix #239# fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face #237# display nil help-echo nil src-block t)) . 25072) (undo-tree-id2 . -215) (undo-tree-id3 . -215) (undo-tree-id4 . -215) (undo-tree-id5 . -215) (nil face (org-block) 25287 . 25288) (nil face (org-block) 25268 . 25287) (nil face (font-lock-string-face org-block) 25265 . 25268) (nil face (org-block) 25230 . 25265) (nil face (org-block) 25229 . 25230) (nil face (org-block) 25195 . 25229) (nil face (font-lock-string-face org-block) 25192 . 25195) (nil face (org-block) 25157 . 25192) (nil face (org-block) 25156 . 25157) (nil face (font-lock-comment-face org-block) 25072 . 25156) (nil wrap-prefix #240=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25287 . 25288) (nil wrap-prefix #240# 25268 . 25287) (nil wrap-prefix #240# 25265 . 25268) (nil wrap-prefix #240# 25230 . 25265) (nil wrap-prefix #240# 25229 . 25230) (nil wrap-prefix #241=#("       " 0 6 (face org-indent) 6 7 (face org-indent)) 25195 . 25229) (nil wrap-prefix #241# 25192 . 25195) (nil wrap-prefix #241# 25157 . 25192) (nil wrap-prefix #241# 25156 . 25157) (nil wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) 25072 . 25156) (nil fontified nil 25287 . 25288) (nil fontified nil 25268 . 25287) (nil fontified nil 25265 . 25268) (nil fontified nil 25230 . 25265) (nil fontified nil 25229 . 25230) (nil fontified nil 25195 . 25229) (nil fontified nil 25192 . 25195) (nil fontified nil 25157 . 25192) (nil fontified nil 25156 . 25157) (nil fontified nil 25072 . 25156) (nil rear-nonsticky t 25287 . 25288)) (24875 40900 447249 784000) 0 nil]) ((#("                                             :disabled:" 0 45 (fontified t line-prefix #243=#("*" 0 1 (face org-indent)) wrap-prefix #242=#("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 45 54 (fontified t line-prefix #243# wrap-prefix #242# face #245=(org-tag org-level-2) mouse-face highlight keymap #244=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 54 55 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t line-prefix #243# wrap-prefix #242# face #245# mouse-face highlight keymap #244#)) . 25661) (undo-tree-id0 . -55) (undo-tree-id1 . -55) 25716 (t 24869 16716 712400 355000)) nil (24875 49318 512813 302000) 0 nil]) ((10246 . 10248) (10246 . 10248) (10235 . 10247) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #246=#("    " 0 4 (face org-indent)) fontified nil)) . 10235) (10234 . 10236) (t 24869 16478 626226 497000)) nil (24869 16716 697795 501000) 0 nil]) ((8566 . 8567) (#("n" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #246# src-block t help-echo nil font-lock-fontified t fontified t)) . -8566) (undo-tree-id0 . -1) (#("i" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #246# src-block t help-echo nil font-lock-fontified t fontified t)) . -8567) (undo-tree-id1 . -1) (#("l" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #246# src-block t help-echo nil font-lock-fontified t fontified t)) . -8568) (undo-tree-id2 . -1) 8569 (t 24777 1265 883459 436000)) nil (24869 16478 602838 50000) 0 nil]) ((nil help-echo nil 2856 . 4746) (nil fontified t 2856 . 4746) (nil org-category #249="settings" 2856 . 4746) (nil line-prefix #261=#("    " 0 4 (face org-indent)) 2856 . 4746) (nil wrap-prefix #("    " 0 4 (face org-indent)) 2856 . 4746) (nil font-lock-fontified t 2856 . 4746) (nil src-block t 2856 . 4746) (2856 . 4746) (#("| %e | (:eval (let* ((active (powerline-selected-window-active)) (mode-line (if active 'mode-line 'mode-line-inactive)) (face1 (if active 'powerline-active1 'powerline-inactive1)) (face2 (if active 'powerline-active2 'powerline-inactive2)) (separator-left (intern (format powerline-%s-%s (powerline-current-separator) (car powerline-default-separator-dir)))) (separator-right (intern (format powerline-%s-%s (powerline-current-separator) (cdr powerline-default-separator-dir)))) (lhs (list (powerline-raw %* nil 'l) (powerline-buffer-size nil 'l) (powerline-buffer-id nil 'l) (powerline-raw  ) (funcall separator-left mode-line face1) (powerline-narrow face1 'l) (powerline-vc face1))) (rhs (list (powerline-raw global-mode-string face1 'r) (powerline-raw %4l face1 'r) (powerline-raw : face1) (powerline-raw %3c face1 'r) (funcall separator-right face1 mode-line) (powerline-raw  ) (powerline-raw %6p nil 'r) (powerline-hud face2 face1))) (center (append (list (powerline-raw   face1) (funcall separator-left face1 face2) (when (boundp 'erc-modified-channels-object) (powerline-raw erc-modified-channels-object face2 'l)) (powerline-major-mode face2 'l) (powerline-process face2) (powerline-raw   face2)) (let ((evil-face (powerline-evil-face))) (if (split-string (format-mode-line minor-mode-alist)) (append (if evil-mode (list (funcall separator-right face2 evil-face) (powerline-raw (powerline-evil-tag) evil-face 'l) (powerline-raw   evil-face) (funcall separator-left evil-face face2))) (list (powerline-minor-modes face2 'l) (powerline-raw   face2) (funcall separator-right face2 face1))) (list (powerline-raw (powerline-evil-tag) evil-face) (funcall separator-right evil-face face1))))))) (concat (powerline-render lhs) (powerline-fill-center face1 (/ (powerline-width center) 2.0)) (powerline-render center) (powerline-fill face1 (powerline-width rhs)) (powerline-render rhs)))) |
" 0 8 (fontified t line-prefix #248=#("    " 0 4 (face org-indent)) wrap-prefix #247=#("    " 0 4 (face org-indent)) font-lock-fontified t display nil help-echo nil src-block t face org-table) 8 13 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 13 15 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 15 19 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 19 77 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 77 79 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 79 128 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 128 130 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 130 188 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 188 190 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 190 193 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 193 211 (fontified t line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 211 1024 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1024 1028 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1028 1207 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1207 1210 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1210 1248 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1248 1250 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1250 1311 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1311 1313 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1313 1785 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1785 1788 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t display nil help-echo nil src-block t face org-table) 1788 1889 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t src-block t face org-table) 1889 1890 (fontified nil line-prefix #248# wrap-prefix #247# font-lock-fontified t src-block t)) . 2856) (undo-tree-id2493 . -1890)) nil (24777 1265 872543 731000) 0 nil]) ((2468 . 2476)) nil (24777 1265 872547 949000) 0 nil]) ((2461 . 2463)) nil (24777 1265 872549 241000) 0 nil]) (2552) nil (24777 1265 872550 373000) 0 nil]) ((nil rear-nonsticky nil 2552 . 2553) (nil fontified nil 2461 . 2553) (nil org-category #249# 2461 . 2553) (nil fontified t 2461 . 2553) (nil line-prefix #248# 2461 . 2553) (nil wrap-prefix #("    " 0 4 (face org-indent)) 2461 . 2553) (nil font-lock-fontified t 2461 . 2553) (nil help-echo nil 2461 . 2553) (nil font-lock-multiline t 2461 . 2553) (nil face org-block-begin-line 2461 . 2553) (2461 . 2553)) nil (24777 1265 872554 882000) 0 nil]) ((2460 . 2461)) nil (24777 1265 872556 595000) 0 nil] [nil nil ((nil rear-nonsticky nil 2555 . 2556) (nil fontified nil 2464 . 2556) (nil line-prefix #257=#("    " 0 4 (face org-indent)) 2464 . 2556) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 2464 . 2556) (nil fontified t 2464 . 2556) (nil font-lock-fontified t 2464 . 2556) (nil help-echo nil 2464 . 2556) (nil src-block t 2464 . 2556) (nil font-lock-multiline t 2464 . 2556) (nil face (org-block) 2464 . 2556) (2464 . 2556) 2463) ((#("(setq mode-line-buffer-identification (list -80 (propertized-buffer-identification \"%12b\")))" 0 1 (line-prefix #248# wrap-prefix #251=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face #250=(org-block) display nil help-echo nil src-block t) 1 5 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 5 44 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 44 47 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 47 83 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 83 89 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 89 91 (line-prefix #248# wrap-prefix #251# fontified nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t) 91 92 (line-prefix #248# wrap-prefix #251# fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face #250# display nil help-echo nil src-block t)) . 2464) (undo-tree-id2490 . -91) (undo-tree-id2491 . -91) (undo-tree-id2492 . -91) (nil face (org-block) 2555 . 2556) (nil face (org-block) 2553 . 2555) (nil face (font-lock-string-face org-block) 2547 . 2553) (nil face (org-block) 2511 . 2547) (nil face (highlight-numbers-number org-block) 2508 . 2511) (nil face (org-block) 2469 . 2508) (nil face (font-lock-keyword-face org-block) 2465 . 2469) (nil face (org-block) 2464 . 2465) (nil fontified nil 2555 . 2556) (nil fontified nil 2553 . 2555) (nil fontified nil 2547 . 2553) (nil fontified nil 2511 . 2547) (nil fontified nil 2508 . 2511) (nil fontified nil 2469 . 2508) (nil fontified nil 2465 . 2469) (nil fontified nil 2464 . 2465) (nil wrap-prefix #252=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) 2555 . 2556) (nil wrap-prefix #252# 2553 . 2555) (nil wrap-prefix #252# 2547 . 2553) (nil wrap-prefix #252# 2511 . 2547) (nil wrap-prefix #252# 2508 . 2511) (nil wrap-prefix #252# 2469 . 2508) (nil wrap-prefix #252# 2465 . 2469) (nil wrap-prefix #252# 2464 . 2465) (nil line-prefix #248# 2555 . 2556) (nil line-prefix #248# 2553 . 2555) (nil line-prefix #248# 2547 . 2553) (nil line-prefix #248# 2511 . 2547) (nil line-prefix #248# 2508 . 2511) (nil line-prefix #248# 2469 . 2508) (nil line-prefix #248# 2465 . 2469) (nil line-prefix #248# 2464 . 2465) (nil rear-nonsticky t 2555 . 2556)) (24777 1250 172822 465000) 0 nil] [nil nil ((nil rear-nonsticky nil 2537 . 2538) (nil fontified nil 2446 . 2538) (2446 . 2538) 2445) ((#("(setq mode-line-buffer-identification (list -80 (propertized-buffer-identification \"%12b\")))" 0 91 (line-prefix #248# wrap-prefix #253=#("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t face org-meta-line) 91 92 (line-prefix #248# wrap-prefix #253# fontified nil rear-nonsticky nil font-lock-fontified t face org-meta-line)) . 2446) (undo-tree-id2487 . -91) (undo-tree-id2488 . -91) (undo-tree-id2489 . -91) (nil rear-nonsticky t 2537 . 2538)) (24777 1248 353565 990000) 0 nil] [nil nil ((nil rear-nonsticky nil 2461 . 2462) (nil fontified nil 2454 . 2462) (2454 . 2462) 2453) ((#("default " 0 7 (line-prefix #248# wrap-prefix #254=#("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 7 8 (line-prefix #248# wrap-prefix #254# fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2454) (undo-tree-id2483 . -7) (undo-tree-id2484 . -7) (undo-tree-id2485 . -7) (undo-tree-id2486 . -7) (nil rear-nonsticky t 2461 . 2462)) (24777 1243 261520 365000) 0 nil]) ((2753 . 4643) (#("| %e | (:eval (let* ((active (powerline-selected-window-active)) (mode-line (if active 'mode-line 'mode-line-inactive)) (face1 (if active 'powerline-active1 'powerline-inactive1)) (face2 (if active 'powerline-active2 'powerline-inactive2)) (separator-left (intern (format powerline-%s-%s (powerline-current-separator) (car powerline-default-separator-dir)))) (separator-right (intern (format powerline-%s-%s (powerline-current-separator) (cdr powerline-default-separator-dir)))) (lhs (list (powerline-raw %* nil 'l) (powerline-buffer-size nil 'l) (powerline-buffer-id nil 'l) (powerline-raw  ) (funcall separator-left mode-line face1) (powerline-narrow face1 'l) (powerline-vc face1))) (rhs (list (powerline-raw global-mode-string face1 'r) (powerline-raw %4l face1 'r) (powerline-raw : face1) (powerline-raw %3c face1 'r) (funcall separator-right face1 mode-line) (powerline-raw  ) (powerline-raw %6p nil 'r) (powerline-hud face2 face1))) (center (append (list (powerline-raw   face1) (funcall separator-left face1 face2) (when (boundp 'erc-modified-channels-object) (powerline-raw erc-modified-channels-object face2 'l)) (powerline-major-mode face2 'l) (powerline-process face2) (powerline-raw   face2)) (let ((evil-face (powerline-evil-face))) (if (split-string (format-mode-line minor-mode-alist)) (append (if evil-mode (list (funcall separator-right face2 evil-face) (powerline-raw (powerline-evil-tag) evil-face 'l) (powerline-raw   evil-face) (funcall separator-left evil-face face2))) (list (powerline-minor-modes face2 'l) (powerline-raw   face2) (funcall separator-right face2 face1))) (list (powerline-raw (powerline-evil-tag) evil-face) (funcall separator-right evil-face face1))))))) (concat (powerline-render lhs) (powerline-fill-center face1 (/ (powerline-width center) 2.0)) (powerline-render center) (powerline-fill face1 (powerline-width rhs)) (powerline-render rhs)))) |
" 0 1889 (fontified t line-prefix #256=#("    " 0 4 (face org-indent)) wrap-prefix #255=#("    " 0 4 (face org-indent)) face org-table) 1889 1890 (fontified t line-prefix #256# wrap-prefix #255#)) . 2753) (undo-tree-id2480 . -1890) (2753 . 4643) (#("| %e | (:eval (let* ((active (powerline-selected-window-active)) (mode-line (if active 'mode-line 'mode-line-inactive)) (face1 (if active 'powerline-active1 'powerline-inactive1)) (face2 (if active 'powerline-active2 'powerline-inactive2)) (separator-left (intern (format powerline-%s-%s (powerline-current-separator) (car powerline-default-separator-dir)))) (separator-right (intern (format powerline-%s-%s (powerline-current-separator) (cdr powerline-default-separator-dir)))) (lhs (list (powerline-raw %* nil 'l) (powerline-buffer-size nil 'l) (powerline-buffer-id nil 'l) (powerline-raw  ) (funcall separator-left mode-line face1) (powerline-narrow face1 'l) (powerline-vc face1))) (rhs (list (powerline-raw global-mode-string face1 'r) (powerline-raw %4l face1 'r) (powerline-raw : face1) (powerline-raw %3c face1 'r) (funcall separator-right face1 mode-line) (powerline-raw  ) (powerline-raw %6p nil 'r) (powerline-hud face2 face1))) (center (append (list (powerline-raw   face1) (funcall separator-left face1 face2) (when (boundp 'erc-modified-channels-object) (powerline-raw erc-modified-channels-object face2 'l)) (powerline-major-mode face2 'l) (powerline-process face2) (powerline-raw   face2)) (let ((evil-face (powerline-evil-face))) (if (split-string (format-mode-line minor-mode-alist)) (append (if evil-mode (list (funcall separator-right face2 evil-face) (powerline-raw (powerline-evil-tag) evil-face 'l) (powerline-raw   evil-face) (funcall separator-left evil-face face2))) (list (powerline-minor-modes face2 'l) (powerline-raw   face2) (funcall separator-right face2 face1))) (list (powerline-raw (powerline-evil-tag) evil-face) (funcall separator-right evil-face face1))))))) (concat (powerline-render lhs) (powerline-fill-center face1 (/ (powerline-width center) 2.0)) (powerline-render center) (powerline-fill face1 (powerline-width rhs)) (powerline-render rhs)))) |
" 0 1889 (fontified t line-prefix #257# wrap-prefix #258=#("    " 0 4 (face org-indent)) face org-table) 1889 1890 (fontified t line-prefix #257# wrap-prefix #258#)) . 2753) (undo-tree-id2481 . -1890) (2468 . 2469)) nil (24777 1250 173398 636000) 0 nil]) ((#("default " 0 7 (line-prefix #257# wrap-prefix #260=#("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #259=(org-block) display nil) 7 8 (line-prefix #257# wrap-prefix #260# fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #259# display nil)) . 2468)) nil (24777 1243 261537 998000) 0 nil]) ((#("-" 0 1 (line-prefix #261# wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) display nil help-echo nil src-block t)) . 2468) (undo-tree-id2482 . -1)) nil (24777 1243 261540 543000) 0 nil]) ((2761 . 4651) (#("| %e | (:eval (let* ((active (powerline-selected-window-active)) (mode-line (if active 'mode-line 'mode-line-inactive)) (face1 (if active 'powerline-active1 'powerline-inactive1)) (face2 (if active 'powerline-active2 'powerline-inactive2)) (separator-left (intern (format powerline-%s-%s (powerline-current-separator) (car powerline-default-separator-dir)))) (separator-right (intern (format powerline-%s-%s (powerline-current-separator) (cdr powerline-default-separator-dir)))) (lhs (list (powerline-raw %* nil 'l) (powerline-buffer-size nil 'l) (powerline-buffer-id nil 'l) (powerline-raw  ) (funcall separator-left mode-line face1) (powerline-narrow face1 'l) (powerline-vc face1))) (rhs (list (powerline-raw global-mode-string face1 'r) (powerline-raw %4l face1 'r) (powerline-raw : face1) (powerline-raw %3c face1 'r) (funcall separator-right face1 mode-line) (powerline-raw  ) (powerline-raw %6p nil 'r) (powerline-hud face2 face1))) (center (append (list (powerline-raw   face1) (funcall separator-left face1 face2) (when (boundp 'erc-modified-channels-object) (powerline-raw erc-modified-channels-object face2 'l)) (powerline-major-mode face2 'l) (powerline-process face2) (powerline-raw   face2)) (let ((evil-face (powerline-evil-face))) (if (split-string (format-mode-line minor-mode-alist)) (append (if evil-mode (list (funcall separator-right face2 evil-face) (powerline-raw (powerline-evil-tag) evil-face 'l) (powerline-raw   evil-face) (funcall separator-left evil-face face2))) (list (powerline-minor-modes face2 'l) (powerline-raw   face2) (funcall separator-right face2 face1))) (list (powerline-raw (powerline-evil-tag) evil-face) (funcall separator-right evil-face face1))))))) (concat (powerline-render lhs) (powerline-fill-center face1 (/ (powerline-width center) 2.0)) (powerline-render center) (powerline-fill face1 (powerline-width rhs)) (powerline-render rhs)))) |
" 0 5 (fontified t org-category #249# line-prefix #261# wrap-prefix #262=#("    " 0 4 (face org-indent)) face org-table) 5 505 (fontified t org-category #249# line-prefix #261# wrap-prefix #262# face org-table) 505 1005 (fontified t org-category #249# line-prefix #261# wrap-prefix #262# face org-table) 1005 1505 (fontified t org-category #249# line-prefix #261# wrap-prefix #262# face org-table) 1505 1889 (fontified t org-category #249# line-prefix #261# wrap-prefix #262# face org-table) 1889 1890 (fontified t org-category #249# line-prefix #261# wrap-prefix #262#)) . 2761)) nil (24777 1243 261542 166000) 0 nil]) ((nil rear-nonsticky nil 2562 . 2563) (nil fontified nil 2463 . 2563) (nil fontified t 2463 . 2563) (nil font-lock-fontified t 2463 . 2563) (nil help-echo nil 2463 . 2563) (nil line-prefix #261# 2463 . 2563) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 2463 . 2563) (nil font-lock-multiline t 2463 . 2563) (nil face (org-block) 2463 . 2563) (nil src-block t 2463 . 2563) (2463 . 2563) 2462) nil (24777 1243 261545 732000) 0 nil]) ((2461 . 2463) (2460 . 2461) (t 24776 65209 197083 204000) 2451) nil (24777 1243 261547 956000) 0 nil] [nil nil ((nil rear-nonsticky nil 2629 . 2630) (nil fontified nil 2530 . 2630) (nil fontified t 2530 . 2630) (nil font-lock-fontified t 2530 . 2630) (nil help-echo nil 2530 . 2630) (nil src-block t 2530 . 2630) (nil org-category #249# 2530 . 2630) (nil line-prefix #261# 2530 . 2630) (nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) 2530 . 2630) (nil font-lock-multiline t 2530 . 2630) (nil face (font-lock-builtin-face org-block) 2530 . 2630) (2530 . 2630) 2529 (t 24776 65209 197083 204000)) ((#("(setq-default mode-line-buffer-identification (list -80 (propertized-buffer-identification \"%12b\")))" 0 1 (line-prefix #261# wrap-prefix #264=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face #263=(font-lock-builtin-face org-block) display nil help-echo nil src-block t org-category #249#) 1 13 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 13 52 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 52 55 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 55 91 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 91 97 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 97 99 (line-prefix #261# wrap-prefix #264# fontified nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#) 99 100 (line-prefix #261# wrap-prefix #264# fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face #263# display nil help-echo nil src-block t org-category #249#)) . 2530) (undo-tree-id2477 . -99) (undo-tree-id2478 . -99) (undo-tree-id2479 . -99) (nil face (org-block) 2629 . 2630) (nil face (org-block) 2627 . 2629) (nil face (font-lock-string-face org-block) 2621 . 2627) (nil face (org-block) 2585 . 2621) (nil face (highlight-numbers-number org-block) 2582 . 2585) (nil face (org-block) 2543 . 2582) (nil face (font-lock-keyword-face org-block) 2531 . 2543) (nil face (org-block) 2530 . 2531) (nil wrap-prefix #265=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) 2629 . 2630) (nil wrap-prefix #265# 2627 . 2629) (nil wrap-prefix #265# 2621 . 2627) (nil wrap-prefix #265# 2585 . 2621) (nil wrap-prefix #265# 2582 . 2585) (nil wrap-prefix #265# 2543 . 2582) (nil wrap-prefix #265# 2531 . 2543) (nil wrap-prefix #265# 2530 . 2531) (nil org-category nil 2629 . 2630) (nil org-category nil 2627 . 2629) (nil org-category nil 2621 . 2627) (nil org-category nil 2585 . 2621) (nil org-category nil 2582 . 2585) (nil org-category nil 2543 . 2582) (nil org-category nil 2531 . 2543) (nil org-category nil 2530 . 2531) (nil fontified nil 2629 . 2630) (nil fontified nil 2627 . 2629) (nil fontified nil 2621 . 2627) (nil fontified nil 2585 . 2621) (nil fontified nil 2582 . 2585) (nil fontified nil 2543 . 2582) (nil fontified nil 2531 . 2543) (nil fontified nil 2530 . 2531) (nil rear-nonsticky t 2629 . 2630)) (24777 874 178134 794000) 0 nil]) ((31462 . 31465) (#("e" 0 1 (fontified t line-prefix #266=#("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31462) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#(" " 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31463) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#(")" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31464) (undo-tree-id1999 . -1) (#(")" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31465) (undo-tree-id2000 . -1) 31466 (31464 . 31466)) nil (24777 874 179432 439000) 0 nil]) ((#("\"))" 0 1 (fontified t line-prefix #266# wrap-prefix #268=#("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #267=(org-block)) 1 3 (help-echo nil fontified t line-prefix #266# wrap-prefix #268# font-lock-fontified t src-block t font-lock-multiline t face #267#)) . 31464)) nil (24776 65209 175582 217000) 0 nil]) ((#("\"" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31464) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) 31465) nil (24776 65209 175834 821000) 0 nil]) ((#("UNDO" 0 4 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31465) (undo-tree-id2294 . -4) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) (undo-tree-id2336 . -2) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -2) (undo-tree-id2343 . -2) (undo-tree-id2344 . -2) (undo-tree-id2345 . -2) (undo-tree-id2346 . -2) (undo-tree-id2347 . -2) (undo-tree-id2348 . -2) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2) (undo-tree-id2351 . -2) (undo-tree-id2352 . -2) (undo-tree-id2353 . -2) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) (undo-tree-id2357 . -2) (undo-tree-id2358 . -2) (undo-tree-id2359 . -2) (undo-tree-id2360 . -2) (undo-tree-id2361 . -2) (undo-tree-id2362 . -2) (undo-tree-id2363 . -2) (undo-tree-id2364 . -2) (undo-tree-id2365 . -2) (undo-tree-id2366 . -2) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) (undo-tree-id2369 . -3) (undo-tree-id2370 . -3) (undo-tree-id2371 . -3) (undo-tree-id2372 . -3) (undo-tree-id2373 . -3) (undo-tree-id2374 . -3) (undo-tree-id2375 . -3) (undo-tree-id2376 . -3) (undo-tree-id2377 . -3) (undo-tree-id2378 . -3) (undo-tree-id2379 . -3) (undo-tree-id2380 . -3) (undo-tree-id2381 . -3) (undo-tree-id2382 . -3) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) (undo-tree-id2388 . -3) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) (undo-tree-id2422 . -4) (undo-tree-id2423 . -4) (undo-tree-id2424 . -4) (undo-tree-id2425 . -4) (undo-tree-id2426 . -4) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) (undo-tree-id2431 . -4) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) (undo-tree-id2456 . -4) (undo-tree-id2457 . -4) (undo-tree-id2458 . -4) (undo-tree-id2459 . -4) (undo-tree-id2460 . -4) (undo-tree-id2461 . -4) (undo-tree-id2462 . -4) (undo-tree-id2463 . -4) (undo-tree-id2464 . -4) (undo-tree-id2465 . -4) (undo-tree-id2466 . -4) (undo-tree-id2467 . -4) (undo-tree-id2468 . -4) (undo-tree-id2469 . -4) (undo-tree-id2470 . -4) (undo-tree-id2471 . -4) (undo-tree-id2472 . -4) (undo-tree-id2473 . -4) (undo-tree-id2474 . -4) (undo-tree-id2475 . -4) (undo-tree-id2476 . -4) 31469 (t 24776 65191 907093 784000)) nil (24776 65209 176018 666000) 0 nil]) ((#(" " 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block) display nil)) . 31363) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1)) nil (24776 65191 885854 482000) 0 nil]) ((#("\"" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31364) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1)) nil (24776 65191 886048 776000) 0 nil]) ((#("HLM" 0 3 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31365) (undo-tree-id1193 . -3) (undo-tree-id1194 . -3) (undo-tree-id1195 . -3) (undo-tree-id1196 . -3) (undo-tree-id1197 . -3) (undo-tree-id1198 . -3) (undo-tree-id1199 . -3) (undo-tree-id1200 . -3) (undo-tree-id1201 . -3) (undo-tree-id1202 . -3) (undo-tree-id1203 . -3) (undo-tree-id1204 . -3) (undo-tree-id1205 . -3) (undo-tree-id1206 . -3) (undo-tree-id1207 . -3) (undo-tree-id1208 . -3) (undo-tree-id1209 . -3) (undo-tree-id1210 . -3) (undo-tree-id1211 . -3) (undo-tree-id1212 . -3) (undo-tree-id1213 . -3) (undo-tree-id1214 . -3) (undo-tree-id1215 . -3) (undo-tree-id1216 . -3) (undo-tree-id1217 . -3) (undo-tree-id1218 . -3) (undo-tree-id1219 . -3) (undo-tree-id1220 . -3) (undo-tree-id1221 . -3) (undo-tree-id1222 . -3) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -3) (undo-tree-id1228 . -3) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . -3) (undo-tree-id1241 . -3) (undo-tree-id1242 . -3) (undo-tree-id1243 . -3) (undo-tree-id1244 . -3) (undo-tree-id1245 . -3) (undo-tree-id1246 . -3) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) (undo-tree-id1251 . -3) (undo-tree-id1252 . -3) (undo-tree-id1253 . -3) (undo-tree-id1254 . -3) (undo-tree-id1255 . -3) (undo-tree-id1256 . -3) (undo-tree-id1257 . -3) (undo-tree-id1258 . -3) (undo-tree-id1259 . -3) (undo-tree-id1260 . -3) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -3) (undo-tree-id1268 . -3) (undo-tree-id1269 . -3) (undo-tree-id1270 . -3) (undo-tree-id1271 . -3) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3) (undo-tree-id1274 . -3) (undo-tree-id1275 . -3) (undo-tree-id1276 . -3) (undo-tree-id1277 . -3) (undo-tree-id1278 . -3) (undo-tree-id1279 . -3) (undo-tree-id1280 . -3) (undo-tree-id1281 . -3) (undo-tree-id1282 . -3) (undo-tree-id1283 . -3) (undo-tree-id1284 . -3) (undo-tree-id1285 . -3) (undo-tree-id1286 . -3) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) (undo-tree-id1299 . -3) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) (undo-tree-id1311 . -3) (undo-tree-id1312 . -3) (undo-tree-id1313 . -3) (undo-tree-id1314 . -3) (undo-tree-id1315 . -3) (undo-tree-id1316 . -3) (undo-tree-id1317 . -3) (undo-tree-id1318 . -3) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3) (undo-tree-id1323 . -3) (undo-tree-id1324 . -3) (undo-tree-id1325 . -3) (undo-tree-id1326 . -3) (undo-tree-id1327 . -3) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -3) (undo-tree-id1334 . -3) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) (undo-tree-id1337 . -3) (undo-tree-id1338 . -3) (undo-tree-id1339 . -3) (undo-tree-id1340 . -3) 31368) nil (24776 65191 886185 753000) 0 nil]) ((#("\"" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31368) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) 31369 (t 24776 65186 320430 498000)) nil (24776 65191 886256 716000) 0 nil]) ((#("-" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31274)) nil (24776 65186 302022 643000) 0 nil]) ((#("\"" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31310) (#(" " 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) display nil)) . 31310) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1)) nil (24776 65186 302279 945000) 0 nil]) ((#("F" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) display nil)) . 31311) (#("U" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) display nil)) . 31311) (#("B" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) display nil)) . 31311) (#("\"" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31311)) nil (24776 65186 302291 66000) 0 nil]) ((#(" " 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) display nil)) . 31346) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1)) nil (24776 65186 302488 216000) 0 nil]) ((#("\"" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31347) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1)) nil (24776 65186 302617 388000) 0 nil]) ((#("IND" 0 3 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31348) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) 31351) nil (24776 65186 302712 957000) 0 nil]) ((#("\"" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block) display nil)) . 31351) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) 31352) nil (24776 65186 302749 225000) 0 nil]) ((31503 . 31514) (#("
" 0 1 (fontified nil line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)))) . 31503) (31502 . 31504)) nil (24776 65186 302752 611000) 0 nil]) ((31489 . 31491) (#(")" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31489) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("
" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31490) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#(")" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31491) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 31492 (31491 . 31492) (31490 . 31491)) nil (24776 65186 302760 136000) 0 nil]) ((31488 . 31490) (31484 . 31488) (#("U" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31484) (undo-tree-id702 . -1) (#("N" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31485) (undo-tree-id703 . -1) (#("D" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31486) (undo-tree-id704 . -1) (#("O" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31487) (undo-tree-id705 . -1) 31488 (31476 . 31488) (31467 . 31476) (#("u" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31467) (undo-tree-id706 . -1) (#("n" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31468) (undo-tree-id707 . -1) (#("d" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31469) (undo-tree-id708 . -1) (#("o" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31470) (undo-tree-id709 . -1) 31471 (31457 . 31471) (31455 . 31457) 31195 (31454 . 31455) 31453) nil (24776 65186 302772 298000) 0 nil]) ((31449 . 31454) (#("F" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31449) (undo-tree-id710 . -1) (#("L" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31450) (undo-tree-id711 . -1) (#("Y" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31451) (undo-tree-id712 . -1) 31452 (31451 . 31452) (#("S" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31451) (undo-tree-id713 . -1) (#("P" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31452) (undo-tree-id714 . -1) (#("L" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31453) (undo-tree-id715 . -1) 31454 (31435 . 31454) (#("o" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31435) (undo-tree-id716 . -1) (#("o" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31436) (undo-tree-id717 . -1) (#("y" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31437) (undo-tree-id718 . -1) 31438 (31423 . 31438) (31421 . 31423) 31195 (31420 . 31421) 31419) nil (24776 65186 302787 256000) 0 nil]) ((31414 . 31420) (#("'" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31414) (undo-tree-id719 . -1) 31415 (31397 . 31415) (#("s" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31397) (undo-tree-id720 . -1) 31398 (31396 . 31398) (#("v" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31396) (undo-tree-id721 . -1) (#("i" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31397) (undo-tree-id722 . -1) (#("s" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31398) (undo-tree-id723 . -1) (#("h" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31399) (undo-tree-id724 . -1) 31400 (31393 . 31400) (31386 . 31393) (#("d" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31386) (undo-tree-id725 . -1) (#("i" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31387) (undo-tree-id726 . -1) (#("m" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31388) (undo-tree-id727 . -1) 31389 (31386 . 31389) (31384 . 31386) 31195 (31383 . 31384) (31377 . 31383) (#("'" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31377) (undo-tree-id728 . -1) 31378 (31357 . 31378) (#("D" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31357) (undo-tree-id729 . -1) (#("I" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31358) (undo-tree-id730 . -1) (#("M" 0 1 (fontified t line-prefix #266# wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31359) (undo-tree-id731 . -1) 31360 (31356 . 31360) (nil fontified nil 31197 . 31199) (nil line-prefix #266# 31197 . 31199) (nil wrap-prefix #269=#("    " 0 2 (face org-indent) 2 4 (face org-indent)) 31197 . 31199) (nil font-lock-fontified t 31197 . 31199) (nil src-block t 31197 . 31199) (nil help-echo nil 31197 . 31199) (nil font-lock-multiline t 31197 . 31199) (nil face (org-block) 31197 . 31199) (31197 . 31199) (nil fontified nil 31219 . 31221) (nil line-prefix #266# 31219 . 31221) (nil wrap-prefix #269# 31219 . 31221) (nil font-lock-fontified t 31219 . 31221) (nil src-block t 31219 . 31221) (nil help-echo nil 31219 . 31221) (nil font-lock-multiline t 31219 . 31221) (nil face (org-block) 31219 . 31221) (31219 . 31221) (nil help-echo nil 31231 . 31233) (nil fontified nil 31231 . 31233) (nil line-prefix #266# 31231 . 31233) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 31231 . 31233) (nil font-lock-fontified t 31231 . 31233) (nil src-block t 31231 . 31233) (nil font-lock-multiline t 31231 . 31233) (nil face (org-block) 31231 . 31233) (31231 . 31233) (nil help-echo nil 31237 . 31239) (nil fontified nil 31237 . 31239) (nil line-prefix #266# 31237 . 31239) (nil wrap-prefix #("  " 0 2 (face org-indent)) 31237 . 31239) (nil font-lock-fontified t 31237 . 31239) (nil src-block t 31237 . 31239) (nil font-lock-multiline t 31237 . 31239) (nil face (org-block) 31237 . 31239) (31237 . 31239) (nil help-echo nil 31273 . 31275) (nil fontified nil 31273 . 31275) (nil line-prefix #266# 31273 . 31275) (nil wrap-prefix #("  " 0 2 (face org-indent)) 31273 . 31275) (nil font-lock-fontified t 31273 . 31275) (nil src-block t 31273 . 31275) (nil font-lock-multiline t 31273 . 31275) (nil face (org-block) 31273 . 31275) (31273 . 31275) (nil help-echo nil 31308 . 31310) (nil fontified nil 31308 . 31310) (nil line-prefix #266# 31308 . 31310) (nil wrap-prefix #("  " 0 2 (face org-indent)) 31308 . 31310) (nil font-lock-fontified t 31308 . 31310) (nil src-block t 31308 . 31310) (nil font-lock-multiline t 31308 . 31310) (nil face (org-block) 31308 . 31310) (31308 . 31310) (31342 . 31344) 31195 (31341 . 31342) 31340) nil (24776 65186 302829 295000) 0 nil]) ((31340 . 31341)) nil (24776 65186 302836 308000) 0 nil]) ((31335 . 31340) (#("'" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31335) (undo-tree-id732 . -1) 31336 (31323 . 31336) (31308 . 31323) (31307 . 31308)) nil (24776 65186 302839 334000) 0 nil]) ((31304 . 31307) (#("G" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31304) (undo-tree-id733 . -1) 31305 (31286 . 31305) (31278 . 31286) (#("s" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31278) (undo-tree-id734 . -1) 31279 (31273 . 31279) (31272 . 31273) (31271 . 31272)) nil (24776 65186 302844 574000) 0 nil]) ((31266 . 31270)) nil (24776 65186 302846 558000) 0 nil]) ((31266 . 31267) (31256 . 31266) (31253 . 31256) (#("l" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31253) (undo-tree-id735 . -1) (#("o" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31254) (undo-tree-id736 . -1) 31255 (31253 . 31255) (#("r" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31253) (undo-tree-id737 . -1) (#("g" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31254) (undo-tree-id738 . -1) (#("-" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31255) (undo-tree-id739 . -1) (#("m" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31256) (undo-tree-id740 . -1) (#("o" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31257) (undo-tree-id741 . -1) 31258 (#("d" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31258) (undo-tree-id742 . -1) 31259 (31255 . 31259) (#(" " 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31255) (undo-tree-id743 . -1) 31256 (31247 . 31256) (#("\"" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31247) (undo-tree-id744 . -1) 31248 (31247 . 31248) (#("e" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31247) (undo-tree-id745 . -1) (#("v" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31248) (undo-tree-id746 . -1) (#("i" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31249) (undo-tree-id747 . -1) (#("l" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31250) (undo-tree-id748 . -1) 31251 (31239 . 31251) (31237 . 31239) (31236 . 31237) (#(" " 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31236) (undo-tree-id749 . -1) 31237 (31231 . 31237) (31230 . 31231) (31221 . 31230) (nil fontified t 31195 . 31197) (nil line-prefix #266# 31195 . 31197) (nil wrap-prefix #("  " 0 2 (face org-indent)) 31195 . 31197) (nil font-lock-fontified t 31195 . 31197) (nil help-echo nil 31195 . 31197) (nil font-lock-multiline t 31195 . 31197) (nil face org-block-begin-line 31195 . 31197) (31195 . 31197) (31217 . 31219) 31195 (31216 . 31217) (31212 . 31216) (#("h" 0 1 (help-echo nil fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (font-lock-constant-face org-block) display nil)) . -31212) (undo-tree-id750 . -1) 31213 (31195 . 31213) (#("(" 0 1 (fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -31195) (undo-tree-id751 . -1) 31196 (31195 . 31196) (#("e" 0 1 (fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31195) (undo-tree-id752 . -1) (#("i" 0 1 (fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31196) (undo-tree-id753 . -1) 31197 (31195 . 31197) (31194 . 31195) (31190 . 31194) (#("m" 0 1 (fontified t line-prefix #266# wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -31190) (undo-tree-id754 . -1) 31191 (31189 . 31191) (31177 . 31199) (31176 . 31177) (31168 . 31176)) nil (24776 65186 302879 469000) 0 nil]) ((31166 . 31168) 30534 (t 24776 63984 243370 971000)) nil (24776 65186 302886 773000) 0 nil] [nil ([nil nil ((#("t" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #271=#("    " 0 4 (face org-indent)) org-category #270="settings" src-block t help-echo nil font-lock-fontified t fontified t)) . 445) (undo-tree-id0 . 1)) ((445 . 446)) (24776 63982 65851 993000) 0 nil]) ((#(";(\"<" 0 1 (display nil face (font-lock-comment-delimiter-face . #273=(org-block)) font-lock-multiline t wrap-prefix #272=#("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #271# org-category #270# src-block t help-echo nil font-lock-fontified t fontified t) 1 2 (display nil face #274=(font-lock-comment-face . #273#) font-lock-multiline t wrap-prefix #272# line-prefix #271# org-category #270# src-block t help-echo nil font-lock-fontified t fontified t) 2 4 (display nil face #274# font-lock-multiline t wrap-prefix #272# line-prefix #271# org-category #270# src-block t help-echo nil font-lock-fontified t fontified t)) . 445) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . 3)) ((445 . 449)) (24776 63982 66270 268000) 0 nil]) ((445 . 446) (#("?" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #271# org-category #270# src-block t help-echo nil font-lock-fontified t fontified t)) . -445) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 446 (445 . 446) (t 24776 63514 981992 226000)) nil (24776 63982 603803 726000) 0 nil]) ((25447 . 25492) (#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 25447) (25447 . 25458) (t 24776 62976 589928 929000)) nil (24776 63514 980426 801000) 0 nil]) ((539 . 541) (539 . 570) (#(": helm-find-files
" 0 9 (face org-code wrap-prefix #277=#("    " 0 4 (face org-indent)) line-prefix #276=#("    " 0 4 (face org-indent)) org-category #275="settings" fontified t) 9 18 (face org-code wrap-prefix #277# line-prefix #276# org-category #275# fontified t)) . 539)) nil (24776 62976 573738 35000) 0 nil]) ((486 . 487) (475 . 486) (469 . 475) (#("persiste" 0 1 (display nil face #278=(org-block) font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 1 2 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 2 3 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 3 4 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 4 5 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 5 6 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 6 7 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t) 7 8 (display nil face #278# font-lock-multiline t org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -469) (undo-tree-id0 . -8) (undo-tree-id1 . -8) 477 (#("n" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -477) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("t" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -478) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 479 (468 . 479) (457 . 468) (#("e" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -457) (undo-tree-id6 . -1) (#("l" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -458) (undo-tree-id7 . -1) (#("m" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -459) (undo-tree-id8 . -1) (#("-" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -460) (undo-tree-id9 . -1) (#("e" 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -461) (undo-tree-id10 . -1) 462 (453 . 462) (#(" " 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -453) (undo-tree-id11 . -1) (#("." 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -454) (undo-tree-id12 . -1) (#(" " 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -455) (undo-tree-id13 . -1) 456 (453 . 456) (#(" " 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -453) (undo-tree-id14 . -1) 454 (445 . 454) (#(" " 0 1 (display nil face (org-block) font-lock-multiline t wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #276# org-category #275# src-block t help-echo nil font-lock-fontified t fontified t)) . -445) (undo-tree-id15 . -1) 446 (441 . 446) (440 . 441) (t 24776 62110 525729 745000)) nil (24776 62976 573793 58000) 0 nil]) nil nil (24776 62976 573797 877000) 0 nil] #279# 98238 222 nil)